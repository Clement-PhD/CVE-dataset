

import re


class PullRequest:
    """Class to represent a pull request."""

    def __init__(self, url : str):
        """get the pull request data from the url"""
        self.url = url

        data = PullRequest.__extract_github_pr_details(self.url)
        if data:
            self.owner, self.repo, self.number = data
        else:
            raise ValueError('Invalid URL')

    @staticmethod
    def __extract_github_pr_details(url : str):
        pattern = r'https://github\.com/(?P<owner>[^/]+)/(?P<repo>[^/]+)/pull/(?P<number>\d+)'
        match = re.search(pattern, url)
        if match:
            return match.group('owner'), match.group('repo'), match.group('number')
        else:
            return None
        
    def get_github_api_path(self):
        """Return the Github API PATH for this pull request"""
        return f'/repos/{self.owner}/{self.repo}/pulls/{self.number}'
    
    def get_github_api_files_path(self):
        """Return the Github file PATH for this pull request"""
        return f'/repos/{self.owner}/{self.repo}/pulls/{self.number}/files'
    