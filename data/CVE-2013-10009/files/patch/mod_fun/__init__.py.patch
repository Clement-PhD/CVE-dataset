@@ -39,6 +39,8 @@ def snack(self, params):
         self.parent.privmsg(u':)', params.channel)
 
     def geben(self, params, name, words):
+        if (self.check_name(params.args[0], params.channel)):
+            return
         if len(params.args) == 1:
             if params.target == params.args[0]:
                 keks = self.aendern(params.target, 0, name)
@@ -50,6 +52,8 @@ def geben(self, params, name, words):
             self.parent.privmsg(u'hast du nicht was vergessen? (Du hast %i %s)' % (self.aendern(params.target, 0, name), words['plural']), params.channel)
     
     def klauen(self, params, name, words):
+        if (self.check_name(params.args[0], params.channel)):
+            return
         if len(params.args) == 1:
             if params.target == params.args[0]:
                 self.parent.privmsg(u'Du klaust dir selber 1 %s. Das war eine drastische Ã„nderung. NICHT!' % words['singular'], params.channel)
@@ -67,7 +71,7 @@ def klauen(self, params, name, words):
             self.parent.privmsg(u'hast du nicht was vergessen?', params.channel)
     
     def aendern(self, name, amount, item):
-        keks = self.DBcursor.execute(u"SELECT nickname, count from kekse WHERE nickname like '%s' AND item =='%s' LIMIT 1" % (name, item)).fetchall()
+        keks = self.DBcursor.execute(u"SELECT nickname, count from kekse WHERE nickname like ? AND item ==? LIMIT 1", (name, item)).fetchall()
         if(len(keks)>0 and len(keks[0]) > 1):
             keks = keks[0][1]
             if amount == 0:
@@ -102,7 +106,7 @@ def lesen(self, params, name, words):
                 anrede=u"%s hat" % params.args[0]
             self.parent.privmsg(u"%s %i %s." % (anrede, keks, words['plural']), params.channel)
         elif len(params.args) == 0:
-            keks = self.DBcursor.execute(u"SELECT `nickname`, `count` from kekse WHERE item=='%s' AND `count`>=1 ORDER BY `count` DESC LIMIT 10" % (name)).fetchall()
+            keks = self.DBcursor.execute(u"SELECT `nickname`, `count` from kekse WHERE item==? AND `count`>=1 ORDER BY `count` DESC LIMIT 10", (name)).fetchall()
             if len(keks) <= 0:
                 self.parent.privmsg(u"Es gibt noch keine %s?" % words['plural'], params.channel)
                 return
@@ -119,4 +123,10 @@ def lesen(self, params, name, words):
         else:
             self.parent.privmsg(u"Ich hab keine Ahnung was du mir damit sagen willst...", params.channel)
             return
-        
\ No newline at end of file
+
+    def check_name(self, target, channel):
+        valid_names = self.parent.channels[channel]
+        invalid = target not in valid_names
+        if (invalid):
+            self.parent.privmsg(u'%s ist gar nicht hier...' % target, channel)
+        return invalid
\ No newline at end of file