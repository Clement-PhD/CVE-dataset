@@ -6,19 +6,12 @@
 
 angular.module('xdLocalStorage', [])
   .service('xdLocalStorage', ['$q', '$rootScope', function ($q, $rootScope) {
-    var iframeReady = false;
     var apiReady = $q.defer();
 
-    var unregister = $rootScope.$watch(function () {
-      return iframeReady;
-    }, function () {
-      apiReady.resolve(true);
-      unregister();
-    });
-
     function waitForApi() {
       if (!xdLocalStorage.wasInit()) {
-        throw 'You must init xdLocalStorage in app config before use';
+        apiReady.reject();
+        console.warn('You must init xdLocalStorage in app config before use');
       }
       return apiReady.promise;
     }
@@ -28,21 +21,23 @@ angular.module('xdLocalStorage', [])
         var defer = $q.defer();
         xdLocalStorage[method].apply(this, args.concat(function () {
           var result = arguments[0];
-          $rootScope.$apply(function () {
-            defer.resolve(result);
-          });
+          defer.resolve(result);
         }));
         return defer.promise;
       });
     }
     return {
       init: function (options) {
         var defer = $q.defer();
-        options.initCallback = function () {
-          $rootScope.$apply(function () {
-            iframeReady = true;
+        options.initCallback = function (localStorageSupported) {
+          if (localStorageSupported) {
+            apiReady.resolve();
             defer.resolve();
-          });
+          } else {
+            apiReady.reject();
+            defer.reject();
+            console.warn('localStorage not supported in iframe');
+          }
         };
         xdLocalStorage.init(options);
         return defer.promise;