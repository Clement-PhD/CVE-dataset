@@ -4,7 +4,7 @@
 import java.util.Set;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import org.infinispan.client.hotrod.configuration.ClientIntelligence;
+import org.infinispan.client.hotrod.configuration.Configuration;
 import org.infinispan.client.hotrod.impl.protocol.Codec;
 import org.infinispan.client.hotrod.impl.transport.Transport;
 import org.infinispan.client.hotrod.impl.transport.TransportFactory;
@@ -19,8 +19,8 @@ public class FaultTolerantPingOperation extends RetryOnFailureOperation<PingOper
 
    protected FaultTolerantPingOperation(Codec codec, TransportFactory transportFactory,
                                         byte[] cacheName, AtomicInteger topologyId, int flags,
-                                        ClientIntelligence clientIntelligence) {
-      super(codec, transportFactory, cacheName, topologyId, flags, clientIntelligence);
+                                        Configuration cfg) {
+      super(codec, transportFactory, cacheName, topologyId, flags, cfg);
    }
 
    @Override
@@ -30,7 +30,7 @@ protected Transport getTransport(int retryCount, Set<SocketAddress> failedServer
 
    @Override
    protected PingOperation.PingResult executeOperation(Transport transport) {
-      return new PingOperation(codec, topologyId, clientIntelligence, transport, cacheName).execute();
+      return new PingOperation(codec, topologyId, cfg, transport, cacheName).execute();
    }
 
 }