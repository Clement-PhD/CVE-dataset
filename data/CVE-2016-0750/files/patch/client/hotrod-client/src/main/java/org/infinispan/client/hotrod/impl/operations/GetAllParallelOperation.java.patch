@@ -10,7 +10,7 @@
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.stream.Collectors;
 
-import org.infinispan.client.hotrod.configuration.ClientIntelligence;
+import org.infinispan.client.hotrod.configuration.Configuration;
 import org.infinispan.client.hotrod.impl.protocol.Codec;
 import org.infinispan.client.hotrod.impl.transport.TransportFactory;
 
@@ -22,8 +22,8 @@ public class GetAllParallelOperation<K, V> extends ParallelHotRodOperation<Map<K
    private final Set<byte[]> keys;
 
    protected GetAllParallelOperation(Codec codec, TransportFactory transportFactory, Set<byte[]> keys, byte[]
-         cacheName, AtomicInteger topologyId, int flags, ClientIntelligence clientIntelligence, ExecutorService executorService) {
-      super(codec, transportFactory, cacheName, topologyId, flags, clientIntelligence, executorService);
+         cacheName, AtomicInteger topologyId, int flags, Configuration cfg, ExecutorService executorService) {
+      super(codec, transportFactory, cacheName, topologyId, flags, cfg, executorService);
       this.keys = keys;
    }
 
@@ -43,7 +43,7 @@ protected List<GetAllOperation<K, V>> mapOperations() {
 
       return splittedKeys.values().stream().map(
             keysSubset -> new GetAllOperation<K, V>(codec, transportFactory, keysSubset, cacheName, topologyId,
-                  flags, clientIntelligence)).collect(Collectors.toList());
+                  flags, cfg)).collect(Collectors.toList());
    }
 
    @Override