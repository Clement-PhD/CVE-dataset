@@ -1,8 +1,10 @@
 package org.infinispan.client.hotrod.impl.operations;
 
+import java.util.List;
 import java.util.concurrent.atomic.AtomicInteger;
 
 import org.infinispan.client.hotrod.configuration.ClientIntelligence;
+import org.infinispan.client.hotrod.configuration.Configuration;
 import org.infinispan.client.hotrod.impl.protocol.Codec;
 import org.infinispan.client.hotrod.impl.protocol.HotRodConstants;
 import org.infinispan.client.hotrod.impl.transport.Transport;
@@ -21,8 +23,8 @@ public class GetOperation<V> extends AbstractKeyOperation<V> {
 
    public GetOperation(Codec codec, TransportFactory transportFactory,
                        Object key, byte[] keyBytes, byte[] cacheName, AtomicInteger topologyId, int flags,
-                       ClientIntelligence clientIntelligence) {
-      super(codec, transportFactory, key, keyBytes, cacheName, topologyId, flags, clientIntelligence);
+                       Configuration cfg) {
+      super(codec, transportFactory, key, keyBytes, cacheName, topologyId, flags, cfg);
    }
 
    @Override
@@ -33,7 +35,7 @@ public V executeOperation(Transport transport) {
          result = null;
       } else {
          if (HotRodConstants.isSuccess(status)) {
-            result = codec.readUnmarshallByteArray(transport, status);
+            result = codec.readUnmarshallByteArray(transport, status, cfg.serialWhitelist());
          }
       }
       return result;