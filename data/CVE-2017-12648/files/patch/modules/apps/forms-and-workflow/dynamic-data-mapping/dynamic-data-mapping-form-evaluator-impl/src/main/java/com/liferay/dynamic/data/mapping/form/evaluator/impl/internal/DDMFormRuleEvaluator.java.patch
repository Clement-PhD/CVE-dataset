@@ -17,24 +17,22 @@
 import com.liferay.dynamic.data.mapping.expression.DDMExpression;
 import com.liferay.dynamic.data.mapping.expression.DDMExpressionException;
 import com.liferay.dynamic.data.mapping.expression.DDMExpressionFactory;
-import com.liferay.dynamic.data.mapping.expression.DDMExpressionFunction;
 import com.liferay.dynamic.data.mapping.model.DDMFormRule;
 import com.liferay.portal.kernel.log.Log;
 import com.liferay.portal.kernel.log.LogFactoryUtil;
 
-import java.util.HashMap;
-import java.util.Map;
-
 /**
  * @author Leonardo Barros
  */
 public class DDMFormRuleEvaluator {
 
 	public DDMFormRuleEvaluator(
-		DDMFormRule ddmFormRule, DDMExpressionFactory ddmExpressionFactory) {
+		DDMFormRule ddmFormRule, DDMExpressionFactory ddmExpressionFactory,
+		DDMExpressionFunctionRegister ddmExpressionFunctionRegister) {
 
 		_ddmFormRule = ddmFormRule;
 		_ddmExpressionFactory = ddmExpressionFactory;
+		_ddmExpressionFunctionRegister = ddmExpressionFunctionRegister;
 	}
 
 	public void evaluate() {
@@ -54,15 +52,9 @@ public void evaluate() {
 		}
 	}
 
-	public void setDDMExpressionFunction(
-		String functionName, DDMExpressionFunction ddmExpressionFunction) {
-
-		_ddmExpressionFunctionsMap.put(functionName, ddmExpressionFunction);
-	}
-
 	protected boolean evaluateCondition(String condition) {
 		try {
-			return evaluateDDMExpression(_ddmFormRule.getCondition());
+			return evaluateDDMExpression(condition);
 		}
 		catch (DDMExpressionException ddmee) {
 			if (_log.isDebugEnabled()) {
@@ -80,7 +72,8 @@ protected boolean evaluateDDMExpression(String ddmExpressionString)
 			_ddmExpressionFactory.createBooleanDDMExpression(
 				ddmExpressionString);
 
-		setDDMExpressionFunctions(ddmExpression);
+		_ddmExpressionFunctionRegister.applyDDMExpressionFunctions(
+			ddmExpression);
 
 		return ddmExpression.evaluate();
 	}
@@ -96,21 +89,11 @@ protected void executeAction(String action) {
 		}
 	}
 
-	protected void setDDMExpressionFunctions(DDMExpression<?> ddmExpression) {
-		for (Map.Entry<String, DDMExpressionFunction> entry :
-				_ddmExpressionFunctionsMap.entrySet()) {
-
-			ddmExpression.setDDMExpressionFunction(
-				entry.getKey(), entry.getValue());
-		}
-	}
-
 	private static final Log _log = LogFactoryUtil.getLog(
 		DDMFormRuleEvaluator.class);
 
 	private final DDMExpressionFactory _ddmExpressionFactory;
-	private final Map<String, DDMExpressionFunction>
-		_ddmExpressionFunctionsMap = new HashMap<>();
+	private final DDMExpressionFunctionRegister _ddmExpressionFunctionRegister;
 	private final DDMFormRule _ddmFormRule;
 
 }
\ No newline at end of file