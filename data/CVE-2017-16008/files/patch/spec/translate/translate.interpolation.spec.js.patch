@@ -128,7 +128,8 @@ describe('default i18next way - with escaping interpolated arguments per default
         interpolationTest1: 'added __toAdd__',
         interpolationTest5: 'added __toAddHTML__',
         interpolationTest6: 'added __child.oneHTML__',
-        interpolationTest7: 'added __toAddHTML__ __toAdd__'
+        interpolationTest7: 'added __toAddHTML__ __toAdd__',
+        interpolationTest8: 'added __toAdd1__ __toAdd2__',
       } 
     }
   };
@@ -149,6 +150,10 @@ describe('default i18next way - with escaping interpolated arguments per default
     expect(i18n.t('interpolationTest6', { child: { one: '<1>'}})).to.be('added <1>');
   });
 
+  it("should not accept interpolations from inside interpolations", function() {
+      expect(i18n.t('interpolationTest8', { toAdd1: '__toAdd2HTML__', toAdd2: '<html>'})).to.be('added __toAdd2HTML__ &lt;html&gt;');
+  });
+
   it("it should support both escaping and not escaping HTML", function() {
     expect(i18n.t('interpolationTest7', {toAdd: '<html>', escapeInterpolation: true})).to.be('added <html> &lt;html&gt;');
   });