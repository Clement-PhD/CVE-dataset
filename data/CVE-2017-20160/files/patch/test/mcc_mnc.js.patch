@@ -1,10 +1,9 @@
-"use strict";
+'use strict';
 
-var expresss = require('express')
-  , _ = require('underscore')
+var express = require('express')
+  , _ = require('lodash/core')
   , request = require('supertest')
   , imsiList = require('../dat/mcc_mnc.json')
-  , jsonDiff = require('json-diff').diff
   , fetcher = require('../');
 
 describe('It can ', function() {
@@ -14,7 +13,7 @@ describe('It can ', function() {
     , expectedList;
 
   beforeEach(function (done) {
-    app = expresss();
+    app = express();
     //additional custom option
     // key : your key name within http request
     // val : default property of req(express value)
@@ -30,54 +29,67 @@ describe('It can ', function() {
   });
 
   it('fetch imsi info by mcc', function(done) {
-    var options
-      , queryString = 'mcc=' + mcc;
-
     app.use(function(req, res, next) {
-      var required = ['ipaddr'];
+      var required = ['ipaddr']
+        , options = req.fetchParameter(required);
 
-      options = req.fetchParameter(required);
       if (req.checkParamErr(options)) return next(options);
 
-      var imsi = req.headers['x-flt-imsi'];
+      var imsi = req.headers['x-fetcher-imsi'];
 
-      if (jsonDiff(imsi, expectedList)) {
+      if (!_.isEqual(imsi, expectedList)) {
         throw new Error('Not match imsi info!');
       }
       return res.send(options);
     });
 
     request(app)
-      .get('/required?' + queryString)
+      .get('/required')
+      .query('mcc=' + mcc)
       .expect(200, done);
   });
 
   it('fetch imsi info by mcc and mnc', function(done) {
-    var options
-      , queryString = 'mcc=' + mcc + '&mnc=' + mnc;
-
     app.use(function(req, res, next) {
-      var required = ['ipaddr'];
+      var required = ['ipaddr']
+        , options = req.fetchParameter(required);
 
-      options = req.fetchParameter(required);
       if (req.checkParamErr(options)) return next(options);
 
       expectedList = _.filter(imsiList, function(el) {
         return (el.mcc == mcc && el.mnc == mnc);
       });
-      var imsi = req.headers['x-flt-imsi'];
+      var imsi = req.headers['x-fetcher-imsi'];
 
-      if (jsonDiff(imsi, expectedList)) {
+      if (!_.isEqual(imsi, expectedList)) {
         throw new Error('Not match imsi info!');
       }
 
       return res.send(options);
     });
 
     request(app)
-      .get('/required?' + queryString)
+      .get('/required')
+      .query('mcc=' + mcc)
+      .query('mnc=' + mnc)
       .expect(200, done);
-
   });
 
+  it('fetch access country from remote ip address after apply "imsi" additional options', function(done) {
+    var extraOption = {'access-country': true};
+    app.use(fetcher(extraOption));
+
+    app.use(function(req, res, next) {
+      var options = req.fetchParameter([], ['ipaddr', 'access-country']);
+      if (req.checkParamErr(options)) return next(options);
+
+      return res.send(options['access-country']);
+    });
+
+    request(app)
+      .get('/imsi')
+      .query('mcc=450')
+      .query('mnc=2')
+      .expect(200, 'KR', done);
+  });
 });
