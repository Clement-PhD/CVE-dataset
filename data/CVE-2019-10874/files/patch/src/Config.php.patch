@@ -3,6 +3,7 @@
 namespace Bolt;
 
 use Bolt\Collection\Arr;
+use Bolt\Collection\Bag;
 use Bolt\Common\Deprecated;
 use Bolt\Controller\Zone;
 use Bolt\Filesystem\Exception\FileNotFoundException;
@@ -308,18 +309,21 @@ protected function parseGeneral()
                 // as a regex-like string, and we switched to an array. If we find the old style, fall back to the defaults.
                 unset($general['accept_file_types']);
             }
-            // accept uppercase and lowercase file extensions
-            $general['accept_file_types'] = array_unique(
-                array_merge(
-                    $general['accept_file_types'],
-                    array_map(function ($extension) {
-                        return strtolower($extension);
-                    }, $general['accept_file_types']),
-                    array_map(function ($extension) {
-                        return strtoupper($extension);
-                    }, $general['accept_file_types'])
-                )
-            );
+
+            // To remove unacceptable / unwanted extensions from the list of Acceptable File Types
+            $removeFromAllowedFileTypes = explode('|', 'sh|asp|cgi|php|php3|ph3|php4|ph4|php5|ph5|phtm|phtml');
+
+            // Create a bag with lowercased extensions
+            $bag = Bag::from($general['accept_file_types']);
+            $bag = $bag->map(function ($key, $ext) use ($removeFromAllowedFileTypes) {
+                if (!in_array(mb_strtolower($ext), $removeFromAllowedFileTypes)) {
+                    return mb_strtolower($ext);
+                } else {
+                    return null;
+                }
+            })->clean();
+
+            $general['accept_file_types'] = array_values($bag->toArray());
         }
 
         // Make sure Bolt's mount point is OK: