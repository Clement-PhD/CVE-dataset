@@ -72,6 +72,8 @@ def create(name, urlstring, directory, options, conf = {}, **kwargs):
 
     @staticmethod
     def create_dependency_tree(source_dir, url=None, options=None, update=False):
+        # make sure the separator is present
+        source_dir_rp = os.path.join(os.path.abspath(source_dir), '')
         root = Subproject.create("root", url, source_dir, {}, {}, toplevel = True)
         if url and update:
             root.checkout()
@@ -98,7 +100,15 @@ def add_module(parent, name, uri, options, conf, **kwargs):
             if uri is None:
                 # options add only, lookup from existing modules
                 uri = modules[name].urlstring
-            newmodule = Subproject.create(name, uri, join(subproject_dir, name), options, conf, **kwargs)
+            target_dir = join(subproject_dir, name)
+            target_dir_rp = os.path.join(os.path.abspath(target_dir), '')
+            if not target_dir_rp.startswith(source_dir_rp):
+                raise QuarkError("""
+Subproject `%s` (URI: %s)
+is trying to escape from the main project directory (`%s`)
+subproject abspath:   %s
+main project abspath: %s""" % (name, uri, source_dir, target_dir_rp, source_dir_rp))
+            newmodule = Subproject.create(name, uri, target_dir, options, conf, **kwargs)
             mod = modules.setdefault(name, newmodule)
             if mod is newmodule:
                 mod.parents.add(parent)