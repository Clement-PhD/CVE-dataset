@@ -11,16 +11,26 @@
 @Component
 public class DropSchemaResolver {
 
+    @Deprecated
     private static final String DEFAULT_COMMAND = "DROP SCHEMA IF EXISTS %s CASCADE";
+    private static final String DEFAULT_SQL_COMMAND = "DROP SCHEMA IF EXISTS ? CASCADE";
 
+    @Deprecated
     private static final Map<String, String> DB_COMMANDS = new HashMap<>();
+    private static final Map<String, String> DB_SQL_COMMANDS = new HashMap<>();
 
     static {
         DB_COMMANDS.put("POSTGRESQL", DEFAULT_COMMAND);
         DB_COMMANDS.put("H2", DEFAULT_COMMAND);
+
+        DB_SQL_COMMANDS.put("POSTGRESQL", DEFAULT_SQL_COMMAND);
+        DB_SQL_COMMANDS.put("H2", DEFAULT_SQL_COMMAND);
     }
 
-    private String dbDropSchemaCommand;
+    @Deprecated
+    private final String dbDropSchemaCommand;
+
+    private final String dbDropSchemaSqlCommand;
 
     /**
      * DropSchemaResolver constructor.
@@ -29,11 +39,20 @@ public class DropSchemaResolver {
     public DropSchemaResolver(Environment env) {
         String db = env.getProperty("spring.jpa.database");
         this.dbDropSchemaCommand = DB_COMMANDS.getOrDefault(db, DEFAULT_COMMAND);
-        log.info("Database {} will use command '{}' for drop schema", db, dbDropSchemaCommand);
+        this.dbDropSchemaSqlCommand = DB_SQL_COMMANDS.getOrDefault(db, DEFAULT_SQL_COMMAND);
+        log.info("Database {} will use command '{}' for drop schema", db, dbDropSchemaSqlCommand);
     }
 
+    /**
+     * @deprecated use getSchemaDropSqlCommand instead
+     */
+    @Deprecated
     public String getSchemaDropCommand() {
         return this.dbDropSchemaCommand;
     }
 
+    public String getSchemaDropSqlCommand() {
+        return this.dbDropSchemaSqlCommand;
+    }
+
 }
