@@ -60,13 +60,11 @@ public class XMLValidator {
 	public static void doDiagnostics(DOMDocument document, XMLEntityResolver entityResolver,
 			List<Diagnostic> diagnostics, ContentModelSettings contentModelSettings, CancelChecker monitor) {
 		try {
-			// It should be better to cache XML Schema with XMLGrammarCachingConfiguration,
-			// but we cannot use
-			// XMLGrammarCachingConfiguration because cache is done with target namespaces.
-			// There are conflicts when
-			// 2 XML Schemas don't define target namespaces.
+			XMLValidationSettings validationSettings = contentModelSettings != null
+					? contentModelSettings.getValidation()
+					: null;
 			LSPXMLParserConfiguration configuration = new LSPXMLParserConfiguration(
-					isDisableOnlyDTDValidation(document));
+					isDisableOnlyDTDValidation(document), validationSettings);
 
 			if (entityResolver != null) {
 				configuration.setProperty("http://apache.org/xml/properties/internal/entity-resolver", entityResolver); //$NON-NLS-1$
@@ -87,9 +85,6 @@ public static void doDiagnostics(DOMDocument document, XMLEntityResolver entityR
 			boolean hasGrammar = document.hasGrammar();
 
 			// If diagnostics for Schema preference is enabled
-			XMLValidationSettings validationSettings = contentModelSettings != null
-					? contentModelSettings.getValidation()
-					: null;
 			if ((validationSettings == null) || validationSettings.isSchema()) {
 
 				checkExternalSchema(document.getExternalSchemaLocation(), parser);
@@ -211,6 +206,8 @@ public String setupCurrentEntity(String name, XMLInputSource xmlInputSource, boo
 
 			SAXParser parser = new SAXParser(configuration);
 			parser.setProperty("http://apache.org/xml/properties/internal/entity-manager", entityManager);
+			parser.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", true);
+
 			InputSource inputSource = new InputSource();
 			inputSource.setByteStream(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8)));
 			inputSource.setSystemId(document.getDocumentURI());