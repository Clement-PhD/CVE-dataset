@@ -117,16 +117,6 @@ int cjwt_alg_str_to_enum( const char *alg_str )
     return -1;
 }
 
-static cjwt_alg_t __cjwt_alg_str_to_enum( const char *alg_str )
-{
-  int alg = cjwt_alg_str_to_enum (alg_str);
-
-  if (alg >= 0)
-		return alg;
-	else
-		return alg_none;
-}
-
 
 inline static void cjwt_delete_child_json( cJSON* j, const char* s )
 {
@@ -357,12 +347,14 @@ static int cjwt_verify_signature( cjwt_t *p_jwt, char *p_in, const char *p_sign
     if( sz_signed != out_size ) {
         cjwt_info( "Signature length mismatch: enc %d, signature %d\n",
                    ( int )sz_signed, ( int )out_size );
-        ret = -1;
+        ret = EINVAL;
         goto err_match;
     }
 
-    ret = CRYPTO_memcmp(
-              ( unsigned char* )signed_out, ( unsigned char* )signed_dec, out_size );
+    if( 0 != CRYPTO_memcmp(signed_out, signed_dec, out_size) ) {
+        ret = EINVAL;
+    }
+
 err_match:
     free( signed_dec );
 err_decode:
@@ -384,7 +376,8 @@ static int cjwt_update_payload( cjwt_t *p_cjwt, char *p_decpl )
     cJSON *j_payload = cJSON_Parse( ( char* )p_decpl );
 
     if( !j_payload ) {
-        return ENOMEM;
+        // The data is probably not json vs. memory allocation error.
+        return EINVAL;
     }
 
     //extract data
@@ -562,6 +555,7 @@ static int cjwt_update_payload( cjwt_t *p_cjwt, char *p_decpl )
 }
 
 static int cjwt_update_header( cjwt_t *p_cjwt, char *p_dechead )
+    // The data is probably not json vs. memory allocation error.
 {
     if( !p_cjwt || !p_dechead ) {
         return EINVAL;
@@ -571,7 +565,8 @@ static int cjwt_update_header( cjwt_t *p_cjwt, char *p_dechead )
     cJSON *j_header = cJSON_Parse( ( char* )p_dechead );
 
     if( !j_header ) {
-        return ENOMEM;
+        // The data is probably not json vs. memory allocation error.
+        return EINVAL;
     }
 
     cjwt_info( "Json  = %s\n", cJSON_Print( j_header ) );
@@ -586,7 +581,14 @@ static int cjwt_update_header( cjwt_t *p_cjwt, char *p_dechead )
     cJSON* j_alg = cJSON_GetObjectItem( j_header, "alg" );
 
     if( j_alg ) {
-        p_cjwt->header.alg = __cjwt_alg_str_to_enum( j_alg->valuestring );
+        int alg;
+
+        alg = cjwt_alg_str_to_enum( j_alg->valuestring );
+        if( -1 == alg ) {
+            cJSON_Delete( j_header );
+            return ENOTSUP;
+        }
+        p_cjwt->header.alg = alg;
     }
 
     //destroy cJSON object
@@ -711,7 +713,6 @@ int cjwt_decode( const char *encoded, unsigned int options, cjwt_t **jwt,
     int ret = 0;
     char *payload, *signature;
     ( void )options; //suppressing unused parameter warning
-    ( void ) options;
 
     //validate inputs
     if( !encoded || !jwt ) {