@@ -20,6 +20,7 @@ limitations under the License.
 #pragma once
 
 #include <memory>
+#include <map>
 
 extern "C" {
 #include "lua.h"
@@ -66,6 +67,13 @@ class falco_outputs : public falco_common
 	void handle_event(gen_event *ev, std::string &rule, std::string &source,
 			  falco_common::priority_type priority, std::string &format);
 
+	// Send a generic message to all outputs. Not necessarily associated with any event.
+	void handle_msg(uint64_t now,
+			falco_common::priority_type priority,
+			std::string &msg,
+			std::string &rule,
+			std::map<std::string,std::string> &output_fields);
+
 	void reopen_outputs();
 
 	static int handle_http(lua_State *ls);
@@ -81,8 +89,11 @@ class falco_outputs : public falco_common
 
 	bool m_buffered;
 
+	bool m_json_output;
+
 	std::string m_lua_add_output = "add_output";
 	std::string m_lua_output_event = "output_event";
+	std::string m_lua_output_msg = "output_msg";
 	std::string m_lua_output_cleanup = "output_cleanup";
 	std::string m_lua_output_reopen = "output_reopen";
 	std::string m_lua_main_filename = "output.lua";