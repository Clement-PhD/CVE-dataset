@@ -35,7 +35,6 @@ class AuthService(BaseService):
     def __init__(self):
         self.user_map = dict()
         self.log = self.add_service('auth_svc', self)
-        self.bypass = 'localhost:'
 
     async def apply(self, app, users):
         """
@@ -89,8 +88,6 @@ async def check_permissions(self, group, request):
         try:
             if request.headers.get('KEY') == self.get_config('api_key'):
                 return True
-            elif self.bypass in request.host:
-                return True
             await check_permission(request, group)
         except (HTTPUnauthorized, HTTPForbidden):
             raise web.HTTPFound('/login')
@@ -100,8 +97,6 @@ async def get_permissions(self, request):
         identity = await identity_policy.identify(request)
         if identity in self.user_map:
             return [self.Access[p.upper()] for p in self.user_map[identity].permissions]
-        elif self.bypass in request.host:
-            return self.Access.RED, self.Access.APP
         elif request.headers.get('KEY') == self.get_config('api_key'):
             return self.Access.RED, self.Access.BLUE, self.Access.BLUE
         return ()