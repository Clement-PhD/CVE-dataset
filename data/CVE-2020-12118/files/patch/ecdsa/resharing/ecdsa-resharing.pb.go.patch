@@ -85,6 +85,8 @@ type DGRound2Message1 struct {
 	NTilde               []byte   `protobuf:"bytes,3,opt,name=n_tilde,json=nTilde,proto3" json:"n_tilde,omitempty"`
 	H1                   []byte   `protobuf:"bytes,4,opt,name=h1,proto3" json:"h1,omitempty"`
 	H2                   []byte   `protobuf:"bytes,5,opt,name=h2,proto3" json:"h2,omitempty"`
+	Dlnproof_1           [][]byte `protobuf:"bytes,6,rep,name=dlnproof_1,json=dlnproof1,proto3" json:"dlnproof_1,omitempty"`
+	Dlnproof_2           [][]byte `protobuf:"bytes,7,rep,name=dlnproof_2,json=dlnproof2,proto3" json:"dlnproof_2,omitempty"`
 	XXX_NoUnkeyedLiteral struct{} `json:"-"`
 	XXX_unrecognized     []byte   `json:"-"`
 	XXX_sizecache        int32    `json:"-"`
@@ -150,6 +152,20 @@ func (m *DGRound2Message1) GetH2() []byte {
 	return nil
 }
 
+func (m *DGRound2Message1) GetDlnproof_1() [][]byte {
+	if m != nil {
+		return m.Dlnproof_1
+	}
+	return nil
+}
+
+func (m *DGRound2Message1) GetDlnproof_2() [][]byte {
+	if m != nil {
+		return m.Dlnproof_2
+	}
+	return nil
+}
+
 //
 // The Round 2 "ACK" is broadcast to peers of the Old Committee in this message.
 type DGRound2Message2 struct {
@@ -310,23 +326,24 @@ func init() {
 func init() { proto.RegisterFile("protob/ecdsa-resharing.proto", fileDescriptor_f7d3ae1dc68dc295) }
 
 var fileDescriptor_f7d3ae1dc68dc295 = []byte{
-	// 285 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
-	0x14, 0xc6, 0x69, 0xe7, 0x26, 0xbe, 0xcd, 0xcd, 0x05, 0xc1, 0x1c, 0x54, 0x66, 0x40, 0xe8, 0x45,
-	0x47, 0x3b, 0x2f, 0x5e, 0x75, 0xe0, 0x49, 0x19, 0xc5, 0x83, 0x7a, 0x09, 0xed, 0x1a, 0xd7, 0x42,
-	0x9b, 0x94, 0x34, 0x2d, 0xfa, 0x67, 0xf8, 0x1f, 0x4b, 0xb3, 0x34, 0x6c, 0xec, 0xf8, 0xfd, 0xde,
-	0x7b, 0x7c, 0x1f, 0xef, 0x83, 0xcb, 0x52, 0x0a, 0x25, 0xe2, 0x39, 0x5b, 0x27, 0x55, 0x74, 0x27,
-	0x59, 0x95, 0x46, 0x32, 0xe3, 0x9b, 0x7b, 0x8d, 0x89, 0x82, 0xc9, 0xf2, 0x25, 0x14, 0x35, 0x4f,
-	0xfc, 0x57, 0x56, 0x55, 0xd1, 0x86, 0xa1, 0x6b, 0x18, 0xea, 0x5d, 0x5a, 0xd6, 0x31, 0xfd, 0xc1,
-	0xce, 0xcc, 0xf1, 0x46, 0xe1, 0x89, 0x46, 0xab, 0x3a, 0xfe, 0xd8, 0x9f, 0xff, 0x62, 0x77, 0x7f,
-	0xfe, 0x89, 0x6e, 0x60, 0xd4, 0xd0, 0xb5, 0x28, 0x8a, 0x4c, 0x15, 0x8c, 0x2b, 0xdc, 0xd3, 0x0b,
-	0xc3, 0xe6, 0xd9, 0x22, 0xf2, 0xe7, 0xc0, 0x99, 0xb1, 0x0d, 0x8c, 0xad, 0x8f, 0xae, 0x00, 0xca,
-	0x28, 0xcb, 0xf3, 0x8c, 0x49, 0xca, 0x3b, 0xdb, 0x8e, 0xbc, 0xa1, 0x5b, 0x18, 0xdb, 0x71, 0x29,
-	0x85, 0xf8, 0xc6, 0xee, 0xac, 0xe7, 0x8d, 0xc2, 0xd3, 0x8e, 0xae, 0x5a, 0x88, 0x2e, 0xe0, 0x98,
-	0x53, 0x95, 0xe5, 0x09, 0x33, 0xc6, 0x03, 0xfe, 0xde, 0x2a, 0x34, 0x06, 0x37, 0xf5, 0xf1, 0x91,
-	0x66, 0x6e, 0xea, 0x6b, 0x1d, 0xe0, 0xbe, 0xd1, 0x01, 0x41, 0x07, 0x91, 0x02, 0xe2, 0x59, 0xb6,
-	0xb0, 0x31, 0xcf, 0xa1, 0xdf, 0xbe, 0x90, 0x99, 0x84, 0x5b, 0x41, 0x1e, 0x0f, 0x36, 0x83, 0x36,
-	0x71, 0x43, 0x13, 0xb6, 0xf3, 0x0a, 0x67, 0x9b, 0xb8, 0x59, 0xee, 0x40, 0x32, 0xb5, 0x15, 0x3c,
-	0x98, 0xd3, 0xa7, 0xe9, 0xd7, 0x44, 0xff, 0x73, 0x6e, 0xeb, 0x8a, 0x07, 0xba, 0xaf, 0xc5, 0x7f,
-	0x00, 0x00, 0x00, 0xff, 0xff, 0x59, 0x4b, 0x8f, 0x39, 0xcf, 0x01, 0x00, 0x00,
+	// 303 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4b, 0xc3, 0x30,
+	0x1c, 0xc5, 0x69, 0xe7, 0x3a, 0x96, 0xd5, 0xcd, 0x05, 0xc1, 0x1c, 0x54, 0x66, 0x40, 0xe8, 0x45,
+	0x47, 0x32, 0x2f, 0x5e, 0x75, 0xe0, 0x49, 0x19, 0xc5, 0x83, 0x7a, 0x09, 0xed, 0x1a, 0xd7, 0x42,
+	0x9b, 0x94, 0xfe, 0x42, 0xff, 0x4a, 0xff, 0x25, 0x69, 0x96, 0x86, 0x95, 0x1d, 0xdf, 0xe7, 0x7d,
+	0x9b, 0xc7, 0xeb, 0x03, 0x97, 0x79, 0x21, 0x2b, 0x19, 0x2e, 0xf9, 0x36, 0x2a, 0x83, 0xbb, 0x82,
+	0x97, 0x71, 0x50, 0x24, 0x62, 0x77, 0xaf, 0x30, 0xae, 0xc0, 0x6c, 0xfd, 0xe2, 0xcb, 0x5a, 0x44,
+	0xe4, 0x95, 0x97, 0x65, 0xb0, 0xe3, 0xf0, 0x1a, 0x4c, 0xd4, 0x2d, 0xcb, 0xeb, 0x90, 0xfd, 0x20,
+	0x6b, 0x61, 0x79, 0xae, 0x3f, 0x56, 0x68, 0x53, 0x87, 0x1f, 0x7d, 0xff, 0x17, 0xd9, 0x7d, 0xff,
+	0x13, 0xde, 0x00, 0xb7, 0x61, 0x5b, 0x99, 0x65, 0x49, 0x95, 0x71, 0x51, 0xa1, 0x81, 0x3a, 0x98,
+	0x34, 0xcf, 0x06, 0xe1, 0x3f, 0x0b, 0x9c, 0xe9, 0x58, 0xaa, 0x63, 0x09, 0xbc, 0x02, 0x20, 0x0f,
+	0x92, 0x34, 0x4d, 0x78, 0xc1, 0x44, 0x17, 0xdb, 0x91, 0x37, 0x78, 0x0b, 0xa6, 0xc6, 0xce, 0x0b,
+	0x29, 0xbf, 0x91, 0xbd, 0x18, 0x78, 0xae, 0x7f, 0xda, 0xd1, 0x4d, 0x0b, 0xe1, 0x05, 0x18, 0x09,
+	0x56, 0x25, 0x69, 0xc4, 0x75, 0xb0, 0x23, 0xde, 0x5b, 0x05, 0xa7, 0xc0, 0x8e, 0x09, 0x3a, 0x51,
+	0xcc, 0x8e, 0x89, 0xd2, 0x14, 0x0d, 0xb5, 0xa6, 0x6d, 0x7c, 0x94, 0x0a, 0xf5, 0x32, 0x23, 0xc8,
+	0x51, 0x6f, 0x8f, 0x3b, 0x42, 0x7a, 0x36, 0x45, 0xa3, 0xbe, 0x4d, 0x31, 0x3c, 0x2a, 0x44, 0xb1,
+	0x67, 0xd8, 0xca, 0x94, 0x3c, 0x07, 0xc3, 0x76, 0x00, 0xae, 0xfb, 0xed, 0x05, 0x7e, 0x3c, 0xba,
+	0xa4, 0x6d, 0xdf, 0x86, 0x45, 0xfc, 0xe0, 0x47, 0x5a, 0xfb, 0xbe, 0xcd, 0xfa, 0x00, 0xe2, 0xb9,
+	0x19, 0xf0, 0x41, 0x7f, 0xfa, 0x34, 0xff, 0x9a, 0xa9, 0x35, 0x96, 0x66, 0xec, 0xd0, 0x51, 0x6b,
+	0xaf, 0xfe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x14, 0x8e, 0x99, 0x0d, 0x02, 0x00, 0x00,
 }
