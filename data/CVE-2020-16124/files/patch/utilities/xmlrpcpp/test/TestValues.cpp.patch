@@ -29,6 +29,7 @@
 
 #include "xmlrpcpp/XmlRpcValue.h"
 #include "xmlrpcpp/XmlRpcException.h"
+#include "xmlrpcpp/XmlRpcUtil.h"
 
 #include <gtest/gtest.h>
 
@@ -174,6 +175,39 @@ TEST(XmlRpc, testString) {
   EXPECT_EQ("Now is the time <&", ss.str());
 }
 
+//Test decoding of a well-formed but overly large XML input
+TEST(XmlRpc, testOversizeString) {
+  try {
+    std::string xml = "<tag><nexttag>";
+    xml += std::string(__INT_MAX__, 'a');
+    xml += "a</nextag></tag>";
+    int offset;
+
+    offset = 0;
+    EXPECT_EQ(XmlRpcUtil::parseTag("<tag>", xml, &offset), std::string());
+    EXPECT_EQ(offset, 0);
+
+    offset = 0;
+    EXPECT_FALSE(XmlRpcUtil::findTag("<tag>", xml, &offset));
+    EXPECT_EQ(offset, 0);
+
+    offset = 0;
+    EXPECT_FALSE(XmlRpcUtil::nextTagIs("<tag>", xml, &offset));
+    EXPECT_EQ(offset, 0);
+
+    offset = 0;
+    EXPECT_EQ(XmlRpcUtil::getNextTag(xml, &offset), std::string());
+    EXPECT_EQ(offset, 0);
+  }
+  catch (std::bad_alloc& err) {
+#ifdef GTEST_SKIP
+    GTEST_SKIP() << "Unable to allocate memory to run test\n";
+#else
+    std::cerr << "[ SKIPPED  ] XmlRpc.testOversizeString Unable to allocate memory to run test\n";
+#endif
+  }
+}
+
 TEST(XmlRpc, testDateTime) {
   // DateTime
   int offset = 0;