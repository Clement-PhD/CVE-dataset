@@ -7,8 +7,8 @@
 
 import javax.servlet.http.HttpServletRequest;
 
+import org.apache.commons.io.FilenameUtils;
 import org.apache.commons.io.IOUtils;
-import org.apache.commons.lang.SystemUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.openmrs.Patient;
@@ -51,18 +51,16 @@ public void handleRequest(Model model, @RequestParam(value = "filePath", require
 			log.debug("In reference data...");
 		
 		model.addAttribute("previewHtml", "");
-		String message = "";
+		String message;
 		File f = null;
 		try {
 			if (isFileUpload) {
 				MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;
 				MultipartFile multipartFile = multipartRequest.getFile("htmlFormFile");
 				if (multipartFile != null) {
-					//use the same file for the logged in user
-					f = new File(SystemUtils.JAVA_IO_TMPDIR,
-					        TEMP_HTML_FORM_FILE_PREFIX + Context.getAuthenticatedUser().getSystemId());
-					if (!f.exists())
-						f.createNewFile();
+					// use an unpredictable file name
+					f = File.createTempFile(TEMP_HTML_FORM_FILE_PREFIX, ".tmp");
+					f.deleteOnExit();
 					
 					filePath = f.getAbsolutePath();
 					FileOutputStream fileOut = new FileOutputStream(f);
@@ -72,8 +70,10 @@ public void handleRequest(Model model, @RequestParam(value = "filePath", require
 			} else {
 				if (StringUtils.hasText(filePath)) {
 					f = new File(filePath);
-				} else {
-					message = "You must specify a file path to preview from file";
+					// prevent reading  a file via an absolute path or path traversal
+					if (f.isAbsolute() || !FilenameUtils.normalize(filePath).equals(filePath)) {
+						f = null;
+					}
 				}
 			}
 			
@@ -84,7 +84,10 @@ public void handleRequest(Model model, @RequestParam(value = "filePath", require
 				IOUtils.copy(new FileInputStream(f), writer, "UTF-8");
 				String xml = writer.toString();
 				
-				Patient p = null;
+				// validate file is actually xml
+				HtmlFormEntryUtil.stringToDocument(xml);
+				
+				Patient p;
 				if (pId != null) {
 					p = Context.getPatientService().getPatient(pId);
 				} else {