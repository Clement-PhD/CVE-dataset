@@ -1,5 +1,5 @@
 <%
-  from pwnlib.shellcraft import arm
+  from pwnlib.shellcraft import arm, pretty
   from pwnlib.constants import eval
   from pwnlib.abi import linux_arm_syscall as abi
   from six import text_type
@@ -14,7 +14,7 @@ Any of the arguments can be expressions to be evaluated by :func:`pwnlib.constan
 Example:
 
     >>> print(shellcraft.arm.linux.syscall(11, 1, 'sp', 2, 0).rstrip())
-        /* call syscall(11, 1, 'sp', 2, 0) */
+        /* call syscall(0xb, 1, 'sp', 2, 0) */
         mov  r0, #1
         mov  r1, sp
         mov  r2, #2
@@ -57,13 +57,13 @@ Example:
       if syscall is None:
           args = ['?']
       else:
-          args = [repr(syscall)]
+          args = [pretty(syscall, False)]
 
   for arg in [arg0, arg1, arg2, arg3, arg4, arg5]:
       if arg is None:
           args.append('?')
       else:
-          args.append(repr(arg))
+          args.append(pretty(arg, False))
   while args and args[-1] == '?':
       args.pop()
   syscall_repr = syscall_repr % ', '.join(args)