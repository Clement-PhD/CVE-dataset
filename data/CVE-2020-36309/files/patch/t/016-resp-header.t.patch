@@ -8,7 +8,7 @@ use Test::Nginx::Socket::Lua;
 
 repeat_each(2);
 
-plan tests => repeat_each() * (blocks() * 3 + 73);
+plan tests => repeat_each() * (blocks() * 3 + 80);
 
 #no_diff();
 no_long_string();
@@ -1966,7 +1966,7 @@ Content-Type: application/json
 
 
 
-=== TEST 87: truncates value after '\r'
+=== TEST 87: value contains '\r'
 --- config
     location = /t {
         content_by_lua_block {
@@ -1976,16 +1976,18 @@ Content-Type: application/json
     }
 --- request
 GET /t
+--- error_code: 500
 --- response_headers
-header: value
+header:
 foo:
 bar:
---- no_error_log
-[error]
+--- error_log
+unsafe byte "0xd" in header "value\x0Dfoo:bar\x0Abar:foo"
+failed to set header
 
 
 
-=== TEST 88: truncates value after '\n'
+=== TEST 88: value contains '\n'
 --- config
     location = /t {
         content_by_lua_block {
@@ -1995,16 +1997,18 @@ bar:
     }
 --- request
 GET /t
+--- error_code: 500
 --- response_headers
-header: value
+header:
 foo:
 bar:
---- no_error_log
-[error]
+--- error_log
+unsafe byte "0xa" in header "value\x0Afoo:bar\x0Dbar:foo"
+failed to set header
 
 
 
-=== TEST 89: truncates key after '\r'
+=== TEST 89: header name contains '\r'
 --- config
     location = /t {
         content_by_lua_block {
@@ -2014,12 +2018,14 @@ bar:
     }
 --- request
 GET /t
+--- error_code: 500
 --- response_headers
-header: value: xx
+header:
 foo:
 bar:
---- no_error_log
-[error]
+--- error_log
+unsafe byte "0xd" in header "header: value\x0Dfoo:bar\x0Abar:foo"
+failed to set header
 
 
 
@@ -2033,16 +2039,18 @@ bar:
     }
 --- request
 GET /t
+--- error_code: 500
 --- response_headers
-header: value: xx
+header:
 foo:
 bar:
---- no_error_log
-[error]
+--- error_log
+unsafe byte "0xa" in header "header: value\x0Afoo:bar\x0Dbar:foo"
+failed to set header
 
 
 
-=== TEST 91: truncates key after '\r' as the first character
+=== TEST 91: header name: '\r' as the first character
 --- config
     location = /t {
         content_by_lua_block {
@@ -2052,16 +2060,18 @@ bar:
     }
 --- request
 GET /t
+--- error_code: 500
 --- response_headers
 header:
 foo:
 bar:
---- no_error_log
-[error]
+--- error_log
+unsafe byte "0xd" in header "\x0Dheader: value\x0Dfoo:bar\x0Abar:foo"
+failed to set header
 
 
 
-=== TEST 92: truncates key after '\n' as the first character
+=== TEST 92: header name: '\n' as the first character
 --- config
     location = /t {
         content_by_lua_block {
@@ -2071,12 +2081,14 @@ bar:
     }
 --- request
 GET /t
+--- error_code: 500
 --- response_headers
 header:
 foo:
 bar:
---- no_error_log
-[error]
+--- error_log
+unsafe byte "0xa" in header "\x0Aheader: value\x0Afoo:bar\x0Dbar:foo"
+failed to set header
 
 
 
@@ -2093,9 +2105,11 @@ bar:
     }
 --- request
 GET /t
+--- error_code: 500
 --- response_headers
-foo: foo, bar
+foo:
 xx:
 xxx:
---- no_error_log
-[error]
+--- error_log
+unsafe byte "0xa" in header "foo\x0Axx:bar"
+failed to set header
