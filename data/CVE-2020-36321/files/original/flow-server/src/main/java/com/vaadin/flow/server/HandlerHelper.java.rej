--- /dev/null
+++ /dev/null
@@ -176,26 +163,4 @@ public static String getCancelingRelativePath(String pathToCancel) {
         return sb.toString();
     }
 
-    /**
-     * Checks if the given URL path contains the directory change instruction
-     * (dot-dot), taking into account possible double encoding in hexadecimal
-     * format, which can be injected maliciously.
-     *
-     * @param path
-     *            the URL path to be verified.
-     * @return {@code true}, if the given path has a directory change
-     *         instruction, {@code false} otherwise.
-     */
-    public static boolean isPathUnsafe(String path) {
-        // Check that the path does not have '/../', '\..\', %5C..%5C,
-        // %2F..%2F, nor '/..', '\..', %5C.., %2F..
-        try {
-            path = URLDecoder.decode(path, StandardCharsets.UTF_8.name());
-        } catch (UnsupportedEncodingException e) {
-            throw new RuntimeException("An error occurred during decoding URL.",
-                    e);
-        }
-        return PARENT_DIRECTORY_REGEX.matcher(path).find();
-    }
-
 
