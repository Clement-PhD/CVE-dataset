--- /dev/null
+++ /dev/null
@@ -1274,53 +1259,51 @@ function flyToClusterBounds(target){
     },{animate:false});
 }
 
-/* triggered by click on right arrow of the "Browse the settlements" infoCLuster box */
 function next_selection_fun(){
-  update_current_state_settlements();
+  set_current_cluster_centroids();
   var centroid = Object();
   var target = [[0,0][0,0]];
   var filtered_centroids_keys = get_filtered_centroids_keys();
   // select next cluster and to zoom to its bounds
   // if currently no centroid has been selected, set the selection to the first cluster and fly there
   if(filtered_centroids_keys.indexOf(currently_featured_centroid_id) == -1){
-    set_currently_featured_centroid_id(filtered_centroids_keys[0]);
+    currently_featured_centroid_id = filtered_centroids_keys[0];
   }
   // else if the selected centroid is the last one, select the first one
   else if (filtered_centroids_keys.indexOf(currently_featured_centroid_id) == filtered_centroids_keys.length -1){
-    set_currently_featured_centroid_id(filtered_centroids_keys[0]);
+    currently_featured_centroid_id = filtered_centroids_keys[0];
   }
   // else set the selected centroid to be the next one via index
   else{
-    set_currently_featured_centroid_id(filtered_centroids_keys[filtered_centroids_keys.indexOf(currently_featured_centroid_id) + 1 ]);
+    currently_featured_centroid_id = filtered_centroids_keys[filtered_centroids_keys.indexOf(currently_featured_centroid_id) + 1 ];
   }
   // get the centroid from its id and fly to its bounds
   centroid = (current_cluster_centroids[centroids_layer_id]._layers[currently_featured_centroid_id]);
   target = get_bbox_from_cluster_centroid(centroid);
   flyToClusterBounds(target,{animate:false});
-  update_current_cluster(filtered_centroids_keys);
+  update_cluster_info(filtered_centroids_keys);
 }
 
-/* triggered by click on left arrow of the "Browse the settlements" infoCLuster box */
 function prev_selection_fun(){
-  update_current_state_settlements();
+  set_current_cluster_centroids();
   var centroid = Object();
   var target = [[0,0][0,0]];
   var filtered_centroids_keys = get_filtered_centroids_keys();
   // if currently no centroid has been selected, set the selection to the first cluster
   if(filtered_centroids_keys.indexOf(currently_featured_centroid_id) == -1){
-    set_currently_featured_centroid_id(filtered_centroids_keys[0]);
+    currently_featured_centroid_id = filtered_centroids_keys[0];
   }
   // else if the selected centroid is the first one, select the last one
   else if (filtered_centroids_keys.indexOf(currently_featured_centroid_id) == 0){
-   set_currently_featured_centroid_id(filtered_centroids_keys[0]);
+    currently_featured_centroid_id = filtered_centroids_keys[filtered_centroids_keys.length - 1];
   }
   // else set the selected centroid to be the previous one via index
   else{
-    set_currently_featured_centroid_id(filtered_centroids_keys[filtered_centroids_keys.indexOf(currently_featured_centroid_id) - 1 ]);
+  currently_featured_centroid_id = filtered_centroids_keys[filtered_centroids_keys.indexOf(currently_featured_centroid_id) - 1 ];
   }
   // get the centroid from its id and fly to its bounds
   centroid = get_centroid_by_id(currently_featured_centroid_id);
   target = get_bbox_from_cluster_centroid(centroid);
   flyToClusterBounds(target,{animate:false});
-  update_current_cluster(filtered_centroids_keys);
+  update_cluster_info(filtered_centroids_keys);
 
