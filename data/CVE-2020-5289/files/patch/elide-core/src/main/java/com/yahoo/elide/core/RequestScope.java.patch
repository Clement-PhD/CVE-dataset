@@ -24,7 +24,6 @@
 import com.yahoo.elide.core.exceptions.InvalidPredicateException;
 import com.yahoo.elide.core.filter.dialect.MultipleFilterDialect;
 import com.yahoo.elide.core.filter.dialect.ParseException;
-import com.yahoo.elide.core.filter.expression.AndFilterExpression;
 import com.yahoo.elide.core.filter.expression.FilterExpression;
 import com.yahoo.elide.core.pagination.Pagination;
 import com.yahoo.elide.core.sort.Sorting;
@@ -270,27 +269,14 @@ public Optional<FilterExpression> getFilterExpressionByType(String type) {
      * @return The global filter expression evaluated at the first load
      */
     public Optional<FilterExpression> getLoadFilterExpression(Class<?> loadClass) {
-        Optional<FilterExpression> permissionFilter;
-        permissionFilter = getPermissionExecutor().getReadPermissionFilter(loadClass);
-        Optional<FilterExpression> globalFilterExpressionOptional;
+        Optional<FilterExpression> filterExpression;
         if (globalFilterExpression == null) {
             String typeName = dictionary.getJsonAliasFor(loadClass);
-            globalFilterExpressionOptional =  getFilterExpressionByType(typeName);
+            filterExpression =  getFilterExpressionByType(typeName);
         } else {
-            globalFilterExpressionOptional = Optional.of(globalFilterExpression);
+            filterExpression = Optional.of(globalFilterExpression);
         }
-
-        if (globalFilterExpressionOptional.isPresent() && permissionFilter.isPresent()) {
-            return Optional.of(new AndFilterExpression(globalFilterExpressionOptional.get(),
-                    permissionFilter.get()));
-        }
-        if (globalFilterExpressionOptional.isPresent()) {
-            return globalFilterExpressionOptional;
-        }
-        if (permissionFilter.isPresent()) {
-            return permissionFilter;
-        }
-        return Optional.empty();
+        return filterExpression;
     }
 
     /**