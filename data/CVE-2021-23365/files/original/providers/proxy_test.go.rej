--- /dev/null
+++ /dev/null
@@ -69,79 +62,80 @@ func getProfile(profileConfig string) tap.Profile {
 }
 
 func TestProxyProvider_BadCode(t *testing.T) {
-	is := is.New(t)
 
 	thisConf := proxyConfig_CODE
-	thisProfile := getProfile(t, thisConf)
+	thisProfile := getProfile(thisConf)
 	thisProvider := ProxyProvider{}
 
-	is.NoErr(thisProvider.Init(identityHandlers.DummyIdentityHandler{}, thisProfile, []byte(thisConf)))
+	thisProvider.Init(identityHandlers.DummyIdentityHandler{}, thisProfile, []byte(thisConf))
 
 	recorder := httptest.NewRecorder()
 	req, err := http.NewRequest("GET", "/", nil)
+
 	if err != nil {
 		t.Fatal(err)
 	}
 
-	thisProvider.Handle(recorder, req, nil, thisProfile)
+	thisProvider.Handle(recorder, req)
 	thisBody, err := ioutil.ReadAll(recorder.Body)
-	is.NoErr(err)
 
 	if recorder.Code != 401 {
-		t.Fatalf("Expected 401 response code, got '%d'", recorder.Code)
+		t.Error("Expected 401 as key val, got: ", recorder.Code)
 	}
 
 	if string(thisBody) != BODYFAILURE_STR {
-		t.Fatalf("Body string '%s' is incorrect", thisBody)
+		t.Error("Body string incorrect, is: ", thisBody)
 	}
+
 }
 
 func TestProxyProvider_BadBody(t *testing.T) {
-	is := is.New(t)
 
 	thisConf := proxyConfig_BODY
-	thisProfile := getProfile(t, thisConf)
+	thisProfile := getProfile(thisConf)
 	thisProvider := ProxyProvider{}
 
-	is.NoErr(thisProvider.Init(identityHandlers.DummyIdentityHandler{}, thisProfile, []byte(thisConf)))
+	thisProvider.Init(identityHandlers.DummyIdentityHandler{}, thisProfile, []byte(thisConf))
 
 	recorder := httptest.NewRecorder()
 	req, err := http.NewRequest("GET", "/", nil)
+
 	if err != nil {
 		t.Fatal(err)
 	}
 
-	thisProvider.Handle(recorder, req, nil, thisProfile)
+	thisProvider.Handle(recorder, req)
 	thisBody, err := ioutil.ReadAll(recorder.Body)
-	is.NoErr(err)
 
 	if recorder.Code != 401 {
-		t.Fatalf("Expected 401 response code, got '%d'", recorder.Code)
+		t.Error("Expected 401 as key val, got: ", recorder.Code)
 	}
 
 	if string(thisBody) != BODYFAILURE_STR {
-		t.Fatalf("Body string '%s' is incorrect", thisBody)
+		t.Error("Body string incorrect, is: ", thisBody)
 	}
+
 }
 
 func TestProxyProvider_GoodRegex(t *testing.T) {
-	is := is.New(t)
 
 	thisConf := proxyConfig_REGEX
-	thisProfile := getProfile(t, thisConf)
+	thisProfile := getProfile(thisConf)
 	thisProvider := ProxyProvider{}
 
-	is.NoErr(thisProvider.Init(identityHandlers.DummyIdentityHandler{}, thisProfile, []byte(thisConf)))
+	thisProvider.Init(identityHandlers.DummyIdentityHandler{}, thisProfile, []byte(thisConf))
 
 	recorder := httptest.NewRecorder()
 	req, err := http.NewRequest("GET", "/", nil)
+
 	if err != nil {
 		t.Fatal(err)
 	}
 
-	thisProvider.Handle(recorder, req, nil, thisProfile)
+	thisProvider.Handle(recorder, req)
 
 	if recorder.Code != 200 {
-		t.Fatalf("Expected 200 response code, got '%v'", recorder.Code)
+		t.Error("Expected 200 as key val, got: ", recorder.Code)
 	}
+
 
