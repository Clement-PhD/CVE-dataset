--- /dev/null
+++ /dev/null
@@ -237,71 +191,4 @@ public function passwordreset($token = null)
         return $this->load->view('session_passwordreset');
     }
 
-    /**
-     * Checks if the login_log table has records for the
-     * given
-     *
-     * @param string $username
-     * @return object
-     */
-    private function _login_log_check($username)
-    {
-        $login_log_query =  $this->db->where('login_name',$username)->get('ip_login_log')->row();
-        
-        if(!empty($login_log_query) && $login_log_query->log_count > 10)
-        {
-            $current_time = new DateTime();
-            $interval = $current_time->diff(new DateTime($login_log_query->log_create_timestamp));
-            //if the last recorded failed attempt is over 12 hours ago, then unlock the account
-            //the fails are only counted up to 11, this means that the account is also unlocked
-            //if the last failed 11th login attempt is over 12 hours ago.
-            if($interval->h>12)
-            {
-                $this->_login_log_reset($username);
-                return null;
-            }
-        }
-        return $login_log_query;
-    }
-
-    /**
-     * If the username has a record in the login_log
-     * table the count is incremented by 1, otherwise
-     * a record for the given user is created.
-     *
-     * @param string $username
-     */
-    private function _login_log_addfailure($username)
-    {
-        if(empty($login_log_check = $this->_login_log_check($username)))
-        {
-            //create the log
-            $this->db->insert('ip_login_log',[
-                'login_name' => $username,
-                'log_count' => 1,
-                'log_create_timestamp' => date('c')
-            ]);
-        }
-        else
-        {
-            //update the log
-            $this->db->set([
-                'log_count'=>$login_log_check->log_count+1,
-                'log_create_timestamp' => date('c')
-            ])
-            ->where('login_name',$username)
-            ->update('ip_login_log');
-        }
-    }
-
-    /**
-     * The record of the given user is deleted from the
-     * login_log table.
-     *
-     * @param string $username
-     */
-    private function _login_log_reset($username)
-    {
-        $this->db->delete('ip_login_log',['login_name'=>$username]);
-    }
 
