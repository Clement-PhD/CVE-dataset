@@ -92,11 +92,14 @@ def pickle_test(self, addr):
                 y = pickle.loads(pickle.dumps(x, proto))
                 self.assertEqual(y, x)
 
+
 class CommonTestMixin_v4(CommonTestMixin):
 
     def test_leading_zeros(self):
         self.assertInstancesEqual("000.000.000.000", "0.0.0.0")
         self.assertInstancesEqual("192.168.000.001", "192.168.0.1")
+        self.assertInstancesEqual("016.016.016.016", "16.16.16.16")
+        self.assertInstancesEqual("001.000.008.016", "1.0.8.16")
 
     def test_int(self):
         self.assertInstancesEqual(0, "0.0.0.0")
@@ -229,15 +232,6 @@ def assertBadOctet(addr, octet):
         assertBadOctet("1.2.3.4::", "4::")
         assertBadOctet("1.a.2.3", "a")
 
-    def test_octal_decimal_ambiguity(self):
-        def assertBadOctet(addr, octet):
-            msg = "Ambiguous (octal/decimal) value in %r not permitted in %r"
-            with self.assertAddressError(re.escape(msg % (octet, addr))):
-                ipaddress.IPv4Address(addr)
-
-        assertBadOctet("016.016.016.016", "016")
-        assertBadOctet("001.000.008.016", "008")
-
     def test_octet_length(self):
         def assertBadOctet(addr, octet):
             msg = "At most 3 characters permitted in %r in %r"