@@ -1637,6 +1637,34 @@ func prepareInMemoryAlertStore() alertstore.AlertStore {
 	return bucketclient.NewBucketAlertStore(objstore.NewInMemBucket(), nil, log.NewNopLogger())
 }
 
+func TestSafeTemplateFilepath(t *testing.T) {
+	tests := map[string]struct {
+		dir          string
+		template     string
+		expectedPath string
+		expectedErr  error
+	}{
+		"should succeed if the provided template is a filename": {
+			dir:          "/data/tenant",
+			template:     "test.tmpl",
+			expectedPath: "/data/tenant/test.tmpl",
+		},
+		"should fail if the provided template is escaping the dir": {
+			dir:         "/data/tenant",
+			template:    "../test.tmpl",
+			expectedErr: errors.New(`invalid template name "../test.tmpl": the template filepath is escaping the per-tenant local directory`),
+		},
+	}
+
+	for testName, testData := range tests {
+		t.Run(testName, func(t *testing.T) {
+			actualPath, actualErr := safeTemplateFilepath(testData.dir, testData.template)
+			assert.Equal(t, testData.expectedErr, actualErr)
+			assert.Equal(t, testData.expectedPath, actualPath)
+		})
+	}
+}
+
 func TestStoreTemplateFile(t *testing.T) {
 	tempDir, err := ioutil.TempDir(os.TempDir(), "alertmanager")
 	require.NoError(t, err)
@@ -1647,29 +1675,17 @@ func TestStoreTemplateFile(t *testing.T) {
 
 	testTemplateDir := filepath.Join(tempDir, templatesDir)
 
-	changed, err := storeTemplateFile(testTemplateDir, "some-template", "content")
+	changed, err := storeTemplateFile(filepath.Join(testTemplateDir, "some-template"), "content")
 	require.NoError(t, err)
 	require.True(t, changed)
 
-	changed, err = storeTemplateFile(testTemplateDir, "some-template", "new content")
+	changed, err = storeTemplateFile(filepath.Join(testTemplateDir, "some-template"), "new content")
 	require.NoError(t, err)
 	require.True(t, changed)
 
-	changed, err = storeTemplateFile(testTemplateDir, "some-template", "new content") // reusing previous content
+	changed, err = storeTemplateFile(filepath.Join(testTemplateDir, "some-template"), "new content") // reusing previous content
 	require.NoError(t, err)
 	require.False(t, changed)
-
-	_, err = storeTemplateFile(testTemplateDir, ".", "content")
-	require.Error(t, err)
-
-	_, err = storeTemplateFile(testTemplateDir, "..", "content")
-	require.Error(t, err)
-
-	_, err = storeTemplateFile(testTemplateDir, "./test", "content")
-	require.Error(t, err)
-
-	_, err = storeTemplateFile(testTemplateDir, "../test", "content")
-	require.Error(t, err)
 }
 
 type passthroughAlertmanagerClient struct {