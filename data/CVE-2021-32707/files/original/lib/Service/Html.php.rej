--- /dev/null
+++ /dev/null
@@ -143,53 +138,22 @@ public function sanitizeHtmlMailBody(string $mailBody, array $messageParameters,
 
 		HTMLPurifier_URISchemeRegistry::instance()->register('cid', new CidURIScheme());
 
+
 		$purifier = new HTMLPurifier($config);
 
 		$result = $purifier->purify($mailBody);
 		// eat xml parse errors within HTMLPurifier
 		libxml_clear_errors();
 
-		// Sanitize CSS rules
+		// Add back the style tag
 		$styles = $purifier->context->get('StyleBlocks');
 		if ($styles) {
-			$joinedStyles = implode("\n", $styles);
-			$result = $this->sanitizeStyleSheet($joinedStyles) . $result;
+			$result = implode("\n", [
+				'<style type="text/css">',
+				implode("\n", $styles),
+				'</style>',
+				$result,]);
 		}
 		return $result;
 	}
-
-	/**
-	 * Block all URLs in the given CSS style sheet and return a formatted html style tag.
-	 *
-	 * @param string $styles The CSS style sheet to sanitize.
-	 * @return string Rendered style tag to be used in a html response.
-	 */
-	public function sanitizeStyleSheet(string $styles): string {
-		$cssParser = new Parser($styles);
-		$css = $cssParser->parse();
-
-		// Replace urls with blocked image
-		$blockedUrl = new CSSString($this->urlGenerator->imagePath('mail', 'blocked-image.png'));
-		$hasBlockedContent = false;
-		foreach ($css->getAllValues() as $value) {
-			if ($value instanceof URL) {
-				$value->setURL($blockedUrl);
-				$hasBlockedContent = true;
-			}
-		}
-
-		// Save original styles to be able to restore them later
-		$savedStyles = '';
-		if ($hasBlockedContent) {
-			$savedStyles = 'data-original-content="' . htmlspecialchars($styles) . '"';
-			$styles = $css->render(OutputFormat::createCompact());
-		}
-
-		// Render style tag
-		return implode('', [
-			'<style type="text/css" ', $savedStyles, '>',
-			$styles,
-			'</style>',
-		]);
-	}
 
