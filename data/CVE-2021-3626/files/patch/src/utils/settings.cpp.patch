@@ -54,7 +54,8 @@ std::map<QString, QString> make_defaults()
                                           {mp::driver_key, mp::platform::default_driver()},
                                           {mp::autostart_key, autostart_default},
                                           {mp::hotkey_key, default_hotkey()},
-                                          {mp::bridged_interface_key, ""}};
+                                          {mp::bridged_interface_key, ""},
+                                          {mp::mounts_key, mp::platform::default_privileged_mounts()}};
 
     for(const auto& [k, v] : mp::platform::extra_settings_defaults())
         ret.insert_or_assign(k, v);
@@ -206,7 +207,7 @@ void multipass::Settings::set_aux(const QString& key, QString val) // work with
         throw InvalidSettingsException{key, val, "Invalid hostname"};
     else if (key == driver_key && !mp::platform::is_backend_supported(val))
         throw InvalidSettingsException(key, val, "Invalid driver");
-    else if (key == autostart_key && (val = interpret_bool(val)) != "true" && val != "false")
+    else if ((key == autostart_key || key == mounts_key) && (val = interpret_bool(val)) != "true" && val != "false")
         throw InvalidSettingsException(key, val, "Invalid flag, try \"true\" or \"false\"");
     else if (key == winterm_key || key == hotkey_key)
         val = mp::platform::interpret_setting(key, val);