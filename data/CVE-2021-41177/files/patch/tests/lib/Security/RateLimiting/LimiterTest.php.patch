@@ -26,13 +26,10 @@
 
 use OC\Security\RateLimiting\Backend\IBackend;
 use OC\Security\RateLimiting\Limiter;
-use OCP\AppFramework\Utility\ITimeFactory;
 use OCP\IUser;
 use Test\TestCase;
 
 class LimiterTest extends TestCase {
-	/** @var ITimeFactory|\PHPUnit\Framework\MockObject\MockObject */
-	private $timeFactory;
 	/** @var IBackend|\PHPUnit\Framework\MockObject\MockObject */
 	private $backend;
 	/** @var Limiter */
@@ -41,11 +38,9 @@ class LimiterTest extends TestCase {
 	protected function setUp(): void {
 		parent::setUp();
 
-		$this->timeFactory = $this->createMock(ITimeFactory::class);
 		$this->backend = $this->createMock(IBackend::class);
 
 		$this->limiter = new Limiter(
-			$this->timeFactory,
 			$this->backend
 		);
 	}
@@ -60,26 +55,20 @@ public function testRegisterAnonRequestExceeded() {
 			->method('getAttempts')
 			->with(
 				'MyIdentifier',
-				'4664f0d9c88dcb7552be47b37bb52ce35977b2e60e1ac13757cf625f31f87050a41f3da064887fa87d49fd042e4c8eb20de8f10464877d3959677ab011b73a47',
-				100
+				'4664f0d9c88dcb7552be47b37bb52ce35977b2e60e1ac13757cf625f31f87050a41f3da064887fa87d49fd042e4c8eb20de8f10464877d3959677ab011b73a47'
 			)
 			->willReturn(101);
 
 		$this->limiter->registerAnonRequest('MyIdentifier', 100, 100, '127.0.0.1');
 	}
 
 	public function testRegisterAnonRequestSuccess() {
-		$this->timeFactory
-			->expects($this->once())
-			->method('getTime')
-			->willReturn(2000);
 		$this->backend
 			->expects($this->once())
 			->method('getAttempts')
 			->with(
 				'MyIdentifier',
-				'4664f0d9c88dcb7552be47b37bb52ce35977b2e60e1ac13757cf625f31f87050a41f3da064887fa87d49fd042e4c8eb20de8f10464877d3959677ab011b73a47',
-				100
+				'4664f0d9c88dcb7552be47b37bb52ce35977b2e60e1ac13757cf625f31f87050a41f3da064887fa87d49fd042e4c8eb20de8f10464877d3959677ab011b73a47'
 			)
 			->willReturn(99);
 		$this->backend
@@ -88,7 +77,7 @@ public function testRegisterAnonRequestSuccess() {
 			->with(
 				'MyIdentifier',
 				'4664f0d9c88dcb7552be47b37bb52ce35977b2e60e1ac13757cf625f31f87050a41f3da064887fa87d49fd042e4c8eb20de8f10464877d3959677ab011b73a47',
-				2000
+				100
 			);
 
 		$this->limiter->registerAnonRequest('MyIdentifier', 100, 100, '127.0.0.1');
@@ -110,8 +99,7 @@ public function testRegisterUserRequestExceeded() {
 			->method('getAttempts')
 			->with(
 				'MyIdentifier',
-				'ddb2ec50fa973fd49ecf3d816f677c8095143e944ad10485f30fb3dac85c13a346dace4dae2d0a15af91867320957bfd38a43d9eefbb74fe6919e15119b6d805',
-				100
+				'ddb2ec50fa973fd49ecf3d816f677c8095143e944ad10485f30fb3dac85c13a346dace4dae2d0a15af91867320957bfd38a43d9eefbb74fe6919e15119b6d805'
 			)
 			->willReturn(101);
 
@@ -126,17 +114,12 @@ public function testRegisterUserRequestSuccess() {
 			->method('getUID')
 			->willReturn('MyUid');
 
-		$this->timeFactory
-			->expects($this->once())
-			->method('getTime')
-			->willReturn(2000);
 		$this->backend
 			->expects($this->once())
 			->method('getAttempts')
 			->with(
 				'MyIdentifier',
-				'ddb2ec50fa973fd49ecf3d816f677c8095143e944ad10485f30fb3dac85c13a346dace4dae2d0a15af91867320957bfd38a43d9eefbb74fe6919e15119b6d805',
-				100
+				'ddb2ec50fa973fd49ecf3d816f677c8095143e944ad10485f30fb3dac85c13a346dace4dae2d0a15af91867320957bfd38a43d9eefbb74fe6919e15119b6d805'
 			)
 			->willReturn(99);
 		$this->backend
@@ -145,7 +128,7 @@ public function testRegisterUserRequestSuccess() {
 			->with(
 				'MyIdentifier',
 				'ddb2ec50fa973fd49ecf3d816f677c8095143e944ad10485f30fb3dac85c13a346dace4dae2d0a15af91867320957bfd38a43d9eefbb74fe6919e15119b6d805',
-				2000
+				100
 			);
 
 		$this->limiter->registerUserRequest('MyIdentifier', 100, 100, $user);