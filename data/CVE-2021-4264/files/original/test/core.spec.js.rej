--- /dev/null
+++ /dev/null
@@ -232,18 +232,4 @@
     });
   });
 
-  describe('vulnerabilities', function() {
-    it('has no prototype pollution vulnerability', function() {
-      const malicious = `this.constructor.constructor('return process')().mainModule.require('child_process').execSync('curl 127.0.0.1')`;
-      Object.prototype.MAL_CODE= [ malicious ];
-      const compiled = dust.compile('{username} is an important person.{~n}');
-      const tmpl = dust.loadSource(compiled);
-      dust.render(tmpl, { username: 'Jane Doe' }, (err, output) => {
-        delete Object.prototype.MAL_CODE;
-        expect(err).toBe(null);
-        expect(output).toEqual('Jane Doe is an important person.\n');
-      });
-    });
-  });
-
 
