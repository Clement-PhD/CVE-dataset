@@ -10,6 +10,7 @@
 """
 
 import base64
+import html
 import json
 import os
 import re
@@ -790,10 +791,10 @@ def get_comment_msg(comment):
         if system_comment:
             for idx, value in enumerate(elements[1:]):
                 system_comment = system_comment.replace(
-                    '{' + str(idx) + '}', value)
-            message = system_comment
+                    '{' + str(idx) + '}', html.escape(value))
+            return system_comment
 
-    return message
+    return html.escape(message)
 
 
 def create_review_data(review_status):
@@ -1273,7 +1274,8 @@ def getCheckCommand(self, run_history_id, run_id):
         analysis_info = self.getAnalysisInfo(
             analysis_info_filter, limit, offset)
 
-        return "; ".join([i.analyzerCommand for i in analysis_info])
+        return "; ".join([html.escape(i.analyzerCommand)
+                          for i in analysis_info])
 
     @exc_to_thrift_reqfail
     @timeit
@@ -1326,7 +1328,7 @@ def getAnalysisInfo(self, analysis_info_filter, limit, offset):
                         zlib.decompress(cmd.analyzer_command).decode('utf-8')
 
                     res.append(ttypes.AnalysisInfo(
-                        analyzerCommand=command))
+                        analyzerCommand=html.escape(command)))
 
         return res
 
@@ -1909,7 +1911,7 @@ def addComment(self, report_id, comment_data):
         """ Add new comment for the given bug. """
         self.__require_access()
 
-        if not comment_data.message.strip():
+        if not comment_data.message or not comment_data.message.strip():
             raise codechecker_api_shared.ttypes.RequestFailed(
                 codechecker_api_shared.ttypes.ErrorCode.GENERAL,
                 'The comment message can not be empty!')
@@ -2119,7 +2121,7 @@ def getBlameInfo(self, fileId):
                             name=commit["author"]["name"],
                             email=commit["author"]["email"]),
                         summary=commit["summary"],
-                        message=commit["message"],
+                        message=html.escape(commit["message"]),
                         committedDateTime=commit["committed_datetime"],
                     )
                     for commitHash, commit in blame_info["commits"].items()
@@ -2989,7 +2991,7 @@ def exportData(self, run_filter):
                 comment_data = ttypes.CommentData(
                     id=data.id,
                     author=data.author,
-                    message=data.message.decode('utf-8'),
+                    message=html.unescape(data.message.decode('utf-8')),
                     createdAt=str(data.created_at),
                     kind=data.kind)
                 comment_data_list[report_id].append(comment_data)