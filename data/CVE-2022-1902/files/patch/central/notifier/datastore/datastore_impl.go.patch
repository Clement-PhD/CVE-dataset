@@ -8,6 +8,7 @@ import (
 	"github.com/stackrox/rox/generated/storage"
 	"github.com/stackrox/rox/pkg/errox"
 	"github.com/stackrox/rox/pkg/sac"
+	"github.com/stackrox/rox/pkg/secrets"
 	"github.com/stackrox/rox/pkg/sync"
 	"github.com/stackrox/rox/pkg/uuid"
 )
@@ -31,6 +32,17 @@ func (b *datastoreImpl) GetNotifier(ctx context.Context, id string) (*storage.No
 	return b.storage.Get(ctx, id)
 }
 
+func (b *datastoreImpl) GetScrubbedNotifier(ctx context.Context, id string) (*storage.Notifier, bool, error) {
+	notifier, exists, err := b.GetNotifier(ctx, id)
+	if err != nil || !exists {
+		return notifier, exists, err
+	}
+
+	secrets.ScrubSecretsFromStructWithReplacement(notifier, secrets.ScrubReplacementStr)
+
+	return notifier, exists, err
+}
+
 func (b *datastoreImpl) GetNotifiers(ctx context.Context) ([]*storage.Notifier, error) {
 	if ok, err := notifierSAC.ReadAllowed(ctx); err != nil {
 		return nil, err
@@ -41,6 +53,19 @@ func (b *datastoreImpl) GetNotifiers(ctx context.Context) ([]*storage.Notifier,
 	return b.storage.GetAll(ctx)
 }
 
+func (b *datastoreImpl) GetScrubbedNotifiers(ctx context.Context) ([]*storage.Notifier, error) {
+	notifiers, err := b.GetNotifiers(ctx)
+	if err != nil {
+		return nil, err
+	}
+
+	for _, notifier := range notifiers {
+		secrets.ScrubSecretsFromStructWithReplacement(notifier, secrets.ScrubReplacementStr)
+	}
+
+	return notifiers, nil
+}
+
 func (b *datastoreImpl) AddNotifier(ctx context.Context, notifier *storage.Notifier) (string, error) {
 	if ok, err := notifierSAC.WriteAllowed(ctx); err != nil {
 		return "", err