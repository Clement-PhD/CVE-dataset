@@ -39,12 +39,83 @@ metatests.test('JavaScript Math', async (test) => {
   sheet.cells['G1'] = '=Math.sin(A1)';
   sheet.cells['H1'] = '=Math.sqrt(A1)';
   sheet.cells['I1'] = '=Math.sin(Math.sqrt(Math.pow(A1, B1)))';
+  sheet.cells['J1'] = '=Math.PI * Math.E * Math.LN2 * Math.LN10';
   test.strictSame(sheet.values['C1'], 2);
   test.strictSame(sheet.values['D1'], Math.exp(100));
   test.strictSame(sheet.values['E1'], 100);
   test.strictSame(sheet.values['F1'], 10000);
   test.strictSame(sheet.values['G1'], Math.sin(100));
   test.strictSame(sheet.values['H1'], Math.sqrt(100));
   test.strictSame(sheet.values['I1'], Math.sin(Math.sqrt(Math.pow(100, -2))));
+  test.strictSame(sheet.values['J1'], Math.PI * Math.E * Math.LN2 * Math.LN10);
+  test.end();
+});
+
+metatests.test('Prevent arbitrary js code execution', async (test) => {
+  const sheet = new Sheet();
+
+  sheet.cells['A1'] =
+    '=Math.constructor.constructor("console.log(\\"Hello, World!\\")")();';
+  try {
+    sheet.values['A1'];
+    test.fail('Vulnerability works');
+  } catch (error) {
+    test.strictSame(error.constructor.name === 'TypeError', true);
+  }
+
+  sheet.cells['A1'] =
+    '=this.data.constructor.constructor("console.log(\\"Hello, World!\\")")();';
+  try {
+    sheet.values['A1'];
+    test.fail('Vulnerability works');
+  } catch (error) {
+    test.strictSame(error.constructor.name === 'TypeError', true);
+  }
+
+  sheet.cells['A1'] =
+    '=this.constructor.constructor("console.log(\\"Hello, World!\\")")();';
+  try {
+    sheet.values['A1'];
+    test.fail('Vulnerability works');
+  } catch (error) {
+    test.strictSame(error.constructor.name === 'TypeError', true);
+  }
+
+  sheet.cells['A1'] = `=Reflect.get(this, "constructor")
+    .constructor("console.log(\\"Hello, World!\\")")();`;
+  try {
+    sheet.values['A1'];
+    test.fail('Vulnerability works');
+  } catch (error) {
+    test.strictSame(error.constructor.name === 'TypeError', true);
+  }
+
+  sheet.cells['A1'] =
+    '=Object.constructor.constructor("console.log(\\"Hello, World!\\")")();';
+  try {
+    sheet.values['A1'];
+    test.fail('Vulnerability works');
+  } catch (error) {
+    test.strictSame(error.constructor.name === 'TypeError', true);
+  }
+
+  sheet.cells['A1'] =
+    '=({}).constructor.constructor("console.log(\\"Hello, World!\\")")();';
+  try {
+    sheet.values['A1'];
+    test.fail('Vulnerability works');
+  } catch (error) {
+    test.strictSame(error.constructor.name === 'TypeError', true);
+  }
+
+  sheet.cells['A1'] =
+    '=Math.ceil.constructor("console.log(\\"Hello, World!\\")")();';
+  try {
+    sheet.values['A1'];
+    test.fail('Vulnerability works');
+  } catch (error) {
+    test.strictSame(error.constructor.name === 'TypeError', true);
+  }
+
   test.end();
 });