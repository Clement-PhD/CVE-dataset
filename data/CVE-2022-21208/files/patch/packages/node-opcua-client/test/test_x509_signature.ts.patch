@@ -10,7 +10,7 @@ import { decodeExpandedNodeId } from "node-opcua-basic-types";
 import { BinaryStream } from "node-opcua-binary-stream";
 import { Certificate, PrivateKeyPEM, readCertificate, readPrivateKeyPEM, split_der } from "node-opcua-crypto";
 import { makeBufferFromTrace } from "node-opcua-debug";
-import { constructObject } from "node-opcua-factory";
+import { BaseUAObject, constructObject } from "node-opcua-factory";
 import {
     computeSignature,
     getCryptoFactory,
@@ -39,13 +39,14 @@ function readMessage(name: string): Buffer {
 }
 
 async function decodeMessage(buffer: Buffer): Promise<any> {
-    /*
-    const offset = 16 * 3 + 6;
-    buffer = buffer.slice(offset);
-    */
-    const messageBuilder = new MessageBuilder({});
+    const messageBuilder = new MessageBuilder({
+        maxChunkCount: 1,
+        maxChunkSize: buffer.length + 100,
+        maxMessageSize: buffer.length + 100
+    });
+
     messageBuilder.setSecurity(MessageSecurityMode.None, SecurityPolicy.None);
-    let objMessage: any = null;
+    let objMessage: BaseUAObject | null = null;
     messageBuilder.once("full_message_body", (fullMessageBody: Buffer) => {
         const stream = new BinaryStream(fullMessageBody);
         const id = decodeExpandedNodeId(stream);