@@ -28,6 +28,7 @@ next (e.g., redirect, forward, rewrite, etc.).
     "headers": [],
     "rate_limits": [],
     "hash_policy": "{...}",
+    "request_headers_to_add" : [],
     "opaque_config": []
   }
 
@@ -143,6 +144,9 @@ priority
   happen if all the headers in the route are present in the request with the same values (or based
   on presence if the ``value`` field is not in the config).
 
+:ref:`request_headers_to_add <config_http_conn_man_route_table_route_add_req_headers>`
+  *(optional, array)* Specifies a set of headers that will be added to requests matching this route.
+
 :ref:`opaque_config <config_http_conn_man_route_table_opaque_config>`
   *(optional, array)* Specifies a set of optional route configuration values that can be accessed by filters.
 
@@ -338,6 +342,26 @@ header_name
   the request header is not present, the load balancer will use a random number as the hash,
   effectively making the load balancing policy random.
 
+.. _config_http_conn_man_route_table_route_add_req_headers:
+
+Adding custom request headers
+-----------------------------
+
+Custom request headers can be added to a request that matches a specific route. The headers are
+specified in the following form:
+
+.. code-block:: json
+
+  [
+    {"key": "header1", "value": "value1"},
+    {"key": "header2", "value": "value2"}
+  ]
+
+*Note:* Headers are appended to requests in the following order:
+route-level headers, :ref:`virtual host level <config_http_conn_man_route_table_vhost_add_req_headers>`
+headers and finally global :ref:`route_config <config_http_conn_man_route_table_add_req_headers>`
+level headers.
+
 .. _config_http_conn_man_route_table_opaque_config:
 
 Opaque Config