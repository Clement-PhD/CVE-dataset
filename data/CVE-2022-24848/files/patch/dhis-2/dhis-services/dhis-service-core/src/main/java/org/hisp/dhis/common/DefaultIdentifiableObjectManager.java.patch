@@ -57,6 +57,9 @@
 import org.hisp.dhis.category.CategoryOptionCombo;
 import org.hisp.dhis.chart.Chart;
 import org.hisp.dhis.common.exception.InvalidIdentifierReferenceException;
+import org.hisp.dhis.commons.collection.CollectionUtils;
+import org.hisp.dhis.feedback.ErrorCode;
+import org.hisp.dhis.feedback.ErrorMessage;
 import org.hisp.dhis.hibernate.HibernateProxyUtils;
 import org.hisp.dhis.reporttable.ReportTable;
 import org.hisp.dhis.schema.Schema;
@@ -619,6 +622,25 @@ public <T extends IdentifiableObject> List<T> getByUid( Class<T> clazz, Collecti
         return (List<T>) store.getByUid( uids );
     }
 
+    @Override
+    @Transactional( readOnly = true )
+    public <T extends IdentifiableObject> List<T> getAndValidateByUid( Class<T> type, Collection<String> uids )
+        throws IllegalQueryException
+    {
+        List<T> objects = getByUid( type, uids );
+
+        List<String> identifiers = IdentifiableObjectUtils.getUids( objects );
+        List<String> difference = CollectionUtils.difference( uids, identifiers );
+
+        if ( !difference.isEmpty() )
+        {
+            throw new IllegalQueryException( new ErrorMessage(
+                ErrorCode.E1112, type.getSimpleName(), difference ) );
+        }
+
+        return objects;
+    }
+
     @Override
     @Transactional( readOnly = true )
     @SuppressWarnings( "unchecked" )