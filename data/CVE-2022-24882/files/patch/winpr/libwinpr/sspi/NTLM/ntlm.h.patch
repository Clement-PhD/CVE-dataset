@@ -89,7 +89,7 @@ enum _NTLM_AV_ID
 	MsvAvTimestamp,
 	MsvAvSingleHost,
 	MsvAvTargetName,
-	MsvChannelBindings
+	MsvAvChannelBindings
 };
 typedef enum _NTLM_AV_ID NTLM_AV_ID;
 
@@ -176,8 +176,7 @@ typedef struct _NTLM_MESSAGE_HEADER NTLM_MESSAGE_HEADER;
 
 struct _NTLM_NEGOTIATE_MESSAGE
 {
-	BYTE Signature[8];
-	UINT32 MessageType;
+	NTLM_MESSAGE_HEADER header;
 	UINT32 NegotiateFlags;
 	NTLM_VERSION_INFO Version;
 	NTLM_MESSAGE_FIELDS DomainName;
@@ -187,8 +186,7 @@ typedef struct _NTLM_NEGOTIATE_MESSAGE NTLM_NEGOTIATE_MESSAGE;
 
 struct _NTLM_CHALLENGE_MESSAGE
 {
-	BYTE Signature[8];
-	UINT32 MessageType;
+	NTLM_MESSAGE_HEADER header;
 	UINT32 NegotiateFlags;
 	BYTE ServerChallenge[8];
 	BYTE Reserved[8];
@@ -200,8 +198,7 @@ typedef struct _NTLM_CHALLENGE_MESSAGE NTLM_CHALLENGE_MESSAGE;
 
 struct _NTLM_AUTHENTICATE_MESSAGE
 {
-	BYTE Signature[8];
-	UINT32 MessageType;
+	NTLM_MESSAGE_HEADER header;
 	UINT32 NegotiateFlags;
 	NTLM_VERSION_INFO Version;
 	NTLM_MESSAGE_FIELDS DomainName;
@@ -251,7 +248,7 @@ struct _NTLM_CONTEXT
 	NTLM_NEGOTIATE_MESSAGE NEGOTIATE_MESSAGE;
 	NTLM_CHALLENGE_MESSAGE CHALLENGE_MESSAGE;
 	NTLM_AUTHENTICATE_MESSAGE AUTHENTICATE_MESSAGE;
-	UINT32 MessageIntegrityCheckOffset;
+	size_t MessageIntegrityCheckOffset;
 	SecBuffer NegotiateMessage;
 	SecBuffer ChallengeMessage;
 	SecBuffer AuthenticateMessage;
@@ -280,6 +277,13 @@ struct _NTLM_CONTEXT
 };
 typedef struct _NTLM_CONTEXT NTLM_CONTEXT;
 
+char* ntlm_negotiate_flags_string(char* buffer, size_t size, UINT32 flags);
+const char* ntlm_message_type_string(UINT32 messageType);
+
+const char* ntlm_state_string(NTLM_STATE state);
+void ntlm_change_state(NTLM_CONTEXT* ntlm, NTLM_STATE state);
+NTLM_STATE ntlm_get_state(NTLM_CONTEXT* ntlm);
+
 SECURITY_STATUS ntlm_computeProofValue(NTLM_CONTEXT* ntlm, SecBuffer* ntproof);
 SECURITY_STATUS ntlm_computeMicValue(NTLM_CONTEXT* ntlm, SecBuffer* micvalue);
 