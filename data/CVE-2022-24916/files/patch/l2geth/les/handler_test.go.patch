@@ -51,8 +51,6 @@ func TestGetBlockHeadersLes2(t *testing.T) { testGetBlockHeaders(t, 2) }
 func TestGetBlockHeadersLes3(t *testing.T) { testGetBlockHeaders(t, 3) }
 
 func testGetBlockHeaders(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	server, tearDown := newServerEnv(t, downloader.MaxHashFetch+15, protocol, nil, false, true, 0)
 	defer tearDown()
 
@@ -183,8 +181,6 @@ func TestGetBlockBodiesLes2(t *testing.T) { testGetBlockBodies(t, 2) }
 func TestGetBlockBodiesLes3(t *testing.T) { testGetBlockBodies(t, 3) }
 
 func testGetBlockBodies(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	server, tearDown := newServerEnv(t, downloader.MaxBlockFetch+15, protocol, nil, false, true, 0)
 	defer tearDown()
 
@@ -263,8 +259,6 @@ func TestGetCodeLes2(t *testing.T) { testGetCode(t, 2) }
 func TestGetCodeLes3(t *testing.T) { testGetCode(t, 3) }
 
 func testGetCode(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	// Assemble the test environment
 	server, tearDown := newServerEnv(t, 4, protocol, nil, false, true, 0)
 	defer tearDown()
@@ -296,8 +290,6 @@ func TestGetStaleCodeLes2(t *testing.T) { testGetStaleCode(t, 2) }
 func TestGetStaleCodeLes3(t *testing.T) { testGetStaleCode(t, 3) }
 
 func testGetStaleCode(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	server, tearDown := newServerEnv(t, core.TriesInMemory+4, protocol, nil, false, true, 0)
 	defer tearDown()
 	bc := server.handler.blockchain
@@ -323,8 +315,6 @@ func TestGetReceiptLes2(t *testing.T) { testGetReceipt(t, 2) }
 func TestGetReceiptLes3(t *testing.T) { testGetReceipt(t, 3) }
 
 func testGetReceipt(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	// Assemble the test environment
 	server, tearDown := newServerEnv(t, 4, protocol, nil, false, true, 0)
 	defer tearDown()
@@ -353,8 +343,6 @@ func TestGetProofsLes2(t *testing.T) { testGetProofs(t, 2) }
 func TestGetProofsLes3(t *testing.T) { testGetProofs(t, 3) }
 
 func testGetProofs(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	// Assemble the test environment
 	server, tearDown := newServerEnv(t, 4, protocol, nil, false, true, 0)
 	defer tearDown()
@@ -391,8 +379,6 @@ func TestGetStaleProofLes2(t *testing.T) { testGetStaleProof(t, 2) }
 func TestGetStaleProofLes3(t *testing.T) { testGetStaleProof(t, 3) }
 
 func testGetStaleProof(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	server, tearDown := newServerEnv(t, core.TriesInMemory+4, protocol, nil, false, true, 0)
 	defer tearDown()
 	bc := server.handler.blockchain
@@ -430,8 +416,6 @@ func TestGetCHTProofsLes2(t *testing.T) { testGetCHTProofs(t, 2) }
 func TestGetCHTProofsLes3(t *testing.T) { testGetCHTProofs(t, 3) }
 
 func testGetCHTProofs(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	config := light.TestServerIndexerConfig
 
 	waitIndexers := func(cIndexer, bIndexer, btIndexer *core.ChainIndexer) {
@@ -481,8 +465,6 @@ func TestGetBloombitsProofsLes3(t *testing.T) { testGetBloombitsProofs(t, 3) }
 
 // Tests that bloombits proofs can be correctly retrieved.
 func testGetBloombitsProofs(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	config := light.TestServerIndexerConfig
 
 	waitIndexers := func(cIndexer, bIndexer, btIndexer *core.ChainIndexer) {
@@ -532,8 +514,6 @@ func TestTransactionStatusLes2(t *testing.T) { testTransactionStatus(t, 2) }
 func TestTransactionStatusLes3(t *testing.T) { testTransactionStatus(t, 3) }
 
 func testTransactionStatus(t *testing.T, protocol int) {
-	t.Skip("SKIPPING (OVM)")
-
 	server, tearDown := newServerEnv(t, 0, protocol, nil, false, true, 0)
 	defer tearDown()
 	server.handler.addTxsSync = true