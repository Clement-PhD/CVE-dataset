@@ -1,5 +1,5 @@
 import katex from 'katex'
-import prism, { loadedLanguages, transfromAliasToOrigin } from '../../../prism/'
+import prism, { loadedLanguages, transformAliasToOrigin } from '../../../prism/'
 import 'katex/dist/contrib/mhchem.min.js'
 import { CLASS_OR_ID, DEVICE_MEMORY, PREVIEW_DOMPURIFY_CONFIG, HAS_TEXT_BLOCK_REG } from '../../../config'
 import { tokenizer } from '../../'
@@ -114,7 +114,6 @@ export default function renderLeafBlock (parent, block, activeBlocks, matches, u
         this.tokenCache.set(text, tokens)
       }
     }
-
     children = tokens.reduce((acc, token) => [...acc, ...this[snakeToCamel(token.type)](h, cursor, block, token)], [])
   }
 
@@ -233,8 +232,8 @@ export default function renderLeafBlock (parent, block, activeBlocks, matches, u
       .replace(new RegExp(MARKER_HASK['"'], 'g'), '"')
       .replace(new RegExp(MARKER_HASK["'"], 'g'), "'")
 
-    // transfrom alias to original language
-    const transformedLang = transfromAliasToOrigin([lang])[0]
+    // transform alias to original language
+    const transformedLang = transformAliasToOrigin([lang])[0]
     if (transformedLang && /\S/.test(code) && loadedLanguages.has(transformedLang)) {
       const wrapper = document.createElement('div')
       wrapper.classList.add(`language-${transformedLang}`)