@@ -24,7 +24,7 @@ fn ack_data() -> Vec<u8> {
 #[test]
 pub fn hello() {
     let mut stream = Cursor::new(hello_data());
-    let decoding_options = DecodingOptions::default();
+    let decoding_options = DecodingOptions::test();
     let hello = HelloMessage::decode(&mut stream, &decoding_options).unwrap();
     println!("hello = {:?}", hello);
     assert_eq!(hello.message_header.message_type, MessageType::Hello);
@@ -43,7 +43,7 @@ pub fn hello() {
 #[test]
 pub fn acknowledge() {
     let mut stream = Cursor::new(ack_data());
-    let decoding_options = DecodingOptions::default();
+    let decoding_options = DecodingOptions::test();
     let ack = AcknowledgeMessage::decode(&mut stream, &decoding_options).unwrap();
     println!("ack = {:?}", ack);
     assert_eq!(ack.message_header.message_type, MessageType::Acknowledge);