@@ -729,7 +729,7 @@ m3ApiRawFunction(m3_wasi_generic_fd_pread)
     for (uvwasi_size_t i = 0; i < iovs_len; ++i) {
         iovs[i].buf = m3ApiOffsetToPtr(m3ApiReadMem32(&wasi_iovs[i].buf));
         iovs[i].buf_len = m3ApiReadMem32(&wasi_iovs[i].buf_len);
-
+        m3ApiCheckMem(iovs[i].buf,     iovs[i].buf_len);
         //fprintf(stderr, "> fd_pread fd:%d iov%d.len:%d\n", fd, i, iovs[i].buf_len);
     }
 
@@ -767,7 +767,7 @@ m3ApiRawFunction(m3_wasi_generic_fd_read)
     for (uvwasi_size_t i = 0; i < iovs_len; ++i) {
         iovs[i].buf = m3ApiOffsetToPtr(m3ApiReadMem32(&wasi_iovs[i].buf));
         iovs[i].buf_len = m3ApiReadMem32(&wasi_iovs[i].buf_len);
-
+        m3ApiCheckMem(iovs[i].buf,     iovs[i].buf_len);
         //fprintf(stderr, "> fd_read fd:%d iov%d.len:%d\n", fd, i, iovs[i].buf_len);
     }
 
@@ -803,6 +803,7 @@ m3ApiRawFunction(m3_wasi_generic_fd_write)
     for (uvwasi_size_t i = 0; i < iovs_len; ++i) {
         iovs[i].buf = m3ApiOffsetToPtr(m3ApiReadMem32(&wasi_iovs[i].buf));
         iovs[i].buf_len = m3ApiReadMem32(&wasi_iovs[i].buf_len);
+        m3ApiCheckMem(iovs[i].buf,     iovs[i].buf_len);
     }
 
     ret = uvwasi_fd_write(&uvwasi, fd, iovs, iovs_len, &num_written);
@@ -838,6 +839,7 @@ m3ApiRawFunction(m3_wasi_generic_fd_pwrite)
     for (uvwasi_size_t i = 0; i < iovs_len; ++i) {
         iovs[i].buf = m3ApiOffsetToPtr(m3ApiReadMem32(&wasi_iovs[i].buf));
         iovs[i].buf_len = m3ApiReadMem32(&wasi_iovs[i].buf_len);
+        m3ApiCheckMem(iovs[i].buf,     iovs[i].buf_len);
     }
 
     ret = uvwasi_fd_pwrite(&uvwasi, fd, iovs, iovs_len, offset, &num_written);