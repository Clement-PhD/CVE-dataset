@@ -1,5 +1,6 @@
 import {expect} from "chai";
 import sinon from "sinon";
+import {generateAttestationDataBn} from "@chainsafe/lodestar-beacon-state-transition/test/utils/attestation";
 import {getBeaconPoolApi} from "../../../../../../src/api/impl/beacon/pool";
 import {Network} from "../../../../../../src/network/network";
 import {
@@ -15,7 +16,7 @@ import * as voluntaryExitValidation from "../../../../../../src/chain/validation
 
 import {phase0} from "@chainsafe/lodestar-types";
 import {Eth2Gossipsub} from "../../../../../../src/network/gossip";
-import {generateEmptySignedBlockHeader} from "../../../../../utils/block";
+import {generateSignedBlockHeaderBn} from "../../../../../utils/block";
 import {setupApiImplTestServer} from "../../index.test";
 import {SinonStubFn} from "../../../../../utils/types";
 import {testLogger} from "../../../../../utils/logger";
@@ -87,12 +88,12 @@ describe("beacon pool api impl", function () {
     const atterterSlashing: phase0.AttesterSlashing = {
       attestation1: {
         attestingIndices: [0],
-        data: generateAttestationData(0, 1, 0, 1),
+        data: generateAttestationDataBn(0, 1),
         signature: Buffer.alloc(96),
       },
       attestation2: {
         attestingIndices: [0],
-        data: generateAttestationData(0, 1, 0, 1),
+        data: generateAttestationDataBn(0, 1),
         signature: Buffer.alloc(96),
       },
     };
@@ -112,8 +113,8 @@ describe("beacon pool api impl", function () {
 
   describe("submitPoolProposerSlashing", function () {
     const proposerSlashing: phase0.ProposerSlashing = {
-      signedHeader1: generateEmptySignedBlockHeader(),
-      signedHeader2: generateEmptySignedBlockHeader(),
+      signedHeader1: generateSignedBlockHeaderBn(),
+      signedHeader2: generateSignedBlockHeaderBn(),
     };
 
     it("should broadcast", async function () {