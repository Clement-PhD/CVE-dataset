@@ -22,6 +22,18 @@
     return urlRegexp.test(string);
   }
 
+ /**
+  * Return the input string html escaped
+  * @return string
+  */
+  function htmlEscape(s) {
+    return s.replace(/&/g, '&amp;')
+      .replace(/</g, '&lt;')
+      .replace(/>/g, '&gt;')
+      .replace(/'/g, '&apos;')
+      .replace(/"/g, '&quot;')
+  }
+
   /**
    * Transform a json object into html representation
    * @return string
@@ -30,12 +42,7 @@
     var html = '';
     if (typeof json === 'string') {
       // Escape tags and quotes
-      json = json
-        .replace(/&/g, '&amp;')
-        .replace(/</g, '&lt;')
-        .replace(/>/g, '&gt;')
-        .replace(/'/g, '&apos;')
-        .replace(/"/g, '&quot;');
+      json = htmlEscape(json)
 
       if (options.withLinks && isUrl(json)) {
         html += '<a href="' + json + '" class="json-string" target="_blank">' + json + '</a>';
@@ -76,9 +83,11 @@
         html += '{<ul class="json-dict">';
         for (var key in json) {
           if (Object.prototype.hasOwnProperty.call(json, key)) {
-            html += '<li>';
+            key = htmlEscape(key);
             var keyRepr = options.withQuotes ?
               '<span class="json-string">"' + key + '"</span>' : key;
+
+            html += '<li>';
             // Add toggle button if item is collapsable
             if (isCollapsable(json[key])) {
               html += '<a href class="json-toggle">' + keyRepr + '</a>';