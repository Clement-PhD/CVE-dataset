@@ -521,7 +521,7 @@ class JsonHttpErrorHandler(environment: Environment, sourceMapper: Option[Source
  * Note: this HttpErrorHandler should ONLY be used in DEV or TEST. The way this displays errors to the user is
  * generally not suitable for a production environment.
  */
-object DefaultHttpErrorHandler
+object DevHttpErrorHandler
     extends DefaultHttpErrorHandler(HttpErrorConfig(showDevErrors = true, playEditor = None), None, None) {
   private val logger = Logger(getClass)
   private lazy val setEditor: Unit =
@@ -545,6 +545,15 @@ object DefaultHttpErrorHandler
   }
 }
 
+/**
+ * A fallback default HTTP error handler that can be used when there's no application available.
+ *
+ *  Note: this HttpErrorHandler uses the default `HttpErrorConfig`, which does not `showDevErrors`.
+ *  It is largely here to preserve binary compatibility, but should be overridden with an injected
+ *  HttpErrorHandler.
+ */
+object DefaultHttpErrorHandler extends DefaultHttpErrorHandler(HttpErrorConfig(), None, None)
+
 /**
  * A Java error handler that's provided when a Scala one is configured, so that Java code can still have the error
  * handler injected.