@@ -19,7 +19,7 @@ package github
 import (
 	"bytes"
 	"encoding/json"
-	"io/ioutil"
+	"io"
 	"net/http"
 	"testing"
 
@@ -74,15 +74,15 @@ func TestRouteActiveHandler(t *testing.T) {
 			convey.So(err, convey.ShouldBeNil)
 
 			router.HandleRoute(writer, &http.Request{
-				Body: ioutil.NopCloser(bytes.NewReader(body)),
+				Body: io.NopCloser(bytes.NewReader(body)),
 			})
 			convey.So(writer.HeaderStatus, convey.ShouldEqual, http.StatusBadRequest)
 
 			convey.Convey("Active route should return success", func() {
 				route.Active = true
 
 				router.HandleRoute(writer, &http.Request{
-					Body: ioutil.NopCloser(bytes.NewReader(body)),
+					Body: io.NopCloser(bytes.NewReader(body)),
 				})
 
 				convey.So(writer.HeaderStatus, convey.ShouldEqual, http.StatusBadRequest)
@@ -121,15 +121,15 @@ func TestRouteActiveHandlerDeprecated(t *testing.T) {
 			convey.So(err, convey.ShouldBeNil)
 
 			router.HandleRoute(writer, &http.Request{
-				Body: ioutil.NopCloser(bytes.NewReader(body)),
+				Body: io.NopCloser(bytes.NewReader(body)),
 			})
 			convey.So(writer.HeaderStatus, convey.ShouldEqual, http.StatusBadRequest)
 
 			convey.Convey("Active route should return success", func() {
 				route.Active = true
 
 				router.HandleRoute(writer, &http.Request{
-					Body: ioutil.NopCloser(bytes.NewReader(body)),
+					Body: io.NopCloser(bytes.NewReader(body)),
 				})
 
 				convey.So(writer.HeaderStatus, convey.ShouldEqual, http.StatusBadRequest)