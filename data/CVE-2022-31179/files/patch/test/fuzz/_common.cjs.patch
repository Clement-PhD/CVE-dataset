@@ -25,26 +25,35 @@ function isShellPowerShell(shell) {
 }
 
 function getExpectedOutput({ arg, shell }, normalizeWhitespace) {
-  if (isShellCmd(shell)) {
-    arg = arg.replace(/[\n\r]+/g, ""); // Remove newline characters, like prep
-  }
-
   arg = arg.replace(/\u{0}/gu, ""); // Remove null characters, like Shescape
 
   if (normalizeWhitespace) {
-    // The characters to normalize depend on the shell
-    // Trim the string like any shell would
+    // Trim the string, like the shell
     if (isShellPowerShell(shell)) {
-      arg = arg.replace(/^[\s\u0085]+|[\s\u0085]+$/g, "");
+      arg = arg.replace(
+        /^[ \t\n\v\f\r\u0085\u00A0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]+|[ \t\n\v\f\r\u0085\u00A0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]+$/g,
+        ""
+      );
+    } else if (isShellCmd(shell)) {
+      arg = arg.replace(/^[ \t\n\r]+|[ \t\n\r]+$/g, "");
     } else {
-      arg = arg.replace(/^[ \t]+|[ \t]+$/g, "");
+      arg = arg.replace(/^[ \t\n]+|[ \t\n]+$/g, "");
     }
 
-    // Convert spacing between arguments to a single space, like the shell would
+    // Convert spacing between arguments to a single space, like the shell
     if (isShellPowerShell(shell)) {
-      arg = arg.replace(/(\s|\u0085)+/g, " ");
+      arg = arg.replace(
+        /[ \t\n\v\f\r\u0085\u00A0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]+/g,
+        " "
+      );
+    } else if (isShellCmd(shell)) {
+      arg = arg.replace(/[ \t\n\r]+/g, " ");
     } else {
-      arg = arg.replace(/[ \t]+/g, " ");
+      arg = arg.replace(/[ \t\n]+/g, " ");
+    }
+  } else {
+    if (isShellCmd(shell)) {
+      arg = arg.replace(/[\n\r]/g, " "); // Change newlines to spaces, like Shescape
     }
   }
 
@@ -57,12 +66,6 @@ function getFuzzShell() {
 }
 
 function prepareArg({ arg, quoted, shell }, disableExtraWindowsPreparations) {
-  if (isShellCmd(shell)) {
-    // In CMD ignores everything after a newline (\n) character. This alteration
-    // is required even when `disableExtraWindowsPreparations` is true.
-    arg = arg.replace(/[\n\r]+/g, "");
-  }
-
   if (isWindows() && !disableExtraWindowsPreparations) {
     // Node on Windows ...
     if (isShellCmd(shell)) {