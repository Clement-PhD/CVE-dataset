@@ -107,6 +107,30 @@ def build(self, isa_yaml, platform_yaml):
           self.isa += 'd'
       if "C" in ispec["ISA"]:
           self.isa += 'c'
+      if "Zba" in ispec["ISA"]:
+          self.isa += '_Zba'
+      if "Zbb" in ispec["ISA"]:
+          self.isa += '_Zbb'
+      if "Zbc" in ispec["ISA"]:
+          self.isa += '_Zbc'
+      if "Zbkb" in ispec["ISA"]:
+          self.isa += '_Zbkb'
+      if "Zbkc" in ispec["ISA"]:
+          self.isa += '_Zbkc'
+      if "Zbkx" in ispec["ISA"]:
+          self.isa += '_Zbkx'
+      if "Zbs" in ispec["ISA"]:
+          self.isa += '_Zbs'
+      if "Zknd" in ispec["ISA"]:
+          self.isa += '_Zknd'
+      if "Zkne" in ispec["ISA"]:
+          self.isa += '_Zkne'
+      if "Zknh" in ispec["ISA"]:
+          self.isa += '_Zknh'
+      if "Zksed" in ispec["ISA"]:
+          self.isa += '_Zksed'
+      if "Zksh" in ispec["ISA"]:
+          self.isa += '_Zksh'
 
       #TODO: The following assumes you are using the riscv-gcc toolchain. If
       #      not please change appropriately
@@ -153,7 +177,7 @@ def runTests(self, testList):
 
           # substitute all variables in the compile command that we created in the initialize
           # function
-          cmd = self.compile_cmd.format(testentry['isa'].lower(), test, elf, compile_macros)
+          cmd = self.compile_cmd.format(self.isa.lower(), test, elf, compile_macros)
 
 	  # if the user wants to disable running the tests and only compile the tests, then
 	  # the "else" clause is executed below assigning the sim command to simple no action