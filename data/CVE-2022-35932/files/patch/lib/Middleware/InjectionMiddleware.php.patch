@@ -23,6 +23,7 @@
 
 namespace OCA\Talk\Middleware;
 
+use OC\Security\Bruteforce\Throttler;
 use OCA\Talk\Controller\AEnvironmentAwareController;
 use OCA\Talk\Exceptions\ParticipantNotFoundException;
 use OCA\Talk\Exceptions\PermissionsException;
@@ -51,17 +52,20 @@ class InjectionMiddleware extends Middleware {
 	private IControllerMethodReflector $reflector;
 	private TalkSession $talkSession;
 	private Manager $manager;
+	private Throttler $throttler;
 	private ?string $userId;
 
 	public function __construct(IRequest $request,
 								IControllerMethodReflector $reflector,
 								TalkSession $talkSession,
 								Manager $manager,
+								Throttler $throttler,
 								?string $userId) {
 		$this->request = $request;
 		$this->reflector = $reflector;
 		$this->talkSession = $talkSession;
 		$this->manager = $manager;
+		$this->throttler = $throttler;
 		$this->userId = $userId;
 	}
 
@@ -250,6 +254,13 @@ public function afterException($controller, $methodName, \Exception $exception):
 		if ($exception instanceof RoomNotFoundException ||
 			$exception instanceof ParticipantNotFoundException) {
 			if ($controller instanceof OCSController) {
+				$isBruteForceProtected = $this->reflector->hasAnnotation('BruteForceProtection');
+				if ($isBruteForceProtected) {
+					$ip = $this->request->getRemoteAddress();
+					$action = 'talkRoomToken';
+					$this->throttler->sleepDelay($ip, $action);
+					$this->throttler->registerAttempt($action, $ip);
+				}
 				throw new OCSException('', Http::STATUS_NOT_FOUND);
 			}
 