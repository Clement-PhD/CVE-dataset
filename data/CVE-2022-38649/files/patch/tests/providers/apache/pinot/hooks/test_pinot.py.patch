@@ -35,7 +35,7 @@ def setUp(self):
         self.conn = conn = mock.MagicMock()
         self.conn.host = "host"
         self.conn.port = "1000"
-        self.conn.extra_dejson = {"cmd_path": "./pinot-admin.sh"}
+        self.conn.extra_dejson = {}
 
         class PinotAdminHookTest(PinotAdminHook):
             def get_connection(self, conn_id):
@@ -165,7 +165,7 @@ def test_run_cli_success(self, mock_popen):
 
         params = ["foo", "bar", "baz"]
         self.db_hook.run_cli(params)
-        params.insert(0, self.conn.extra_dejson.get("cmd_path"))
+        params.insert(0, "pinot-admin.sh")
         mock_popen.assert_called_once_with(
             params, stderr=subprocess.STDOUT, stdout=subprocess.PIPE, close_fds=True, env=None
         )
@@ -180,7 +180,7 @@ def test_run_cli_failure_error_message(self, mock_popen):
         params = ["foo", "bar", "baz"]
         with pytest.raises(AirflowException):
             self.db_hook.run_cli(params)
-        params.insert(0, self.conn.extra_dejson.get("cmd_path"))
+        params.insert(0, "pinot-admin.sh")
         mock_popen.assert_called_once_with(
             params, stderr=subprocess.STDOUT, stdout=subprocess.PIPE, close_fds=True, env=None
         )
@@ -196,14 +196,23 @@ def test_run_cli_failure_status_code(self, mock_popen):
         params = ["foo", "bar", "baz"]
         with pytest.raises(AirflowException):
             self.db_hook.run_cli(params)
-        params.insert(0, self.conn.extra_dejson.get("cmd_path"))
+        params.insert(0, "pinot-admin.sh")
         env = os.environ.copy()
         env.update({"JAVA_OPTS": "-Dpinot.admin.system.exit=true "})
         mock_popen.assert_called_once_with(
             params, stderr=subprocess.STDOUT, stdout=subprocess.PIPE, close_fds=True, env=env
         )
 
 
+class TestPinotAdminHookCreation:
+    def test_exception_when_overriding_cmd_path(self):
+        with pytest.raises(RuntimeError):
+            PinotAdminHook(cmd_path="some_path.sh")
+
+    def test_exception_when_keeping_cmd_path(self):
+        PinotAdminHook(cmd_path="pinot-admin.sh")
+
+
 class TestPinotDbApiHook(unittest.TestCase):
     def setUp(self):
         super().setUp()