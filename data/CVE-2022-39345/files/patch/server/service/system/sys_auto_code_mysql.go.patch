@@ -12,27 +12,36 @@ type autoCodeMysql struct{}
 // GetDB 获取数据库的所有数据库名
 // Author [piexlmax](https://github.com/piexlmax)
 // Author [SliverHorn](https://github.com/SliverHorn)
-func (s *autoCodeMysql) GetDB() (data []response.Db, err error) {
+func (s *autoCodeMysql) GetDB(businessDB string) (data []response.Db, err error) {
 	var entities []response.Db
 	sql := "SELECT SCHEMA_NAME AS `database` FROM INFORMATION_SCHEMA.SCHEMATA;"
-	err = global.GVA_DB.Raw(sql).Scan(&entities).Error
+	if businessDB == "" {
+		err = global.GVA_DB.Raw(sql).Scan(&entities).Error
+	} else {
+		err = global.GVA_DBList[businessDB].Raw(sql).Scan(&entities).Error
+	}
 	return entities, err
 }
 
 // GetTables 获取数据库的所有表名
 // Author [piexlmax](https://github.com/piexlmax)
 // Author [SliverHorn](https://github.com/SliverHorn)
-func (s *autoCodeMysql) GetTables(dbName string) (data []response.Table, err error) {
+func (s *autoCodeMysql) GetTables(businessDB string, dbName string) (data []response.Table, err error) {
 	var entities []response.Table
 	sql := `select table_name as table_name from information_schema.tables where table_schema = ?`
-	err = global.GVA_DB.Raw(sql, dbName).Scan(&entities).Error
+	if businessDB == "" {
+		err = global.GVA_DB.Raw(sql, dbName).Scan(&entities).Error
+	} else {
+		err = global.GVA_DBList[businessDB].Raw(sql, dbName).Scan(&entities).Error
+	}
+
 	return entities, err
 }
 
 // GetColumn 获取指定数据库和指定数据表的所有字段名,类型值等
 // Author [piexlmax](https://github.com/piexlmax)
 // Author [SliverHorn](https://github.com/SliverHorn)
-func (s *autoCodeMysql) GetColumn(tableName string, dbName string) (data []response.Column, err error) {
+func (s *autoCodeMysql) GetColumn(businessDB string, tableName string, dbName string) (data []response.Column, err error) {
 	var entities []response.Column
 	sql := `
 	SELECT COLUMN_NAME        column_name,
@@ -50,6 +59,11 @@ func (s *autoCodeMysql) GetColumn(tableName string, dbName string) (data []respo
 	WHERE table_name = ?
 	  AND table_schema = ?
 	`
-	err = global.GVA_DB.Raw(sql, tableName, dbName).Scan(&entities).Error
+	if businessDB == "" {
+		err = global.GVA_DB.Raw(sql, tableName, dbName).Scan(&entities).Error
+	} else {
+		err = global.GVA_DBList[businessDB].Raw(sql, tableName, dbName).Scan(&entities).Error
+	}
+
 	return entities, err
 }