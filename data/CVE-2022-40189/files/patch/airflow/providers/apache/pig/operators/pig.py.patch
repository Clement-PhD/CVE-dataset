@@ -38,10 +38,11 @@ class PigOperator(BaseOperator):
         you may want to use this along with the
         ``DAG(user_defined_macros=myargs)`` parameter. View the DAG
         object documentation for more details.
-    :param pig_opts: pig options, such as: -x tez, -useHCatalog, ...
+    :param pig_opts: pig options, such as: -x tez, -useHCatalog, ... - space separated list
+    :param pig_properties: pig properties, additional pig properties passed as list
     """
 
-    template_fields: Sequence[str] = ("pig",)
+    template_fields: Sequence[str] = ("pig", "pig_opts", "pig_properties")
     template_ext: Sequence[str] = (
         ".pig",
         ".piglatin",
@@ -55,6 +56,7 @@ def __init__(
         pig_cli_conn_id: str = "pig_cli_default",
         pigparams_jinja_translate: bool = False,
         pig_opts: str | None = None,
+        pig_properties: list[str] | None = None,
         **kwargs: Any,
     ) -> None:
 
@@ -63,6 +65,7 @@ def __init__(
         self.pig = pig
         self.pig_cli_conn_id = pig_cli_conn_id
         self.pig_opts = pig_opts
+        self.pig_properties = pig_properties
         self.hook: PigCliHook | None = None
 
     def prepare_template(self):
@@ -71,7 +74,7 @@ def prepare_template(self):
 
     def execute(self, context: Context):
         self.log.info("Executing: %s", self.pig)
-        self.hook = PigCliHook(pig_cli_conn_id=self.pig_cli_conn_id)
+        self.hook = PigCliHook(pig_cli_conn_id=self.pig_cli_conn_id, pig_properties=self.pig_properties)
         self.hook.run_cli(pig=self.pig, pig_opts=self.pig_opts)
 
     def on_kill(self):