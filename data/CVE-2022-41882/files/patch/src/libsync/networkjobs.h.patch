@@ -382,22 +382,7 @@ private slots:
     bool finished() override;
 };
 
-/**
- * @brief Job to check an API that return JSON
- *
- * Note! you need to be in the connected state before calling this because of a server bug:
- * https://github.com/owncloud/core/issues/12930
- *
- * To be used like this:
- * \code
- * _job = new JsonApiJob(account, QLatin1String("ocs/v1.php/foo/bar"), this);
- * connect(job, SIGNAL(jsonReceived(QJsonDocument)), ...)
- * The received QVariantMap is null in case of error
- * \encode
- *
- * @ingroup libsync
- */
-class OWNCLOUDSYNC_EXPORT JsonApiJob : public AbstractNetworkJob
+class OWNCLOUDSYNC_EXPORT SimpleApiJob : public AbstractNetworkJob
 {
     Q_OBJECT
 public:
@@ -406,9 +391,13 @@ class OWNCLOUDSYNC_EXPORT JsonApiJob : public AbstractNetworkJob
         Post,
         Put,
         Delete,
-    };
+        };
 
-    explicit JsonApiJob(const AccountPtr &account, const QString &path, QObject *parent = nullptr);
+    explicit SimpleApiJob(const AccountPtr &account, const QString &path, QObject *parent = nullptr);
+
+    void setBody(const QByteArray &body);
+
+    void setVerb(Verb value);
 
     /**
      * @brief addQueryParams - add more parameters to the ocs call
@@ -423,9 +412,50 @@ class OWNCLOUDSYNC_EXPORT JsonApiJob : public AbstractNetworkJob
     void addQueryParams(const QUrlQuery &params);
     void addRawHeader(const QByteArray &headerName, const QByteArray &value);
 
-    void setBody(const QJsonDocument &body);
+public slots:
+    void start() override;
 
-    void setVerb(Verb value);
+Q_SIGNALS:
+
+    void resultReceived(int statusCode);
+
+protected:
+    bool finished() override;
+
+    [[nodiscard]] QNetworkRequest& request();
+    [[nodiscard]] QByteArray& body();
+    [[nodiscard]] QUrlQuery& additionalParams();
+    [[nodiscard]] QByteArray verbToString() const;
+
+private:
+    QByteArray _body;
+    QUrlQuery _additionalParams;
+    QNetworkRequest _request;
+    Verb _verb = Verb::Get;
+};
+
+/**
+ * @brief Job to check an API that return JSON
+ *
+ * Note! you need to be in the connected state before calling this because of a server bug:
+ * https://github.com/owncloud/core/issues/12930
+ *
+ * To be used like this:
+ * \code
+ * _job = new JsonApiJob(account, QLatin1String("ocs/v1.php/foo/bar"), this);
+ * connect(job, SIGNAL(jsonReceived(QJsonDocument)), ...)
+ * The received QVariantMap is null in case of error
+ * \encode
+ *
+ * @ingroup libsync
+ */
+class OWNCLOUDSYNC_EXPORT JsonApiJob : public SimpleApiJob
+{
+    Q_OBJECT
+public:
+    explicit JsonApiJob(const AccountPtr &account, const QString &path, QObject *parent = nullptr);
+
+    void setBody(const QJsonDocument &body);
 
 public slots:
     void start() override;
@@ -448,15 +478,6 @@ public slots:
      * @param statusCode - the OCS status code: 100 (!) for success
      */
     void etagResponseHeaderReceived(const QByteArray &value, int statusCode);
-
-private:
-    QByteArray _body;
-    QUrlQuery _additionalParams;
-    QNetworkRequest _request;
-
-    Verb _verb = Verb::Get;
-
-    [[nodiscard]] QByteArray verbToString() const;
 };
 
 /**