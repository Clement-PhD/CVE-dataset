@@ -68,9 +68,9 @@ private function getUnavailableDays($classroomId, $fullDate, $level)
     {
         $unavailableDays = [];
         if ($level == "hard") {
-            $firstDay = Yii::app()->db->createCommand("select DATE(ce.start_date) as start_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and YEAR(c.start_date) = " . Yii::app()->user->year . " and calendar_event_type_fk = 1000;")->queryRow();
-            $lastDay = Yii::app()->db->createCommand("select DATE(ce.end_date) as end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and YEAR(c.start_date) = " . Yii::app()->user->year . " and calendar_event_type_fk  = 1001;")->queryRow();
-            $unavailableEvents = Yii::app()->db->createCommand("select ce.start_date, ce.end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and ce.calendar_event_type_fk = 102 and YEAR(c.start_date) = " . Yii::app()->user->year . " and (ce.school_fk is null or ce.school_fk = " . Yii::app()->user->school . ");")->queryAll();
+            $firstDay = Yii::app()->db->createCommand("select DATE(ce.start_date) as start_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and YEAR(c.start_date) = :year and calendar_event_type_fk = 1000;")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->queryRow();
+            $lastDay = Yii::app()->db->createCommand("select DATE(ce.end_date) as end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and YEAR(c.start_date) = :year and calendar_event_type_fk  = 1001;")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->queryRow();
+            $unavailableEvents = Yii::app()->db->createCommand("select ce.start_date, ce.end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and ce.calendar_event_type_fk = 102 and YEAR(c.start_date) = :year and (ce.school_fk is null or ce.school_fk = :school);")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->bindParam(":school", Yii::app()->user->school)->queryAll();
             $unavailableEventsArray = [];
             foreach ($unavailableEvents as $unavailableEvent) {
                 $startDate = new DateTime($unavailableEvent["start_date"]);
@@ -105,7 +105,7 @@ private function getUnavailableDays($classroomId, $fullDate, $level)
                 }
             }
         } else if ($level == "soft") {
-            $unavailableEvents = Yii::app()->db->createCommand("select ce.start_date, ce.end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and ce.calendar_event_type_fk = 101 and YEAR(c.start_date) = " . Yii::app()->user->year . " and (ce.school_fk is null or ce.school_fk = " . Yii::app()->user->school . ");")->queryAll();
+            $unavailableEvents = Yii::app()->db->createCommand("select ce.start_date, ce.end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and ce.calendar_event_type_fk = 101 and YEAR(c.start_date) = :year and (ce.school_fk is null or ce.school_fk = :school);")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->bindParam(":school", Yii::app()->user->school)->queryAll();
             foreach ($unavailableEvents as $unavailableEvent) {
                 $startDate = new DateTime($unavailableEvent["start_date"]);
                 $endDate = new DateTime($unavailableEvent["end_date"]);
@@ -138,11 +138,11 @@ public function actionGetTimesheet($classroomId = NULL)
         }
         $classroom = Classroom::model()->find("id = :classroomId", [":classroomId" => $classroomId]);
 
-        $firstDay = Yii::app()->db->createCommand("select DATE(ce.start_date) as start_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and YEAR(c.start_date) = " . Yii::app()->user->year . " and calendar_event_type_fk = 1000 and c.available = 1;")->queryRow();
-        $lastDay = Yii::app()->db->createCommand("select DATE(ce.end_date) as end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and YEAR(c.start_date) = " . Yii::app()->user->year . " and calendar_event_type_fk  = 1001 and c.available = 1;")->queryRow();
+        $firstDay = Yii::app()->db->createCommand("select DATE(ce.start_date) as start_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and YEAR(c.start_date) = :year and calendar_event_type_fk = 1000 and c.available = 1;")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->queryRow();
+        $lastDay = Yii::app()->db->createCommand("select DATE(ce.end_date) as end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and YEAR(c.start_date) = :year and calendar_event_type_fk  = 1001 and c.available = 1;")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->queryRow();
 
         if (is_array($firstDay) && is_array($lastDay)) {
-            $calendarEvents = Yii::app()->db->createCommand("select ce.*, cet.* from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) inner join calendar_event_type as cet on cet.id = ce.calendar_event_type_fk join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and YEAR(c.start_date) = " . Yii::app()->user->year . " and (ce.school_fk is null or ce.school_fk = " . Yii::app()->user->school . ");")->queryAll();
+            $calendarEvents = Yii::app()->db->createCommand("select ce.*, cet.* from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) inner join calendar_event_type as cet on cet.id = ce.calendar_event_type_fk join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and YEAR(c.start_date) = :year and (ce.school_fk is null or ce.school_fk = :school);")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->bindParam(":school", Yii::app()->user->school)->queryAll();
             $calendarEventsArray = [];
             foreach ($calendarEvents as $calendarEvent) {
                 $startDate = new DateTime($calendarEvent["start_date"]);
@@ -162,8 +162,8 @@ public function actionGetTimesheet($classroomId = NULL)
             }
             $response["calendarEvents"] = $calendarEventsArray;
 
-            $curricularMatrix = TimesheetCurricularMatrix::model()->findAll("stage_fk = :stage and school_fk = :school", [
-                ":stage" => $classroom->edcenso_stage_vs_modality_fk, ":school" => Yii::app()->user->school
+            $curricularMatrix = TimesheetCurricularMatrix::model()->findAll("stage_fk = :stage", [
+                ":stage" => $classroom->edcenso_stage_vs_modality_fk
             ]);
             $response["disciplines"] = [];
             foreach ($curricularMatrix as $cm) {
@@ -189,7 +189,7 @@ public function actionGetTimesheet($classroomId = NULL)
                     $response["hardUnavailableDays"] = $this->getUnavailableDays($classroomId, false, "hard");
                     $response["softUnavailableDays"] = $this->getUnavailableDays($classroomId, false, "soft");
 
-                    $lastClassFaultDay = Yii::app()->db->createCommand("select s.* from class_faults as cf join schedule as s on cf.schedule_fk = s.id where s.classroom_fk = " . $classroomId . " order by month DESC, day DESC limit 1")->queryRow();
+                    $lastClassFaultDay = Yii::app()->db->createCommand("select s.* from class_faults as cf join schedule as s on cf.schedule_fk = s.id where s.classroom_fk = :id order by month DESC, day DESC limit 1")->bindParam(":id", $classroomId)->queryRow();
                     if ($lastClassFaultDay != false) {
                         $response["frequencyUnavailableLastDay"] = ["month" => $lastClassFaultDay["month"], "day" => $lastClassFaultDay["day"]];
                     }
@@ -259,8 +259,8 @@ public function actionGenerateTimesheet()
         $criteria->params = ["classroom_fk" => $classroomId];
         $hasFrequency = ClassFaults::model()->exists($criteria);
         if (!$hasFrequency) {
-            $curricularMatrix = TimesheetCurricularMatrix::model()->findAll("stage_fk = :stage and school_fk = :school", [
-                ":stage" => $classroom->edcenso_stage_vs_modality_fk, ":school" => Yii::app()->user->school
+            $curricularMatrix = TimesheetCurricularMatrix::model()->findAll("stage_fk = :stage", [
+                ":stage" => $classroom->edcenso_stage_vs_modality_fk
             ]);
             if ($curricularMatrix != null) {
                 Schedule::model()->deleteAll("classroom_fk = :classroom", [":classroom" => $classroomId]);
@@ -406,7 +406,7 @@ public function actionGenerateTimesheet()
                     }
 
                     if ($discipline !== null) {
-                        $unavailableEvents = Yii::app()->db->createCommand("select ce.start_date, ce.end_date, ce.calendar_event_type_fk from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and (ce.calendar_event_type_fk = 101 or ce.calendar_event_type_fk = 102) and YEAR(c.start_date) = " . Yii::app()->user->year . " and (ce.school_fk is null or ce.school_fk = " . Yii::app()->user->school . ");")->queryAll();
+                        $unavailableEvents = Yii::app()->db->createCommand("select ce.start_date, ce.end_date, ce.calendar_event_type_fk from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and (ce.calendar_event_type_fk = 101 or ce.calendar_event_type_fk = 102) and YEAR(c.start_date) = :year and (ce.school_fk is null or ce.school_fk = :school);")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->bindParam(":school", Yii::app()->user->school)->queryAll();
                         $hardUnavailableDaysArray = [];
                         $softUnavailableDaysArray = [];
                         foreach ($unavailableEvents as $unavailableEvent) {
@@ -428,8 +428,8 @@ public function actionGenerateTimesheet()
                             }
                         }
 
-                        $firstDay = Yii::app()->db->createCommand("select ce.start_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and YEAR(c.start_date) = " . Yii::app()->user->year . " and calendar_event_type_fk = 1000;")->queryRow();
-                        $lastDay = Yii::app()->db->createCommand("select ce.end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = " . $classroomId . " and YEAR(c.start_date) = " . Yii::app()->user->year . " and calendar_event_type_fk  = 1001;")->queryRow();
+                        $firstDay = Yii::app()->db->createCommand("select ce.start_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and YEAR(c.start_date) = :year and calendar_event_type_fk = 1000;")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->queryRow();
+                        $lastDay = Yii::app()->db->createCommand("select ce.end_date from calendar_event as ce inner join calendar as c on (ce.calendar_fk = c.id) join calendar_stages as cs on cs.calendar_fk = c.id join classroom cr on cr.edcenso_stage_vs_modality_fk = cs.stage_fk where cr.id = :id and YEAR(c.start_date) = :year and calendar_event_type_fk  = 1001;")->bindParam(":id", $classroomId)->bindParam(":year", Yii::app()->user->year)->queryRow();
                         $firstDay = new DateTime($firstDay["start_date"]);
                         $lastDay = new DateTime($lastDay["end_date"]);
                         $lastDay->modify('+1 day');
@@ -563,7 +563,8 @@ public function actionChangeSchedules()
             " curricular_matrix.workload as workloadTotal " .
             " from curricular_matrix " .
             " join edcenso_discipline on edcenso_discipline.id = curricular_matrix.discipline_fk " .
-            " where curricular_matrix.stage_fk = " . $classroom->edcenso_stage_vs_modality_fk . " and curricular_matrix.school_fk = " . Yii::app()->user->school)->queryAll();
+            " where curricular_matrix.stage_fk = :stage")
+            ->bindParam(":stage", $classroom->edcenso_stage_vs_modality_fk)->queryAll();
         echo json_encode(["valid" => true, "changes" => $changes, "disciplines" => $workloads]);
     }
 
@@ -760,9 +761,9 @@ public function actionGetInstructors()
         if (isset($_POST['discipline'])) {
             $id = $_POST['discipline'];
             $list = CHtml::listData(InstructorDisciplines::model()->findAllByAttributes(["discipline_fk" => $id]), "instructorFk.id", "instructorFk.name");
-            echo CHtml::tag('option', ["value" => "null"], "Sem Instrutor");
+            echo htmlspecialchars(CHtml::tag('option', ["value" => "null"], "Sem Instrutor"));
             foreach ($list as $id => $name) {
-                echo CHtml::tag('option', ["value" => $id], $name);
+                echo htmlspecialchars(CHtml::tag('option', ["value" => $id], $name));
             }
         }
     }