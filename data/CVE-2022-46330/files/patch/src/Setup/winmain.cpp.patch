@@ -15,30 +15,34 @@ typedef BOOL(WINAPI *SetDefaultDllDirectoriesFunction)(DWORD DirectoryFlags);
 
 // Some libraries are still loaded from the current directories.
 // If we pre-load them with an absolute path then we are good.
-void PreloadLibs()
+static void PreloadLibs()
 {
 	wchar_t sys32Folder[MAX_PATH];
 	GetSystemDirectory(sys32Folder, MAX_PATH);
 
 	std::wstring version = (std::wstring(sys32Folder) + L"\\version.dll");
 	std::wstring logoncli = (std::wstring(sys32Folder) + L"\\logoncli.dll");
 	std::wstring sspicli = (std::wstring(sys32Folder) + L"\\sspicli.dll");
+	std::wstring urlmon = (std::wstring(sys32Folder) + L"\\urlmon.dll");
 
 	LoadLibrary(version.c_str());
 	LoadLibrary(logoncli.c_str());
 	LoadLibrary(sspicli.c_str());
+	LoadLibrary(urlmon.c_str());
 }
 
-void MitigateDllHijacking()
+static void MitigateDllHijacking()
 {
 	// Set the default DLL lookup directory to System32 for ourselves and kernel32.dll
-	SetDefaultDllDirectories(LOAD_LIBRARY_SEARCH_SYSTEM32);
-
 	HMODULE hKernel32 = LoadLibrary(L"kernel32.dll");
-	ATLASSERT(hKernel32 != NULL);
-
-	SetDefaultDllDirectoriesFunction pfn = (SetDefaultDllDirectoriesFunction)GetProcAddress(hKernel32, "SetDefaultDllDirectories");
-	if (pfn) { (*pfn)(LOAD_LIBRARY_SEARCH_SYSTEM32); }
+	if (hKernel32)
+	{
+		SetDefaultDllDirectoriesFunction pfn = (SetDefaultDllDirectoriesFunction)GetProcAddress(hKernel32, "SetDefaultDllDirectories");
+		if (pfn)
+		{
+			(*pfn)(LOAD_LIBRARY_SEARCH_SYSTEM32);
+		}
+	}
 
 	PreloadLibs();
 }
@@ -48,7 +52,7 @@ int APIENTRY wWinMain(_In_ HINSTANCE hInstance,
                       _In_ LPWSTR lpCmdLine,
                       _In_ int nCmdShow)
 {
-	MitigateDllHijacking();	
+	MitigateDllHijacking();
 
 	int exitCode = -1;
 	CString cmdLine(lpCmdLine);