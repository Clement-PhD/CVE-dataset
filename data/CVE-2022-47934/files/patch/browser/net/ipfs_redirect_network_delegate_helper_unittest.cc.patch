@@ -108,7 +108,7 @@ TEST_F(IPFSRedirectNetworkDelegateHelperTest,
 
   GURL url("ipfs://QmfM2r8seH2GiRaC4esTjeraXEachRt8ZsSeGaWTPLyMoG");
   auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);
-  brave_request_info->resource_type = blink::mojom::ResourceType::kSubFrame;
+  brave_request_info->resource_type = blink::mojom::ResourceType::kMainFrame;
   brave_request_info->browser_context = profile()->GetOffTheRecordProfile(
       Profile::OTRProfileID::CreateUnique("incognito"), true);
   int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(brave::ResponseCallback(),
@@ -117,6 +117,22 @@ TEST_F(IPFSRedirectNetworkDelegateHelperTest,
   EXPECT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);
 }
 
+TEST_F(IPFSRedirectNetworkDelegateHelperTest,
+       SubFrameRequestDisabledWhenIPFSDisabled_Incognito_Subframe) {
+  profile()->GetPrefs()->SetInteger(
+      kIPFSResolveMethod, static_cast<int>(IPFSResolveMethodTypes::IPFS_LOCAL));
+
+  GURL url("ipfs://QmfM2r8seH2GiRaC4esTjeraXEachRt8ZsSeGaWTPLyMoG");
+  auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);
+  brave_request_info->resource_type = blink::mojom::ResourceType::kSubFrame;
+  brave_request_info->browser_context = profile()->GetOffTheRecordProfile(
+      Profile::OTRProfileID::CreateUnique("incognito"), true);
+  int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(brave::ResponseCallback(),
+                                                     brave_request_info);
+  EXPECT_EQ(rc, net::OK);
+  EXPECT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);
+}
+
 TEST_F(IPFSRedirectNetworkDelegateHelperTest,
        LoadDisabledWhenIPFS_WhenWrongIPFSUrl) {
   profile()->GetPrefs()->SetInteger(