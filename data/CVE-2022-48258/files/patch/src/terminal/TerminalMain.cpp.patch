@@ -48,7 +48,9 @@ int main(int argc, char** argv) {
         // Not used by etterminal but easylogging uses this flag under the hood
         ("v,verbose", "Enable verbose logging",
          cxxopts::value<int>()->default_value("0"))  //
-        ("logtostdout", "Write log to stdout")       //
+        ("l,logdir", "Base directory for log files.",
+         cxxopts::value<std::string>()->default_value(GetTempDirectory()))  //
+        ("logtostdout", "Write log to stdout")                              //
         ("serverfifo",
          "If set, connects to the etserver instance listening on the matching "
          "fifo name",                                       //
@@ -63,15 +65,6 @@ int main(int argc, char** argv) {
 
     el::Loggers::setVerboseLevel(result["verbose"].as<int>());
 
-    if (result.count("logtostdout")) {
-      defaultConf.setGlobally(el::ConfigurationType::ToStandardOutput, "true");
-    } else {
-      defaultConf.setGlobally(el::ConfigurationType::ToStandardOutput, "false");
-    }
-
-    // default max log file size is 20MB for etserver
-    string maxlogsize = "20971520";
-
     GOOGLE_PROTOBUF_VERIFY_VERSION;
     srand(1);
 
@@ -147,10 +140,9 @@ int main(int argc, char** argv) {
     string username = string(ssh_get_local_username());
     if (result.count("jump")) {
       // etserver with --jump cannot write to the default log file(root)
-      LogHandler::setupLogFile(
-          &defaultConf,
-          GetTempDirectory() + "etjump-" + username + "-" + id + ".log",
-          maxlogsize);
+      LogHandler::setupLogFiles(&defaultConf, result["logdir"].as<string>(),
+                                ("etjump-" + username + "-" + id),
+                                result.count("logtostdout"), false);
       // Reconfigure default logger to apply settings above
       el::Loggers::reconfigureLogger("default", defaultConf);
       // set thread name
@@ -177,10 +169,10 @@ int main(int argc, char** argv) {
     }
 
     // etserver with --idpasskey cannot write to the default log file(root)
-    LogHandler::setupLogFile(
-        &defaultConf,
-        GetTempDirectory() + "etterminal-" + username + "-" + id + ".log",
-        maxlogsize);
+    LogHandler::setupLogFiles(&defaultConf, result["logdir"].as<string>(),
+                              ("etterminal-" + username + "-" + id),
+                              result.count("logtostdout"), false);
+
     // Reconfigure default logger to apply settings above
     el::Loggers::reconfigureLogger("default", defaultConf);
     // set thread name