@@ -57,9 +57,9 @@ public function adicionar()
         if ($this->form_validation->run('produtos') == false) {
             $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">' . validation_errors() . '</div>' : false);
         } else {
-            $precoCompra = $this->input->post('precoCompra');
+            $precoCompra = $this->input->post('precoCompra', TRUE);
             $precoCompra = str_replace(",", "", $precoCompra);
-            $precoVenda = $this->input->post('precoVenda');
+            $precoVenda = $this->input->post('precoVenda', TRUE);
             $precoVenda = str_replace(",", "", $precoVenda);
             $data = [
                 'codDeBarra' => set_value('codDeBarra'),
@@ -102,26 +102,26 @@ public function editar()
         if ($this->form_validation->run('produtos') == false) {
             $this->data['custom_error'] = (validation_errors() ? '<div class="form_error">' . validation_errors() . '</div>' : false);
         } else {
-            $precoCompra = $this->input->post('precoCompra');
+            $precoCompra = $this->input->post('precoCompra', TRUE);
             $precoCompra = str_replace(",", "", $precoCompra);
-            $precoVenda = $this->input->post('precoVenda');
+            $precoVenda = $this->input->post('precoVenda', TRUE);
             $precoVenda = str_replace(",", "", $precoVenda);
             $data = [
                 'codDeBarra' => set_value('codDeBarra'),
-                'descricao' => $this->input->post('descricao'),
-                'unidade' => $this->input->post('unidade'),
+                'descricao' => $this->input->post('descricao', TRUE),
+                'unidade' => $this->input->post('unidade', TRUE),
                 'precoCompra' => $precoCompra,
                 'precoVenda' => $precoVenda,
-                'estoque' => $this->input->post('estoque'),
-                'estoqueMinimo' => $this->input->post('estoqueMinimo'),
+                'estoque' => $this->input->post('estoque', TRUE),
+                'estoqueMinimo' => $this->input->post('estoqueMinimo', TRUE),
                 'saida' => set_value('saida'),
                 'entrada' => set_value('entrada'),
             ];
 
-            if ($this->produtos_model->edit('produtos', $data, 'idProdutos', $this->input->post('idProdutos')) == true) {
+            if ($this->produtos_model->edit('produtos', $data, 'idProdutos', $this->input->post('idProdutos', TRUE)) == true) {
                 $this->session->set_flashdata('success', 'Produto editado com sucesso!');
-                log_info('Alterou um produto. ID: ' . $this->input->post('idProdutos'));
-                redirect(site_url('produtos/editar/') . $this->input->post('idProdutos'));
+                log_info('Alterou um produto. ID: ' . $this->input->post('idProdutos', TRUE));
+                redirect(site_url('produtos/editar/') . $this->input->post('idProdutos', TRUE));
             } else {
                 $this->data['custom_error'] = '<div class="form_error"><p>An Error Occured</p></div>';
             }
@@ -149,7 +149,7 @@ public function visualizar()
 
         if ($this->data['result'] == null) {
             $this->session->set_flashdata('error', 'Produto nÃ£o encontrado.');
-            redirect(site_url('produtos/editar/') . $this->input->post('idProdutos'));
+            redirect(site_url('produtos/editar/') . $this->input->post('idProdutos', TRUE));
         }
 
         $this->data['view'] = 'produtos/visualizarProduto';
@@ -163,7 +163,7 @@ public function excluir()
             redirect(base_url());
         }
 
-        $id = $this->input->post('id');
+        $id = $this->input->post('id', TRUE);
         if ($id == null) {
             $this->session->set_flashdata('error', 'Erro ao tentar excluir produto.');
             redirect(base_url() . 'index.php/produtos/gerenciar/');
@@ -186,9 +186,9 @@ public function atualizar_estoque()
             redirect(base_url());
         }
 
-        $idProduto = $this->input->post('id');
-        $novoEstoque = $this->input->post('estoque');
-        $estoqueAtual = $this->input->post('estoqueAtual');
+        $idProduto = $this->input->post('id', TRUE);
+        $novoEstoque = $this->input->post('estoque', TRUE);
+        $estoqueAtual = $this->input->post('estoqueAtual', TRUE);
 
         $estoque = $estoqueAtual + $novoEstoque;
 