--- /dev/null
+++ /dev/null
@@ -233,32 +227,4 @@ public void testServiceFilter(){
         Outage[] outages = m_daoOutageRepo.getMatchingOutages(criteria);
         assertEquals(4, outages.length);
     }
-
-    @Test
-    public void testNMS15294() {
-        final MockHttpServletRequest httpServletRequest = new MockHttpServletRequest(new MockServletContext(), "POST", "/list.htm");
-
-        httpServletRequest.setParameter("filter", "intf=192.168.1.1");
-        httpServletRequest.setParameter("\"><script>alert('foo');</script>", "foo");
-        httpServletRequest.setParameter("foo", "\"><script>alert('foo');</script>");
-
-        final Map<String, Object> additions = new HashMap<>();
-        additions.put("sortby", "id");
-        additions.put("outtype", "current");
-        additions.put("limit", "20");
-
-        final String queryString = Util.makeQueryString(
-                httpServletRequest,
-                additions,
-                new String[] { "sortby", "outtype", "limit", "multiple", "filter" },
-                Util.IgnoreType.REQUEST_ONLY
-        );
-
-        assertThat(queryString, Matchers.not(Matchers.containsString("\"")));
-        assertThat(queryString, Matchers.not(Matchers.containsString("'")));
-        assertThat(queryString, Matchers.not(Matchers.containsString(">")));
-        assertThat(queryString, Matchers.not(Matchers.containsString("<")));
-        assertThat(queryString, Matchers.not(Matchers.containsString("<script>")));
-        assertThat(queryString, Matchers.not(Matchers.containsString("alert('foo')>")));
-    }
 
