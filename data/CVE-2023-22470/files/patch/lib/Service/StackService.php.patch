@@ -39,6 +39,7 @@
 use OCA\Deck\Model\CardDetails;
 use OCA\Deck\NoPermissionException;
 use OCA\Deck\StatusException;
+use OCA\Deck\Validators\StackServiceValidator;
 use Psr\Log\LoggerInterface;
 
 class StackService {
@@ -54,6 +55,7 @@ class StackService {
 	private ActivityManager $activityManager;
 	private ChangeHelper $changeHelper;
 	private LoggerInterface $logger;
+	private StackServiceValidator $stackServiceValidator;
 
 	public function __construct(
 		StackMapper $stackMapper,
@@ -67,7 +69,8 @@ public function __construct(
 		AttachmentService $attachmentService,
 		ActivityManager $activityManager,
 		ChangeHelper $changeHelper,
-		LoggerInterface $logger
+		LoggerInterface $logger,
+		StackServiceValidator $stackServiceValidator
 	) {
 		$this->stackMapper = $stackMapper;
 		$this->boardMapper = $boardMapper;
@@ -81,6 +84,7 @@ public function __construct(
 		$this->activityManager = $activityManager;
 		$this->changeHelper = $changeHelper;
 		$this->logger = $logger;
+		$this->stackServiceValidator = $stackServiceValidator;
 	}
 
 	private function enrichStackWithCards($stack, $since = -1) {
@@ -218,17 +222,7 @@ public function findAllArchived($boardId) {
 	 * @throws BadRequestException
 	 */
 	public function create($title, $boardId, $order) {
-		if ($title === false || $title === null || mb_strlen($title) === 0) {
-			throw new BadRequestException('title must be provided');
-		}
-
-		if (is_numeric($order) === false) {
-			throw new BadRequestException('order must be a number');
-		}
-
-		if (is_numeric($boardId) === false) {
-			throw new BadRequestException('board id must be a number');
-		}
+		$this->stackServiceValidator->check(compact('title', 'boardId', 'order'));
 
 		$this->permissionService->checkPermission(null, $boardId, Acl::PERMISSION_MANAGE);
 		if ($this->boardService->isArchived(null, $boardId)) {
@@ -291,21 +285,7 @@ public function delete($id) {
 	 * @throws BadRequestException
 	 */
 	public function update($id, $title, $boardId, $order, $deletedAt) {
-		if (is_numeric($id) === false) {
-			throw new BadRequestException('stack id must be a number');
-		}
-
-		if ($title === false || $title === null || mb_strlen($title) === 0) {
-			throw new BadRequestException('title must be provided');
-		}
-
-		if (is_numeric($boardId) === false) {
-			throw new BadRequestException('board id must be a number');
-		}
-
-		if (is_numeric($order) === false) {
-			throw new BadRequestException('order must be a number');
-		}
+		$this->stackServiceValidator->check(compact('id', 'title', 'boardId', 'order'));
 
 		$this->permissionService->checkPermission($this->stackMapper, $id, Acl::PERMISSION_MANAGE);
 		$this->permissionService->checkPermission($this->boardMapper, $boardId, Acl::PERMISSION_MANAGE);
@@ -341,13 +321,7 @@ public function update($id, $title, $boardId, $order, $deletedAt) {
 	 * @throws BadRequestException
 	 */
 	public function reorder($id, $order) {
-		if (is_numeric($id) === false) {
-			throw new BadRquestException('id must be a number');
-		}
-
-		if ($order === false || $order === null) {
-			throw new BadRequestException('order must be provided');
-		}
+		$this->stackServiceValidator->check(compact('id', 'order'));
 
 		$this->permissionService->checkPermission($this->stackMapper, $id, Acl::PERMISSION_MANAGE);
 		$stackToSort = $this->stackMapper->find($id);