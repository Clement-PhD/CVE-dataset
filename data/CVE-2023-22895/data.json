{
    "url": "https://api.github.com/repos/alexcrichton/bzip2-rs/pulls/86",
    "id": 1176573174,
    "node_id": "PR_kwDOAXOkmM5GIRT2",
    "html_url": "https://github.com/alexcrichton/bzip2-rs/pull/86",
    "diff_url": "https://github.com/alexcrichton/bzip2-rs/pull/86.diff",
    "patch_url": "https://github.com/alexcrichton/bzip2-rs/pull/86.patch",
    "issue_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/issues/86",
    "number": 86,
    "state": "closed",
    "locked": false,
    "title": "Patched an infinite loop bug in src/mem.rs, impl Decompress::decompress()",
    "user": {
        "login": "bjrjk",
        "id": 6657270,
        "node_id": "MDQ6VXNlcjY2NTcyNzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6657270?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bjrjk",
        "html_url": "https://github.com/bjrjk",
        "followers_url": "https://api.github.com/users/bjrjk/followers",
        "following_url": "https://api.github.com/users/bjrjk/following{/other_user}",
        "gists_url": "https://api.github.com/users/bjrjk/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bjrjk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bjrjk/subscriptions",
        "organizations_url": "https://api.github.com/users/bjrjk/orgs",
        "repos_url": "https://api.github.com/users/bjrjk/repos",
        "events_url": "https://api.github.com/users/bjrjk/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bjrjk/received_events",
        "type": "User",
        "site_admin": false
    },
    "body": "Hello!\r\n\r\n# Version\r\n```\r\nstable-x86_64-unknown-linux-gnu (default)\r\nrustc 1.66.0 (69f9c33d7 2022-12-12)\r\n```\r\n\r\n# Problem\r\nI came across an infinite loop bug when I'm trying to unzipping an ASCII file whose size is larger than 4GB. \r\n\r\nThe following code is an example of my usage:\r\n\r\n```rust\r\n    pub fn from_zip_file(file_path: String) -> Trace {\r\n        let zip_file =\r\n            fs::File::open(&file_path).expect(&format!(\"Could not open file {}\", &file_path));\r\n        let mut zip_archive = zip::ZipArchive::new(zip_file)\r\n            .expect(&format!(\"Could not open archive {}\", &file_path));\r\n\r\n        println!(\"Trace::from_zip_file: unzipping {}\", &file_path);\r\n        let mut trace_file = zip_archive.by_index(0).unwrap();\r\n        let trace_file_path = trace_file.sanitized_name().to_str().unwrap().to_string();\r\n        println!(\"Trace::from_zip_file: unzipped {}\", &file_path);\r\n\r\n        let mut trace_content = String::new();\r\n        trace_file\r\n            .read_to_string(&mut trace_content)\r\n            .expect(&format!(\"Could not read unzipped file {}\", trace_file_path));\r\n        println!(\"Trace::from_zip_file: read_to_string {}\", &file_path);\r\n    }\r\n```\r\n\r\nMy program stuck at `trace_file.read_to_string()`. \r\nIn order to investigate the problem, I analyzed the code carefully and find root cause in the bzip2 rust library.\r\n\r\n# Root Cause\r\nThe function `read_to_string()` indirectly invokes `std::io::default_read_to_end()`. The following is source of `std::io::default_read_to_end()`:\r\n\r\n```rust\r\n// This uses an adaptive system to extend the vector when it fills. We want to\r\n// avoid paying to allocate and zero a huge chunk of memory if the reader only\r\n// has 4 bytes while still making large reads if the reader does have a ton\r\n// of data to return. Simply tacking on an extra DEFAULT_BUF_SIZE space every\r\n// time is 4,500 times (!) slower than a default reservation size of 32 if the\r\n// reader has a very small amount of data to return.\r\npub(crate) fn default_read_to_end<R: Read + ?Sized>(r: &mut R, buf: &mut Vec<u8>) -> Result<usize> {\r\n    let start_len = buf.len();\r\n    let start_cap = buf.capacity();\r\n\r\n    let mut initialized = 0; // Extra initialized bytes from previous loop iteration\r\n    loop {\r\n        if buf.len() == buf.capacity() {\r\n            buf.reserve(32); // buf is full, need more space\r\n        }\r\n\r\n        let mut read_buf: BorrowedBuf<'_> = buf.spare_capacity_mut().into();\r\n\r\n        // SAFETY: These bytes were initialized but not filled in the previous loop\r\n        unsafe {\r\n            read_buf.set_init(initialized);\r\n        }\r\n\r\n        let mut cursor = read_buf.unfilled();\r\n        match r.read_buf(cursor.reborrow()) {\r\n            Ok(()) => {}\r\n            Err(e) if e.kind() == ErrorKind::Interrupted => continue,\r\n            Err(e) => return Err(e),\r\n        }\r\n\r\n        if cursor.written() == 0 {\r\n            return Ok(buf.len() - start_len);\r\n        }\r\n\r\n        // store how much was initialized but not filled\r\n        initialized = cursor.init_ref().len();\r\n\r\n        // SAFETY: BorrowedBuf's invariants mean this much memory is initialized.\r\n        unsafe {\r\n            let new_len = read_buf.filled().len() + buf.len();\r\n            buf.set_len(new_len);\r\n        }\r\n\r\n        if buf.len() == buf.capacity() && buf.capacity() == start_cap {\r\n            // The buffer might be an exact fit. Let's read into a probe buffer\r\n            // and see if it returns `Ok(0)`. If so, we've avoided an\r\n            // unnecessary doubling of the capacity. But if not, append the\r\n            // probe buffer to the primary buffer and let its capacity grow.\r\n            let mut probe = [0u8; 32];\r\n\r\n            loop {\r\n                match r.read(&mut probe) {\r\n                    Ok(0) => return Ok(buf.len() - start_len),\r\n                    Ok(n) => {\r\n                        buf.extend_from_slice(&probe[..n]);\r\n                        break;\r\n                    }\r\n                    Err(ref e) if e.kind() == ErrorKind::Interrupted => continue,\r\n                    Err(e) => return Err(e),\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe stdlib function `std::io::default_read_to_end()` double the buffer's capacity every time when it's full. As the buffer's initial capacity is 32, the capacity of the `Vec` buf will always be a power of two. \r\n\r\nAs my ASCII file to be unzipped is a little larger than 4GB (0x1_0000_0000h, 4294967296). The capacity of buffer will be extended to 8GB (0x2_0000_0000h, 8589934592).\r\n\r\nIn `default_read_to_end()`, the `read_buf` as `BorrowedBuf` is borrowed from the original buffer, indicating the start of spare space in `buf`.\r\n\r\nThere exists a time when `read_buf.len()` is exactly 0x1_0000_0000 and `buf.len()` is 0x2_0000_0000, which means first half part of `buf` is all unzipped data and last half part is available spare space for filling unzipped data.\r\n\r\nThe function call `r.read_buf(cursor.reborrow())` indirectly calls `Decompress::decompress()`, whose source is listed below:\r\n\r\n```rust\r\n    /// Decompress a block of input into a block of output.\r\n    pub fn decompress(&mut self, input: &[u8], output: &mut [u8]) -> Result<Status, Error> {\r\n        self.inner.raw.next_in = input.as_ptr() as *mut _;\r\n        self.inner.raw.avail_in = input.len() as c_uint;\r\n        self.inner.raw.next_out = output.as_mut_ptr() as *mut _;\r\n        self.inner.raw.avail_out = output.len() as c_uint;\r\n        unsafe {\r\n            match ffi::BZ2_bzDecompress(&mut *self.inner.raw) {\r\n                ffi::BZ_OK => Ok(Status::Ok),\r\n                ffi::BZ_MEM_ERROR => Ok(Status::MemNeeded),\r\n                ffi::BZ_STREAM_END => Ok(Status::StreamEnd),\r\n                ffi::BZ_PARAM_ERROR => Err(Error::Param),\r\n                ffi::BZ_DATA_ERROR => Err(Error::Data),\r\n                ffi::BZ_DATA_ERROR_MAGIC => Err(Error::DataMagic),\r\n                ffi::BZ_SEQUENCE_ERROR => Err(Error::Sequence),\r\n                c => panic!(\"wut: {}\", c),\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\nAt this point, the length of `output` is `0x1_0000_0000`. \r\n\r\nWhen casting to `c_uint` (uint32), `output.len()`'s high 32 bits are lost, so `avail_out` is zero when invoking C unzipping function.\r\n\r\nIn that case, no data will be extracted and function directly returns. However, parent functions keeps asking for unzipping the left datas. Thus endless loop occurred.\r\n\r\n# Patch\r\n\r\nThe following is my patch. `self.inner.raw.avail_out` 's assign logic is modified. When `avail_out` is exceeding the available range of `c_uint`, it is set to the max value of `c_uint`.\r\n\r\nOther function may contain the same problem.\r\n\r\n\r\n```rust\r\n    /// Decompress a block of input into a block of output.\r\n    pub fn decompress(&mut self, input: &[u8], output: &mut [u8]) -> Result<Status, Error> {\r\n        self.inner.raw.next_in = input.as_ptr() as *mut _;\r\n        self.inner.raw.avail_in = input.len() as c_uint;\r\n        self.inner.raw.next_out = output.as_mut_ptr() as *mut _;\r\n        self.inner.raw.avail_out = {\r\n            let avail_out = output.len();\r\n            if (avail_out > 0) && (avail_out & c_uint::MAX as usize == 0) {\r\n                c_uint::MAX\r\n            } else {\r\n                avail_out as c_uint\r\n            }\r\n        };\r\n        unsafe {\r\n            match ffi::BZ2_bzDecompress(&mut *self.inner.raw) {\r\n                ffi::BZ_OK => Ok(Status::Ok),\r\n                ffi::BZ_MEM_ERROR => Ok(Status::MemNeeded),\r\n                ffi::BZ_STREAM_END => Ok(Status::StreamEnd),\r\n                ffi::BZ_PARAM_ERROR => Err(Error::Param),\r\n                ffi::BZ_DATA_ERROR => Err(Error::Data),\r\n                ffi::BZ_DATA_ERROR_MAGIC => Err(Error::DataMagic),\r\n                ffi::BZ_SEQUENCE_ERROR => Err(Error::Sequence),\r\n                c => panic!(\"wut: {}\", c),\r\n            }\r\n        }\r\n    }\r\n```",
    "created_at": "2022-12-23T16:15:01Z",
    "updated_at": "2023-01-10T01:57:08Z",
    "closed_at": "2023-01-05T17:14:57Z",
    "merged_at": "2023-01-05T17:14:57Z",
    "merge_commit_sha": "90c9c182cd5a5ebc75810aebd89b347a7bdf590b",
    "assignee": null,
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "labels": [],
    "milestone": null,
    "draft": false,
    "commits_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/pulls/86/commits",
    "review_comments_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/pulls/86/comments",
    "review_comment_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/pulls/comments{/number}",
    "comments_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/issues/86/comments",
    "statuses_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/statuses/d73a725ca18482fc71e66805a1a21b5f218ff77a",
    "head": {
        "label": "bjrjk:master",
        "ref": "master",
        "sha": "d73a725ca18482fc71e66805a1a21b5f218ff77a",
        "user": {
            "login": "bjrjk",
            "id": 6657270,
            "node_id": "MDQ6VXNlcjY2NTcyNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6657270?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bjrjk",
            "html_url": "https://github.com/bjrjk",
            "followers_url": "https://api.github.com/users/bjrjk/followers",
            "following_url": "https://api.github.com/users/bjrjk/following{/other_user}",
            "gists_url": "https://api.github.com/users/bjrjk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bjrjk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bjrjk/subscriptions",
            "organizations_url": "https://api.github.com/users/bjrjk/orgs",
            "repos_url": "https://api.github.com/users/bjrjk/repos",
            "events_url": "https://api.github.com/users/bjrjk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bjrjk/received_events",
            "type": "User",
            "site_admin": false
        },
        "repo": {
            "id": 581556097,
            "node_id": "R_kgDOIqnXgQ",
            "name": "bzip2-rs",
            "full_name": "bjrjk/bzip2-rs",
            "private": false,
            "owner": {
                "login": "bjrjk",
                "id": 6657270,
                "node_id": "MDQ6VXNlcjY2NTcyNzA=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6657270?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bjrjk",
                "html_url": "https://github.com/bjrjk",
                "followers_url": "https://api.github.com/users/bjrjk/followers",
                "following_url": "https://api.github.com/users/bjrjk/following{/other_user}",
                "gists_url": "https://api.github.com/users/bjrjk/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bjrjk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bjrjk/subscriptions",
                "organizations_url": "https://api.github.com/users/bjrjk/orgs",
                "repos_url": "https://api.github.com/users/bjrjk/repos",
                "events_url": "https://api.github.com/users/bjrjk/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bjrjk/received_events",
                "type": "User",
                "site_admin": false
            },
            "html_url": "https://github.com/bjrjk/bzip2-rs",
            "description": "libbz2 (bzip2 compression) bindings for Rust",
            "fork": true,
            "url": "https://api.github.com/repos/bjrjk/bzip2-rs",
            "forks_url": "https://api.github.com/repos/bjrjk/bzip2-rs/forks",
            "keys_url": "https://api.github.com/repos/bjrjk/bzip2-rs/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/bjrjk/bzip2-rs/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/bjrjk/bzip2-rs/teams",
            "hooks_url": "https://api.github.com/repos/bjrjk/bzip2-rs/hooks",
            "issue_events_url": "https://api.github.com/repos/bjrjk/bzip2-rs/issues/events{/number}",
            "events_url": "https://api.github.com/repos/bjrjk/bzip2-rs/events",
            "assignees_url": "https://api.github.com/repos/bjrjk/bzip2-rs/assignees{/user}",
            "branches_url": "https://api.github.com/repos/bjrjk/bzip2-rs/branches{/branch}",
            "tags_url": "https://api.github.com/repos/bjrjk/bzip2-rs/tags",
            "blobs_url": "https://api.github.com/repos/bjrjk/bzip2-rs/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/bjrjk/bzip2-rs/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/bjrjk/bzip2-rs/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/bjrjk/bzip2-rs/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/bjrjk/bzip2-rs/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/bjrjk/bzip2-rs/languages",
            "stargazers_url": "https://api.github.com/repos/bjrjk/bzip2-rs/stargazers",
            "contributors_url": "https://api.github.com/repos/bjrjk/bzip2-rs/contributors",
            "subscribers_url": "https://api.github.com/repos/bjrjk/bzip2-rs/subscribers",
            "subscription_url": "https://api.github.com/repos/bjrjk/bzip2-rs/subscription",
            "commits_url": "https://api.github.com/repos/bjrjk/bzip2-rs/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/bjrjk/bzip2-rs/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/bjrjk/bzip2-rs/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/bjrjk/bzip2-rs/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/bjrjk/bzip2-rs/contents/{+path}",
            "compare_url": "https://api.github.com/repos/bjrjk/bzip2-rs/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/bjrjk/bzip2-rs/merges",
            "archive_url": "https://api.github.com/repos/bjrjk/bzip2-rs/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/bjrjk/bzip2-rs/downloads",
            "issues_url": "https://api.github.com/repos/bjrjk/bzip2-rs/issues{/number}",
            "pulls_url": "https://api.github.com/repos/bjrjk/bzip2-rs/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/bjrjk/bzip2-rs/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/bjrjk/bzip2-rs/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/bjrjk/bzip2-rs/labels{/name}",
            "releases_url": "https://api.github.com/repos/bjrjk/bzip2-rs/releases{/id}",
            "deployments_url": "https://api.github.com/repos/bjrjk/bzip2-rs/deployments",
            "created_at": "2022-12-23T14:37:46Z",
            "updated_at": "2022-12-23T15:17:34Z",
            "pushed_at": "2023-01-05T00:28:36Z",
            "git_url": "git://github.com/bjrjk/bzip2-rs.git",
            "ssh_url": "git@github.com:bjrjk/bzip2-rs.git",
            "clone_url": "https://github.com/bjrjk/bzip2-rs.git",
            "svn_url": "https://github.com/bjrjk/bzip2-rs",
            "homepage": null,
            "size": 1100,
            "stargazers_count": 0,
            "watchers_count": 0,
            "language": "C",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": true,
            "has_pages": false,
            "has_discussions": false,
            "forks_count": 0,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 0,
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "node_id": "MDc6TGljZW5zZTI="
            },
            "allow_forking": true,
            "is_template": false,
            "web_commit_signoff_required": false,
            "topics": [],
            "visibility": "public",
            "forks": 0,
            "open_issues": 0,
            "watchers": 0,
            "default_branch": "master"
        }
    },
    "base": {
        "label": "alexcrichton:master",
        "ref": "master",
        "sha": "016e18155ef7c05983ea244cae1344c5b68defd8",
        "user": {
            "login": "alexcrichton",
            "id": 64996,
            "node_id": "MDQ6VXNlcjY0OTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexcrichton",
            "html_url": "https://github.com/alexcrichton",
            "followers_url": "https://api.github.com/users/alexcrichton/followers",
            "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions",
            "organizations_url": "https://api.github.com/users/alexcrichton/orgs",
            "repos_url": "https://api.github.com/users/alexcrichton/repos",
            "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexcrichton/received_events",
            "type": "User",
            "site_admin": false
        },
        "repo": {
            "id": 24355992,
            "node_id": "MDEwOlJlcG9zaXRvcnkyNDM1NTk5Mg==",
            "name": "bzip2-rs",
            "full_name": "alexcrichton/bzip2-rs",
            "private": false,
            "owner": {
                "login": "alexcrichton",
                "id": 64996,
                "node_id": "MDQ6VXNlcjY0OTk2",
                "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/alexcrichton",
                "html_url": "https://github.com/alexcrichton",
                "followers_url": "https://api.github.com/users/alexcrichton/followers",
                "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}",
                "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions",
                "organizations_url": "https://api.github.com/users/alexcrichton/orgs",
                "repos_url": "https://api.github.com/users/alexcrichton/repos",
                "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}",
                "received_events_url": "https://api.github.com/users/alexcrichton/received_events",
                "type": "User",
                "site_admin": false
            },
            "html_url": "https://github.com/alexcrichton/bzip2-rs",
            "description": "libbz2 (bzip2 compression) bindings for Rust",
            "fork": false,
            "url": "https://api.github.com/repos/alexcrichton/bzip2-rs",
            "forks_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/forks",
            "keys_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/teams",
            "hooks_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/hooks",
            "issue_events_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/issues/events{/number}",
            "events_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/events",
            "assignees_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/assignees{/user}",
            "branches_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/branches{/branch}",
            "tags_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/tags",
            "blobs_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/languages",
            "stargazers_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/stargazers",
            "contributors_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/contributors",
            "subscribers_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/subscribers",
            "subscription_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/subscription",
            "commits_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/contents/{+path}",
            "compare_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/merges",
            "archive_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/downloads",
            "issues_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/issues{/number}",
            "pulls_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/labels{/name}",
            "releases_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/releases{/id}",
            "deployments_url": "https://api.github.com/repos/alexcrichton/bzip2-rs/deployments",
            "created_at": "2014-09-23T03:54:37Z",
            "updated_at": "2023-12-15T02:35:11Z",
            "pushed_at": "2023-12-13T23:23:31Z",
            "git_url": "git://github.com/alexcrichton/bzip2-rs.git",
            "ssh_url": "git@github.com:alexcrichton/bzip2-rs.git",
            "clone_url": "https://github.com/alexcrichton/bzip2-rs.git",
            "svn_url": "https://github.com/alexcrichton/bzip2-rs",
            "homepage": null,
            "size": 1895,
            "stargazers_count": 84,
            "watchers_count": 84,
            "language": "C",
            "has_issues": true,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": true,
            "has_pages": true,
            "has_discussions": false,
            "forks_count": 53,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 29,
            "license": {
                "key": "apache-2.0",
                "name": "Apache License 2.0",
                "spdx_id": "Apache-2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "node_id": "MDc6TGljZW5zZTI="
            },
            "allow_forking": true,
            "is_template": false,
            "web_commit_signoff_required": false,
            "topics": [],
            "visibility": "public",
            "forks": 53,
            "open_issues": 29,
            "watchers": 84,
            "default_branch": "master"
        }
    },
    "_links": {
        "self": {
            "href": "https://api.github.com/repos/alexcrichton/bzip2-rs/pulls/86"
        },
        "html": {
            "href": "https://github.com/alexcrichton/bzip2-rs/pull/86"
        },
        "issue": {
            "href": "https://api.github.com/repos/alexcrichton/bzip2-rs/issues/86"
        },
        "comments": {
            "href": "https://api.github.com/repos/alexcrichton/bzip2-rs/issues/86/comments"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/alexcrichton/bzip2-rs/pulls/86/comments"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/alexcrichton/bzip2-rs/pulls/comments{/number}"
        },
        "commits": {
            "href": "https://api.github.com/repos/alexcrichton/bzip2-rs/pulls/86/commits"
        },
        "statuses": {
            "href": "https://api.github.com/repos/alexcrichton/bzip2-rs/statuses/d73a725ca18482fc71e66805a1a21b5f218ff77a"
        }
    },
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "active_lock_reason": null,
    "merged": true,
    "mergeable": null,
    "rebaseable": null,
    "mergeable_state": "unknown",
    "merged_by": {
        "login": "alexcrichton",
        "id": 64996,
        "node_id": "MDQ6VXNlcjY0OTk2",
        "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexcrichton",
        "html_url": "https://github.com/alexcrichton",
        "followers_url": "https://api.github.com/users/alexcrichton/followers",
        "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}",
        "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions",
        "organizations_url": "https://api.github.com/users/alexcrichton/orgs",
        "repos_url": "https://api.github.com/users/alexcrichton/repos",
        "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}",
        "received_events_url": "https://api.github.com/users/alexcrichton/received_events",
        "type": "User",
        "site_admin": false
    },
    "comments": 2,
    "review_comments": 4,
    "maintainer_can_modify": false,
    "commits": 2,
    "additions": 4,
    "deletions": 4,
    "changed_files": 1
}