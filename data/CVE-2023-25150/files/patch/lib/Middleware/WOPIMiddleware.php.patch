@@ -29,23 +29,32 @@
 
 use OCA\Richdocuments\AppInfo\Application;
 use OCA\Richdocuments\Controller\WopiController;
+use OCA\Richdocuments\Db\WopiMapper;
+use OCA\Richdocuments\Helper;
 use OCP\AppFramework\Http;
 use OCP\AppFramework\Http\JSONResponse;
 use OCP\AppFramework\Http\Response;
 use OCP\AppFramework\Middleware;
 use OCP\Files\NotPermittedException;
 use OCP\IConfig;
 use OCP\IRequest;
+use Psr\Log\LoggerInterface;
 
 class WOPIMiddleware extends Middleware {
 	/** @var IConfig */
 	private $config;
 	/** @var IRequest */
 	private $request;
+	/** @var WopiMapper */
+	private $wopiMapper;
+	/** @var LoggerInterface */
+	private $logger;
 
-	public function __construct(IConfig $config, IRequest $request) {
+	public function __construct(IConfig $config, IRequest $request, WopiMapper $wopiMapper, LoggerInterface $logger) {
 		$this->config = $config;
 		$this->request = $request;
+		$this->wopiMapper = $wopiMapper;
+		$this->logger = $logger;
 	}
 
 	public function beforeController($controller, $methodName) {
@@ -54,6 +63,23 @@ public function beforeController($controller, $methodName) {
 		if ($controller instanceof WopiController && !$this->isWOPIAllowed()) {
 			throw new NotPermittedException();
 		}
+
+		if (!$controller instanceof WopiController) {
+			return;
+		}
+
+		try {
+			$fileId = $this->request->getParam('fileId');
+			$accessToken = $this->request->getParam('access_token');
+			[$fileId, ,] = Helper::parseFileId($fileId);
+			$wopi = $this->wopiMapper->getWopiForToken($accessToken);
+			if ((int)$fileId !== $wopi->getFileid()) {
+				throw new NotPermittedException();
+			}
+		} catch (\Exception $e) {
+			$this->logger->error('Failed to validate WOPI access', [ 'exception' => $e ]);
+			throw new NotPermittedException();
+		}
 	}
 
 	public function afterException($controller, $methodName, \Exception $exception): Response {