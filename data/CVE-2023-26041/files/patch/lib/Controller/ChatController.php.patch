@@ -466,12 +466,19 @@ public function receiveMessages(int $lookIntoFuture,
 		$this->preloadShares($comments);
 
 		$i = 0;
+		$now = $this->timeFactory->getDateTime();
 		$messages = $commentIdToIndex = $parentIds = [];
 		foreach ($comments as $comment) {
 			$id = (int) $comment->getId();
 			$message = $this->messageParser->createMessage($this->room, $this->participant, $comment, $this->l);
 			$this->messageParser->parseMessage($message);
 
+			$expireDate = $message->getComment()->getExpireDate();
+			if ($expireDate instanceof \DateTime && $expireDate < $now) {
+				$commentIdToIndex[$id] = null;
+				continue;
+			}
+
 			if (!$message->getVisibility()) {
 				$commentIdToIndex[$id] = null;
 				continue;
@@ -522,6 +529,12 @@ public function receiveMessages(int $lookIntoFuture,
 						continue;
 					}
 
+					$expireDate = $message->getComment()->getExpireDate();
+					if ($expireDate instanceof \DateTime && $expireDate < $now) {
+						$commentIdToIndex[$id] = null;
+						continue;
+					}
+
 					$loadedParents[$parentId] = [
 						'id' => (int) $parentId,
 						'deleted' => true,
@@ -846,6 +859,12 @@ protected function getMessagesForRoom(array $messageIds): array {
 
 			$this->messageParser->parseMessage($message);
 
+			$now = $this->timeFactory->getDateTime();
+			$expireDate = $message->getComment()->getExpireDate();
+			if ($expireDate instanceof \DateTime && $expireDate < $now) {
+				continue;
+			}
+
 			if (!$message->getVisibility()) {
 				continue;
 			}