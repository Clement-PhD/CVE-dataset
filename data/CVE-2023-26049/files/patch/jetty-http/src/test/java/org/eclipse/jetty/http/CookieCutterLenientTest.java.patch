@@ -14,7 +14,6 @@
 package org.eclipse.jetty.http;
 
 import java.util.ArrayList;
-import java.util.Collections;
 import java.util.List;
 import java.util.stream.Stream;
 
@@ -64,6 +63,8 @@ public static Stream<Arguments> data()
 
             // lenient with spaces and EOF
             Arguments.of("abc=", "abc", ""),
+            Arguments.of("abc= ", "abc", ""),
+            Arguments.of("abc= x", "abc", "x"),
             Arguments.of("abc = ", "abc", ""),
             Arguments.of("abc = ;", "abc", ""),
             Arguments.of("abc = ; ", "abc", ""),
@@ -173,28 +174,27 @@ public void testLenientBehavior(String rawHeader, String expectedName, String ex
         }
     }
 
-    class TestCutter extends CookieCutter
+    static class TestCutter implements CookieParser.Handler
     {
+        CookieCutter cutter;
         List<String> names = new ArrayList<>();
         List<String> values = new ArrayList<>();
 
         protected TestCutter()
         {
-            super(CookieCompliance.RFC6265, null);
+            cutter = new CookieCutter(this, CookieCompliance.RFC6265_LEGACY, null);
         }
 
-        @Override
-        protected void addCookie(String cookieName, String cookieValue, String cookieDomain, String cookiePath, int cookieVersion, String cookieComment)
+        public void parseField(String field)
         {
-            names.add(cookieName);
-            values.add(cookieValue);
+            cutter.parseField(field);
         }
 
-        public void parseField(String field)
+        @Override
+        public void addCookie(String cookieName, String cookieValue, int cookieVersion, String cookieDomain, String cookiePath, String cookieComment)
         {
-            super.parseFields(Collections.singletonList(field));
+            names.add(cookieName);
+            values.add(cookieValue);
         }
     }
-
-    ;
 }
