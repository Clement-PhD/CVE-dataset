--- /dev/null
+++ /dev/null
@@ -251,51 +240,4 @@ public void shouldUpdateDeploymentInfoWithProvidedReasonIfReasonIsSet() {
 
 	}
 
-	@Test
-	public void shouldSetSortColumnIfColumnKnown() {
-		// given
-		Query query = mock(Query.class);
-		when(commonFilterService.addFilterAndCreateQuery(any(), any(), any(), anyBoolean(), anyBoolean())).thenReturn(query);
-		when(commonFilterService.setParameterToQuery(any(), any(), any(), any())).thenReturn(query);
-
-		// when
-		deploymentBoundary.getFilteredDeployments(0, null, emptyList(), "d.trackingId", DESC, emptyList() );
-
-		// then
-		ArgumentCaptor<Sort> sortCaptor = ArgumentCaptor.forClass(Sort.class);
-		verify(commonFilterService).addFilterAndCreateQuery(any(), any(), sortCaptor.capture(), anyBoolean(), anyBoolean());
-		assertThat(sortCaptor.getValue().toString(), containsString("d.trackingId"));
-	}
-
-	@Test
-	public void shouldIgnoreSortColumnIfNull() {
-		// given
-		Query query = mock(Query.class);
-		when(commonFilterService.addFilterAndCreateQuery(any(), any(), any(), anyBoolean(), anyBoolean())).thenReturn(query);
-		when(commonFilterService.setParameterToQuery(any(), any(), any(), any())).thenReturn(query);
-
-		// when
-		deploymentBoundary.getFilteredDeployments(0, null, emptyList(), null, DESC, emptyList() );
-
-		// then
-		ArgumentCaptor<Sort> sortCaptor = ArgumentCaptor.forClass(Sort.class);
-		verify(commonFilterService).addFilterAndCreateQuery(any(), any(), sortCaptor.capture(), anyBoolean(), anyBoolean());
-		Iterator<Sort.Order> iterator = sortCaptor.getValue().iterator();
-		assertThat(iterator.hasNext(), is(true));
-		assertThat(iterator.next(), is(DeploymentOrder.of("d.id", DESC, false)));
-		assertThat(iterator.hasNext(), is(false));
-	}
-
-	@Test
-	public void shouldThrowIfSortColumnUnknown() {
-		try {
-			// when
-			deploymentBoundary.getFilteredDeployments(0, null, emptyList(), "unknown.column", DESC, emptyList());
-			fail("IllegalArgumentException should have been thrown");
-		} catch (IllegalArgumentException ex) {
-			// then
-			assertThat(ex.getMessage(), containsString("colToSort not found"));
-		}
-	}
-
 
