@@ -9,15 +9,29 @@
 
 import org.jd.gui.util.exception.ExceptionUtil;
 
-import java.io.IOException;
-import java.io.ObjectInputStream;
-import java.io.ObjectOutputStream;
+import java.io.*;
 import java.net.InetAddress;
 import java.net.ServerSocket;
 import java.net.Socket;
 import java.util.function.Consumer;
 
 public class InterProcessCommunicationUtil {
+
+    static class FilterObjectInputStream extends ObjectInputStream {
+
+        public FilterObjectInputStream(InputStream in) throws IOException {
+            super(in);
+        }
+
+        @Override
+        protected Class<?> resolveClass(final ObjectStreamClass classDesc) throws IOException, ClassNotFoundException {
+            if (classDesc.getName().equals("[Ljava.lang.String;")) {
+                return super.resolveClass(classDesc);
+            }
+            throw new RuntimeException(String.format("not support class: %s", classDesc.getName()));
+        }
+    }
+
     protected static final int PORT = 2015_6;
 
     public static void listen(final Consumer<String[]> consumer) throws Exception {
@@ -28,11 +42,18 @@ public static void listen(final Consumer<String[]> consumer) throws Exception {
             public void run() {
                 while (true) {
                     try (Socket socket = listener.accept();
-                         ObjectInputStream ois = new ObjectInputStream(socket.getInputStream())) {
+                         ObjectInputStream ois = new FilterObjectInputStream(socket.getInputStream())) {
                         // Receive args from another JD-GUI instance
-                        String[] args = (String[])ois.readObject();
+                        String[] args = (String[]) ois.readObject();
+
+                        for (String arg : args) {
+                            if (arg.toLowerCase().contains("<html>")) {
+                                throw new RuntimeException(String.format("evil arg: %s", arg));
+                            }
+                        }
+
                         consumer.accept(args);
-                    } catch (IOException|ClassNotFoundException e) {
+                    } catch (IOException | ClassNotFoundException e) {
                         assert ExceptionUtil.printStackTrace(e);
                     }
                 }
@@ -51,4 +72,4 @@ public static void send(String[] args) {
             assert ExceptionUtil.printStackTrace(e);
         }
     }
-}
+}
\ No newline at end of file