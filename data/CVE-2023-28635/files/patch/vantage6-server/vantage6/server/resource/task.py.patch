@@ -16,10 +16,11 @@
     Operation as P
 )
 from vantage6.server.resource import only_for, ServicesResources, with_user
-from vantage6.server.resource.common._schema import (
+from vantage6.server.resource.common.output_schema import (
     TaskSchema,
     TaskIncludedSchema,
 )
+from vantage6.server.resource.common.input_schema import TaskInputSchema
 from vantage6.server.resource.common.pagination import Pagination
 from vantage6.server.resource.event import kill_task
 
@@ -100,6 +101,7 @@ def permissions(permissions: PermissionManager) -> None:
 # ------------------------------------------------------------------------------
 task_schema = TaskSchema()
 task_result_schema = TaskIncludedSchema()
+task_input_schema = TaskInputSchema()
 
 
 class TaskBase(ServicesResources):
@@ -357,6 +359,12 @@ def post(self):
         tags: ["Task"]
         """
         data = request.get_json()
+        # validate request body
+        errors = task_input_schema.validate(data)
+        if errors:
+            return {'msg': 'Request body is incorrect', 'errors': errors}, \
+                HTTPStatus.BAD_REQUEST
+
         collaboration_id = data.get('collaboration_id')
         collaboration = db.Collaboration.get(collaboration_id)
 
@@ -430,7 +438,6 @@ def post(self):
                 return {"msg": "Container-token is not valid"}, \
                     HTTPStatus.UNAUTHORIZED
 
-
         # permissions ok, create task record and TaskDatabase records
         task = db.Task(collaboration=collaboration, name=data.get('name', ''),
                        description=data.get('description', ''), image=image,
@@ -454,7 +461,7 @@ def post(self):
         task.save()
 
         # save the databases that the task uses
-        databases = data.get('databases', ['default'])
+        databases = data.get('databases')
         if not isinstance(databases, list):
             databases = [databases]
         for database in databases: