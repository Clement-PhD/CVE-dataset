@@ -1,12 +1,14 @@
 (ns metabase-enterprise.enhancements.models.native-query-snippet.permissions
   "EE implementation of NativeQuerySnippet permissions."
   (:require
+   [metabase-enterprise.sandbox.api.util :as mt.api.u]
    [metabase.models.interface :as mi]
+   [metabase.models.native-query-snippet.permissions :as snippet.perms]
    [metabase.models.permissions :as perms]
    [metabase.public-settings.premium-features :refer [defenterprise]]
    [metabase.util.schema :as su]
    [schema.core :as s]
-   [toucan.db :as db]))
+   [toucan2.core :as t2]))
 
 (s/defn ^:private has-parent-collection-perms?
   [snippet       :- {:collection_id (s/maybe su/IntGreaterThanZero), s/Keyword s/Any}
@@ -17,28 +19,40 @@
   "Can the current User read this `snippet`?"
   :feature :any
   ([snippet]
-   (has-parent-collection-perms? snippet :read))
+   (and
+    (not (mt.api.u/segmented-user?))
+    (snippet.perms/has-any-native-permissions?)
+    (has-parent-collection-perms? snippet :read)))
   ([model id]
-   (has-parent-collection-perms? (db/select-one [model :collection_id] :id id) :read)))
+   (can-read? (t2/select-one [model :collection_id] :id id))))
 
 (defenterprise can-write?
   "Can the current User edit this `snippet`?"
   :feature :any
   ([snippet]
-   (has-parent-collection-perms? snippet :write))
+   (and
+    (not (mt.api.u/segmented-user?))
+    (snippet.perms/has-any-native-permissions?)
+    (has-parent-collection-perms? snippet :write)))
   ([model id]
-   (has-parent-collection-perms? (db/select-one [model :collection_id] :id id) :write)))
+   (can-write? (t2/select-one [model :collection_id] :id id))))
 
 (defenterprise can-create?
   "Can the current User save a new Snippet with the values in `m`?"
   :feature :any
-  [model m]
-  (has-parent-collection-perms? m :write))
+  [_model m]
+  (and
+   (not (mt.api.u/segmented-user?))
+   (snippet.perms/has-any-native-permissions?)
+   (has-parent-collection-perms? m :write)))
 
 (defenterprise can-update?
   "Can the current User apply a map of `changes` to a `snippet`?"
   :feature :any
   [snippet changes]
-  (and (has-parent-collection-perms? snippet :write)
-       (or (not (contains? changes :collection_id))
-           (has-parent-collection-perms? changes :write))))
+  (and
+   (not (mt.api.u/segmented-user?))
+   (snippet.perms/has-any-native-permissions?)
+   (has-parent-collection-perms? snippet :write)
+   (or (not (contains? changes :collection_id))
+       (has-parent-collection-perms? changes :write))))
