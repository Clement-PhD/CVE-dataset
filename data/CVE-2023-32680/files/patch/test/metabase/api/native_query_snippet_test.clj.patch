@@ -5,7 +5,10 @@
    [clojure.test :refer :all]
    [metabase.models :refer [Collection]]
    [metabase.models.native-query-snippet :refer [NativeQuerySnippet]]
+   [metabase.models.permissions :as perms]
+   [metabase.models.permissions-group :as perms-group]
    [metabase.test :as mt]
+   [metabase.util :as u]
    [metabase.util.schema :as su]
    [schema.core :as s]
    [toucan.db :as db]
@@ -23,7 +26,14 @@
   (str/starts-with? (or (get-in response [:errors :name]) "")
                     "snippet names cannot include"))
 
+(defn- grant-native-perms
+  "Grants native query perms for the All Users group to the test database if not already granted."
+  []
+  (u/ignore-exceptions
+   (perms/grant-native-readwrite-permissions! (perms-group/all-users) (mt/id))))
+
 (deftest list-snippets-api-test
+  (grant-native-perms)
   (testing "GET /api/native-query-snippet"
     (mt/with-temp* [NativeQuerySnippet [snippet-1 {:content "1"
                                                    :name    "snippet_1"}]
@@ -39,6 +49,7 @@
               (is (contains? snippets-from-api (select-keys snippet-2 test-snippet-fields))))))))))
 
 (deftest read-snippet-api-test
+  (grant-native-perms)
   (testing "GET /api/native-query-snippet/:id"
     (mt/with-temp NativeQuerySnippet [snippet {:content "-- SQL comment here"
                                                :name    "comment"}]
@@ -50,6 +61,7 @@
                      (select-keys snippet-from-api test-snippet-fields))))))))))
 
 (deftest create-snippet-api-test
+  (grant-native-perms)
   (testing "POST /api/native-query-snippet"
     (testing "new snippet field validation"
       (is (= {:errors {:content "value must be a string."}}
@@ -107,6 +119,7 @@
         (db/delete! NativeQuerySnippet :name "test-snippet")))))
 
 (deftest create-snippet-in-collection-test
+  (grant-native-perms)
   (testing "POST /api/native-query-snippet"
     (testing "\nShould be able to create a Snippet in a Collection"
       (letfn [(create! [expected-status-code collection-id]
@@ -139,6 +152,7 @@
                  (:response (create! 404 Integer/MAX_VALUE)))))))))
 
 (deftest update-snippet-api-test
+  (grant-native-perms)
   (testing "PUT /api/native-query-snippet/:id"
     (mt/with-temp NativeQuerySnippet [snippet {:content "-- SQL comment here"
                                                :name    "comment"}]
@@ -147,9 +161,8 @@
                                 "non-admin user should be able to update" :rasta}]
           (testing message
             (let [updated-desc    "Updated description."
-                  updated-snippet (mt/user-http-request user
-                                   :put 200 (snippet-url (:id snippet))
-                                   {:description updated-desc})]
+                  updated-snippet (mt/user-http-request user :put 200 (snippet-url (:id snippet))
+                                                        {:description updated-desc})]
               (is (= updated-desc (:description updated-snippet)))))))
 
       (testing "Attempting to change Snippet's name to one that's already in use should throw an error"
@@ -172,6 +185,7 @@
                  (db/select-one-field :creator_id NativeQuerySnippet :id (:id snippet)))))))))
 
 (deftest update-snippet-collection-test
+  (grant-native-perms)
   (testing "PUT /api/native-query-snippet/:id"
     (testing "\nChange collection_id"
       (tt/with-temp* [Collection [collection-1 {:name "a Collection", :namespace "snippets"}]