@@ -42,6 +42,7 @@
 use OCP\AppFramework\Services\IInitialState;
 use OCP\AppFramework\Utility\ITimeFactory;
 use OCP\DB\Exception;
+use OCP\IConfig;
 use OCP\IRequest;
 use OCP\Mail\IMailer;
 use Psr\Log\LoggerInterface;
@@ -67,6 +68,7 @@ class BookingController extends Controller {
 
 	/** @var IMailer */
 	private $mailer;
+	private IConfig $systemConfig;
 
 	public function __construct(string $appName,
 								IRequest $request,
@@ -76,7 +78,8 @@ public function __construct(string $appName,
 								AppointmentConfigService $appointmentConfigService,
 								URLGenerator $urlGenerator,
 								LoggerInterface $logger,
-								IMailer $mailer) {
+								IMailer $mailer,
+								IConfig $systemConfig) {
 		parent::__construct($appName, $request);
 
 		$this->bookingService = $bookingService;
@@ -86,6 +89,7 @@ public function __construct(string $appName,
 		$this->urlGenerator = $urlGenerator;
 		$this->logger = $logger;
 		$this->mailer = $mailer;
+		$this->systemConfig = $systemConfig;
 	}
 
 	/**
@@ -190,7 +194,17 @@ public function bookSlot(int $appointmentConfigId,
 			return JsonResponse::fail(null, Http::STATUS_UNPROCESSABLE_ENTITY);
 		} catch (ServiceException $e) {
 			$this->logger->error($e->getMessage(), ['exception' => $e]);
-			return JsonResponse::errorFromThrowable($e, $e->getHttpCode() ?? Http::STATUS_INTERNAL_SERVER_ERROR);
+
+			if ($this->systemConfig->getSystemValue('debug', false)) {
+				return JsonResponse::errorFromThrowable($e, $e->getHttpCode() ?? Http::STATUS_INTERNAL_SERVER_ERROR,
+					['debug' => true,]
+				);
+			}
+
+			return JsonResponse::error(
+				'Server error',
+				$e->getHttpCode() ?? Http::STATUS_INTERNAL_SERVER_ERROR
+			);
 		}
 
 		return JsonResponse::success($booking);