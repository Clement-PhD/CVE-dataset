@@ -23,6 +23,7 @@
 using Tgstation.Server.Host.Security;
 using Tgstation.Server.Host.System;
 using Tgstation.Server.Host.Transfer;
+using Tgstation.Server.Host.Utils;
 
 namespace Tgstation.Server.Host.Components
 {
@@ -139,6 +140,11 @@ sealed class InstanceFactory : IInstanceFactory
 		/// </summary>
 		readonly IRemoteDeploymentManagerFactory remoteDeploymentManagerFactory;
 
+		/// <summary>
+		/// The <see cref="IAsyncDelayer"/> for the <see cref="InstanceFactory"/>.
+		/// </summary>
+		readonly IAsyncDelayer asyncDelayer;
+
 		/// <summary>
 		/// The <see cref="GeneralConfiguration"/> for the <see cref="InstanceFactory"/>.
 		/// </summary>
@@ -182,6 +188,7 @@ sealed class InstanceFactory : IInstanceFactory
 		/// <param name="fileTransferService">The value of <see cref="fileTransferService"/>.</param>
 		/// <param name="gitRemoteFeaturesFactory">The value of <see cref="gitRemoteFeaturesFactory"/>.</param>
 		/// <param name="remoteDeploymentManagerFactory">The value of <see cref="remoteDeploymentManagerFactory"/>.</param>
+		/// <param name="asyncDelayer">The value of <see cref="asyncDelayer"/>.</param>
 		/// <param name="generalConfigurationOptions">The <see cref="IOptions{TOptions}"/> containing the value of <see cref="generalConfiguration"/>.</param>
 		/// <param name="sessionConfigurationOptions">The <see cref="IOptions{TOptions}"/> containing the value of <see cref="sessionConfiguration"/>.</param>
 		public InstanceFactory(
@@ -207,6 +214,7 @@ sealed class InstanceFactory : IInstanceFactory
 			IFileTransferTicketProvider fileTransferService,
 			IGitRemoteFeaturesFactory gitRemoteFeaturesFactory,
 			IRemoteDeploymentManagerFactory remoteDeploymentManagerFactory,
+			IAsyncDelayer asyncDelayer,
 			IOptions<GeneralConfiguration> generalConfigurationOptions,
 			IOptions<SessionConfiguration> sessionConfigurationOptions)
 		{
@@ -232,6 +240,7 @@ sealed class InstanceFactory : IInstanceFactory
 			this.fileTransferService = fileTransferService ?? throw new ArgumentNullException(nameof(fileTransferService));
 			this.gitRemoteFeaturesFactory = gitRemoteFeaturesFactory ?? throw new ArgumentNullException(nameof(gitRemoteFeaturesFactory));
 			this.remoteDeploymentManagerFactory = remoteDeploymentManagerFactory ?? throw new ArgumentNullException(nameof(remoteDeploymentManagerFactory));
+			this.asyncDelayer = asyncDelayer ?? throw new ArgumentNullException(nameof(asyncDelayer));
 			generalConfiguration = generalConfigurationOptions?.Value ?? throw new ArgumentNullException(nameof(generalConfigurationOptions));
 			sessionConfiguration = sessionConfigurationOptions?.Value ?? throw new ArgumentNullException(nameof(sessionConfigurationOptions));
 		}
@@ -310,6 +319,7 @@ public async Task<IInstance> CreateInstance(IBridgeRegistrar bridgeRegistrar, Mo
 						bridgeRegistrar,
 						serverPortProvider,
 						eventConsumer,
+						asyncDelayer,
 						loggerFactory,
 						loggerFactory.CreateLogger<SessionControllerFactory>(),
 						sessionConfiguration,
@@ -358,6 +368,7 @@ public async Task<IInstance> CreateInstance(IBridgeRegistrar bridgeRegistrar, Mo
 								dmbFactory,
 								repoManager,
 								remoteDeploymentManagerFactory,
+								asyncDelayer,
 								loggerFactory.CreateLogger<DreamMaker>(),
 								sessionConfiguration,
 								metadata);
@@ -374,6 +385,7 @@ public async Task<IInstance> CreateInstance(IBridgeRegistrar bridgeRegistrar, Mo
 								jobManager,
 								eventConsumer,
 								remoteDeploymentManagerFactory,
+								asyncDelayer,
 								loggerFactory.CreateLogger<Instance>());
 
 							return instance;