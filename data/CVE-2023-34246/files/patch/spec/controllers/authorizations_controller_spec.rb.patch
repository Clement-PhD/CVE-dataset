@@ -2,7 +2,7 @@
 
 require "spec_helper"
 
-RSpec.describe Doorkeeper::AuthorizationsController do
+RSpec.describe Doorkeeper::AuthorizationsController, type: :controller do
   include AuthorizationRequestHelper
 
   class ActionDispatch::TestResponse
@@ -736,6 +736,50 @@ def query_params
     end
   end
 
+  describe "GET #new with skip_authorization false" do
+    let(:params) do
+      {
+        client_id: client.uid,
+        response_type: "token",
+        redirect_uri: client.redirect_uri,
+      }
+    end
+
+    before do
+      allow(Doorkeeper.config.access_token_model).to receive(:matching_token_for).and_return(true)
+      client.update_attribute :confidential, confidential_client
+
+      get :new, params: params
+    end
+
+    context "with matching token and confidential application" do
+      let(:confidential_client) { true }
+
+      it "redirects immediately" do
+        expect(controller).not_to receive(:render)
+        expect(response).to be_redirect
+        expect(response.location).to match(/^#{client.redirect_uri}/)
+      end
+
+      it "issues a token" do
+        expect(Doorkeeper::AccessToken.count).to be 1
+      end
+    end
+
+    context "with matching token and non-confidential application" do
+      let(:confidential_client) { false }
+
+      it "renders the new view" do
+        expect(response).to be_successful
+        expect(controller).to render_with :new
+      end
+
+      it "doesn't issue a token" do
+        expect(Doorkeeper::AccessToken.count).to be 0
+      end
+    end
+  end
+
   describe "GET #new in API mode" do
     before do
       allow(Doorkeeper.config).to receive(:api_only).and_return(true)