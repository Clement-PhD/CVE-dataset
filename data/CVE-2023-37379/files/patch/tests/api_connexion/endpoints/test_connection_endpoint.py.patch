@@ -16,6 +16,9 @@
 # under the License.
 from __future__ import annotations
 
+import os
+from unittest import mock
+
 import pytest
 
 from airflow.api_connexion.exceptions import EXCEPTIONS_LINK_MAP
@@ -603,6 +606,7 @@ def test_should_raises_401_unauthenticated(self):
 
 
 class TestConnection(TestConnectionEndpoint):
+    @mock.patch.dict(os.environ, {"AIRFLOW__CORE__TEST_CONNECTION": "Enabled"})
     def test_should_respond_200(self):
         payload = {"connection_id": "test-connection-id", "conn_type": "sqlite"}
         response = self.client.post(
@@ -614,6 +618,7 @@ def test_should_respond_200(self):
             "message": "Connection successfully tested",
         }
 
+    @mock.patch.dict(os.environ, {"AIRFLOW__CORE__TEST_CONNECTION": "Enabled"})
     def test_post_should_respond_400_for_invalid_payload(self):
         payload = {
             "connection_id": "test-connection-id",
@@ -635,3 +640,14 @@ def test_should_raises_401_unauthenticated(self):
         )
 
         assert_401(response)
+
+    def test_should_respond_403_by_default(self):
+        payload = {"connection_id": "test-connection-id", "conn_type": "sqlite"}
+        response = self.client.post(
+            "/api/v1/connections/test", json=payload, environ_overrides={"REMOTE_USER": "test"}
+        )
+        assert response.status_code == 403
+        assert response.text == (
+            "Testing connections is disabled in Airflow configuration. "
+            "Contact your deployment admin to enable it."
+        )
