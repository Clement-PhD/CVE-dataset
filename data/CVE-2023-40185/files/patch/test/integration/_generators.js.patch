@@ -5,28 +5,16 @@
 
 import * as fixturesUnix from "../fixtures/unix.js";
 import * as fixturesWindows from "../fixtures/win.js";
-import common from "../_constants.cjs";
 
-/**
- * Returns the shells officially supported by Shescape for the current platform.
- *
- * @yields {string} Supported shells for the current platform.
- */
-export function* platformShells() {
-  if (common.isWindows) {
-    yield* common.shellsWindows;
-  } else {
-    yield* common.shellsUnix;
-  }
-}
+import { constants } from "./_.js";
 
 /**
  * Returns the test fixtures for the current platform.
  *
  * @returns {object} All test fixtures for the current platform.
  */
 function getPlatformFixtures() {
-  if (common.isWindows) {
+  if (constants.isWindows) {
     return fixturesWindows;
   } else {
     return fixturesUnix;
@@ -40,13 +28,16 @@ function getPlatformFixtures() {
  * @returns {object} All test fixtures for `shell`.
  */
 function getShellFixtures(shell) {
-  shell = shell.toLowerCase();
+  let shellName = shell.toLowerCase();
+  if (constants.isWindows) {
+    shellName = shellName.endsWith(".exe") ? shellName : `${shellName}.exe`;
+  }
 
   const fixtures = getPlatformFixtures();
   return {
-    escape: Object.values(fixtures.escape[shell]).flat(),
-    flag: Object.values(fixtures.flag[shell]).flat(),
-    quote: Object.values(fixtures.quote[shell]).flat(),
+    escape: Object.values(fixtures.escape[shellName]).flat(),
+    flag: Object.values(fixtures.flag[shellName]).flat(),
+    quote: Object.values(fixtures.quote[shellName]).flat(),
   };
 }
 