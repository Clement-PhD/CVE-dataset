--- /dev/null
+++ /dev/null
@@ -97,45 +93,26 @@ describe('The import JSON action', function () {
   });
 
   it('calls showForm on invoke ', function () {
-    const objectPath = [folderObject];
+    const domainObject = {
+      composition: [],
+      name: 'Unnamed Folder',
+      type: 'folder',
+      location: '9f6c9dae-51c3-401d-92f1-c812de942922',
+      modified: 1637021471624,
+      persisted: 1637021471624,
+      id: '84438cda-a071-48d1-b9bf-d77bd53e59ba',
+      identifier: {
+        namespace: '',
+        key: '84438cda-a071-48d1-b9bf-d77bd53e59ba'
+      }
+    };
+
+    const objectPath = [domainObject];
 
     spyOn(openmct.forms, 'showForm').and.returnValue(Promise.resolve({}));
     spyOn(importFromJSONAction, 'onSave').and.returnValue(Promise.resolve({}));
     importFromJSONAction.invoke(objectPath);
 
     expect(openmct.forms.showForm).toHaveBeenCalled();
   });
-
-  it('protects against prototype pollution', (done) => {
-    spyOn(console, 'warn');
-    spyOn(openmct.forms, 'showForm').and.callFake(returnResponseWithPrototypePollution);
-
-    unObserve = openmct.objects.observe(folderObject, '*', callback);
-
-    importFromJSONAction.invoke([folderObject]);
-
-    function callback(newObject) {
-      const hasPollutedProto =
-        Object.prototype.hasOwnProperty.call(newObject, '__proto__') ||
-        Object.prototype.hasOwnProperty.call(Object.getPrototypeOf(newObject), 'toString');
-
-      // warning from openmct.objects.get
-      expect(console.warn).not.toHaveBeenCalled();
-      expect(hasPollutedProto).toBeFalse();
-
-      done();
-    }
-
-    function returnResponseWithPrototypePollution() {
-      const pollutedResponse = {
-        selectFile: {
-          name: 'imported object',
-          // eslint-disable-next-line prettier/prettier
-          body: "{\"openmct\":{\"c28d230d-e909-4a3e-9840-d9ef469dda70\":{\"identifier\":{\"key\":\"c28d230d-e909-4a3e-9840-d9ef469dda70\",\"namespace\":\"\"},\"name\":\"Unnamed Overlay Plot\",\"type\":\"telemetry.plot.overlay\",\"composition\":[],\"configuration\":{\"series\":[]},\"modified\":1695837546833,\"location\":\"mine\",\"created\":1695837546833,\"persisted\":1695837546833,\"__proto__\":{\"toString\":\"foobar\"}}},\"rootId\":\"c28d230d-e909-4a3e-9840-d9ef469dda70\"}"
-        }
-      };
-
-      return Promise.resolve(pollutedResponse);
-    }
-  });
 
