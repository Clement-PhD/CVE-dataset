@@ -1,6 +1,11 @@
 #![deny(rust_2018_idioms)]
 
-use std::{fs, io, path::PathBuf};
+#[cfg(not(target_os = "windows"))]
+use std::fs;
+use std::{io, path::PathBuf};
+
+#[cfg(windows)]
+use crate::windows::create_dir_recursive;
 
 pub type Result<T> = std::result::Result<T, Error>;
 
@@ -20,6 +25,10 @@ pub enum Error {
     #[error(display = "Missing %ALLUSERSPROFILE% environment variable")]
     NoProgramDataDir,
 
+    #[cfg(windows)]
+    #[error(display = "Failed to create security attributes")]
+    GetSecurityAttributes(#[error(source)] io::Error),
+
     #[cfg(all(windows, feature = "deduce-system-service"))]
     #[error(display = "Failed to deduce system service directory")]
     FailedToFindSystemServiceDir(#[error(source)] io::Error),
@@ -42,6 +51,7 @@ fn get_allusersprofile_dir() -> Result<PathBuf> {
     }
 }
 
+#[cfg(not(target_os = "windows"))]
 fn create_and_return(
     dir_fn: fn() -> Result<PathBuf>,
     permissions: Option<fs::Permissions>,
@@ -55,6 +65,16 @@ fn create_and_return(
     Ok(dir)
 }
 
+#[cfg(windows)]
+fn create_and_return(
+    dir_fn: fn() -> Result<PathBuf>,
+    set_security_permissions: bool,
+) -> Result<PathBuf> {
+    let dir = dir_fn()?;
+    create_dir_recursive(&dir, set_security_permissions)?;
+    Ok(dir)
+}
+
 mod cache;
 pub use crate::cache::{cache_dir, get_cache_dir, get_default_cache_dir};
 