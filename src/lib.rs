use std::path::Path;

use cve_commit::CveCommit;


pub mod cve_commit;
pub mod patch;
pub mod language;
pub mod errors;
mod params;

/// Load all cves data from a folder containing cve data
pub fn load_from_folder<P: AsRef<Path>>(folder_path: P) -> Vec<CveCommit> {
    let mut cve_commits : Vec<CveCommit> = vec![];

    let mut sort_entries = folder_path.as_ref().read_dir().unwrap().into_iter()
        .map(
            |entry| entry.unwrap()
        ).collect::<Vec<_>>();

    sort_entries.sort_by(|a, b| a.file_name().cmp(&b.file_name()));

    for entry in sort_entries {
        let file_type = entry.file_type().unwrap();
        if file_type.is_file() {
            let cve_zip_folder = entry.path();
            let cve_commit = CveCommit::new_from_zip(cve_zip_folder);
            cve_commits.push(cve_commit);

        }
    }
    
    

    cve_commits
}